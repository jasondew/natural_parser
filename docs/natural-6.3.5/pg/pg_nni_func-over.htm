
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   
      <meta name="generator" content="Sagdoc XSL Stylesheets">
      <link rel="stylesheet" type="text/css" href="../general/style2.css"><script language="JavaScript" src="../general/selbox.js"></script><script type="text/javascript" language="javascript">
         <!--
window.name = 'contents';
//--></script><title>Interface Functions</title>
   </head>
   <body bgcolor="#FFFFFF" background="../graphics/bar.png" style="margin-left: 20px;">
      <div><a name="pg_nni_func-over"></a></div>
      <div class="noprint">
         <div class="nospytext">
            <table border="0" cellpadding="0" cellspacing="0" width="97%">
               <col width="15%">
               <col width="34%">
               <col width="48%">
               <tr>
                  <td colspan="2" class="topline"><a name="Top"></a>&nbsp;<img src="../graphics/natux_logo.png"></td>
                  <td class="topline" align="right"><img src="../graphics/sag_logo.png">&nbsp;
                  </td>
               </tr>
               <tr>
                  <td class="header" nowrap><img src="../graphics/blank.png" width="3" height="10"></td>
                  <td class="header"><img src="../graphics/blank.png" width="3">Version&nbsp;6.3.5 for UNIX
                  </td>
                  <td class="toplinks" align="right" nowrap><img src="../graphics/blank.png" width="3"><a class="navig" target="_blank" href="../fts/search.htm" onclick="window.open('../fts/search.htm', 'fts', 'dependent,width=555,height=420,resizable'); return false">SEARCH</a>
                     &nbsp;&nbsp;<a class="navig" href="javascript:sized_window('../navig/navig.htm')" onclick="document.cookie='sagphdcc=../pg/pg_nni_func-over.htm;path=/'; window.open('../navig/navig.htm', 'nvgtr', 'dependent,width=450,height=270,resizable'); return false">CONTENTS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="http://documentation.softwareag.com/natural/nat635unx/pdf/pg/pg_nni_func-over.pdf">PDF PAGE</a>
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="../general/print.htm">PDF BOOKS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" href="../overview.htm">HOME</a>
                     &nbsp;&nbsp;<a class="navig" href="pg_nni-over.htm">UP</a>
                     &nbsp;&nbsp;<a class="navig" href="pg_nni_interf_inst_nat_sess.htm">PREV</a>
                     &nbsp;&nbsp;<a class="navig" href="pg_nni_para_des_struc.htm">NEXT</a></td>
               </tr>
            </table>
         </div>
      </div>
      <div class="nospytext">
         <table cellpadding="5" cellspacing="0" border="0" align="right" class="selbox">
            <tbody>
               <tr>
                  <td align="right"><span class="module">Quick Reference</span></td>
               </tr>
               <tr>
                  <td align="right">
                     <form>
                        <p><select name="menu" size="8" onchange="reload(this.form)">
                              <option value="#pg_nni_callnat">nni_callnat</option>
                              <option value="#pg_nni_create_method_parm">nni_create_method_parm</option>
                              <option value="#pg_nni_create_module_parm">nni_create_module_parm</option>
                              <option value="#pg_nni_create_object">nni_create_object</option>
                              <option value="#pg_nni_create_parm">nni_create_parm</option>
                              <option value="#pg_nni_create_prop_parm">nni_create_prop_parm</option>
                              <option value="#pg_nni_delete_object">nni_delete_object</option>
                              <option value="#pg_nni_delete_parm">nni_delete_parm</option>
                              <option value="#pg_nni_enter">nni_enter</option>
                              <option value="#pg_nni_free_interface">nni_free_interface</option>
                              <option value="#pg_nni_from_string">nni_from_string</option>
                              <option value="#pg_nni_get_interface">nni_get_interface</option>
                              <option value="#pg_nni_get_parm_array_length">nni_get_parm_array_length</option>
                              <option value="#pg_nni_get_parm_array">nni_get_parm_array</option>
                              <option value="#pg_nni_get_parm_info">nni_get_parm_info</option>
                              <option value="#pg_nni_get_parm">nni_get_parm</option>
                              <option value="#pg_nni_get_property">nni_get_property</option>
                              <option value="#pg_nni_init_parm_da">nni_init_parm_da</option>
                              <option value="#pg_nni_init_parm_d">nni_init_parm_d</option>
                              <option value="#pg_nni_init_parm_sa">nni_init_parm_sa</option>
                              <option value="#pg_nni_init_parm_s">nni_init_parm_s</option>
                              <option value="#pg_nni_initialize">nni_initialize</option>
                              <option value="#pg_nni_is_initialized">nni_is_initialized</option>
                              <option value="#pg_nni_leave">nni_leave</option>
                              <option value="#pg_nni_logoff">nni_logoff</option>
                              <option value="#pg_nni_logon">nni_logon</option>
                              <option value="#pg_nni_parm_count">nni_parm_count</option>
                              <option value="#pg_nni_put_parm_array">nni_put_parm_array</option>
                              <option value="#pg_nni_put_parm">nni_put_parm</option>
                              <option value="#pg_nni_resize_parm_array">nni_resize_parm_array</option>
                              <option value="#pg_nni_send_method">nni_send_method</option>
                              <option value="#pg_nni_set_property">nni_set_property</option>
                              <option value="#pg_nni_to_string">nni_to_string</option>
                              <option value="#pg_nni_try_enter">nni_try_enter</option>
                              <option value="#pg_nni_uninitialize">nni_uninitialize</option></select></p>
                     </form>
                  </td>
               </tr>
            </tbody>
         </table>
      </div>
      <div class="nospytext" style="margin-top:0.25in;">
         <div><span class="module">&nbsp;&#8212;&nbsp;&nbsp;Programming Guide&nbsp;&nbsp;&#8212;</span></div>
      </div> 
        
      <div class="nospytext">
         <h1>Interface Functions</h1>
      </div> 
          
         
         
         
      <p>For detailed information on the individual functions, use
             the selection box on the right.
      </p>
      <hr>
      <div><a name="pg_nni_get_interface"></a></div> 
         
      <h2> 
             <a name="x568"></a>nni_get_interface
      </h2> 
          
          
      <h4 class="floating-title">Syntax </h4> 
          
      <div><a name="d0e78108"></a></div> 
           <pre class="text">int nni_get_interface( int iVersion, void** ppnni_func );</pre> 
          <p>The function returns an instance of the Natural Native Interface.</p> 
          
      <p>An application calls this function after having retrieved and loaded the
              interface library with platform depending system calls. The function returns a
              pointer to a structure that contains function pointers to the individual
              interface functions. The functions returned in the structure may differ between
              interface versions.
      </p> 
          
      <p>Instead of a specific interface version, the caller can also specify the
              constant <code>NNI_VERSION_CURR</code>, which always refers to the most recent
              interface version. The interface version number belonging to a given Natural
              version is defined in the header file <cite>natni.h</cite> that is
              delivered with that version. In Natural Version <var>n.n</var>,
              the interface version number is defined as
              <code>NNI_VERSION_<var>nn</var></code>.
              <code>NNI_VERSION_CURR</code> is also defined as
              <code>NNI_VERSION_<var>nn</var></code>. If the Natural version
              against which the function is called does not support the requested interface
              version, the error code <code>NNI_RC VERSION_ERROR</code> is returned.
              Otherwise the return code is <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a>.
      </p> 
          
      <p>The pointer returned by the function represents one instance of the
              interface. In order to use this interface instance, the application holds on to
              that pointer and passes it to subsequent interface calls.
      </p> 
          
      <p>Usually the application will subsequently initialize a Natural session
              by calling <a href="pg_nni_func-over.htm#pg_nni_initialize"><code>nni_initialize</code></a> on the
              given instance. After the application has finished using that Natural session,
              it calls <a href="pg_nni_func-over.htm#pg_nni_uninitialize"><code>nni_uninitialize</code></a> on that
              instance. After that it can initialize a different Natural session on the same
              interface instance. After the application has finished using the interface
              instance entirely, it calls <a href="pg_nni_func-over.htm#pg_nni_free_interface"><code>nni_free_interface</code></a> on
              that instance.
      </p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>iVersion</code></td> 
                       
               <td>Interface version number.
                  (<code>NNI_VERSION_<var>nn</var></code> or
                           <code>NNI_VERSION_CURR</code>).
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>ppnni_func</code></td> 
                       
               <td>Points to an NNI interface instance on return.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_VERSION_ERROR"><code>NNI_RC_VERSION_ERROR</code></a>
                           
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_free_interface"></a></div> 
         
      <h2> 
             <a name="x569"></a>nni_free_interface
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e78318"></a></div> 
           <pre class="text">int nni_free_interface(void* pnni_func);</pre> 
          <p>An application calls this function after it has finished using the
              interface instance and has uninitialized the Natural session it hosts. The
              function frees the resources occupied by that interface instance.
      </p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
         
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_initialize"></a></div> 
         
      <h2> 
             <a name="x570"></a>nni_initialize
      </h2> 
          
          
      <h4 class="floating-title">Syntax </h4> 
          
      <div><a name="d0e78430"></a></div> 
           <pre class="text">int nni_initialize(void* pnni_func, const char* szCmdLine, void*, void*);</pre> 
          <p>The function initializes a Natural session with a given command line.
              The syntax and semantics of the command line is the same as when Natural is
              started interactively. If a Natural session has already been initialized on the
              given interface instance, that session is implicitly uninitialized before the
              new session is initialized.
      </p> 
          
      <p>The command line must be specified in the way that the Natural
              initialization can be completed without user interaction. This means especially
              that if a program is passed on the stack or a startup program is specified,
              that program must not perform an <a href="../sm/input.htm"><code>INPUT</code></a> statement that is not
              satisfied from the stack. Otherwise the subsequent behavior of the Natural
              session is undetermined.
      </p> 
          
      <p>The Natural session is initialized as batch session and in server mode.
              This means that the usage of certain statements and commands in the executed
              Natural modules is restricted. 
      </p> 
          
      <p>When initalizing a Natural session under Natural Security, the command
              line must contain a <a href="../syscom/logon.htm"><code>LOGON</code></a> command
              to a freely chosen default library under which the session will be started, and
              an appropriate user ID and password.
      </p> 
          
      <p>Example:</p> 
          <pre class="verbatim">
int iRes = 
pnni_func-&gt;nni_initialize( pnni_func, "STACK=(LOGON,MYLIB,MYUSER,MYPASS)", 0, 0);
</pre> 
          <p>If the application later calls <a href="pg_nni_func-over.htm#pg_nni_logon"><code>nni_logon</code></a> to a different
              library with a different user ID and afterwards calls
              <a href="pg_nni_func-over.htm#pg_nni_logoff"><code>nni_logoff</code></a>, the
              Natural session will be reset to the library and user ID that was passed during
              <code>nni_initialize</code>.
      </p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>szCmdLine</code></td> 
                       
               <td>Natural command line. May be a null pointer.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>void*</code></td> 
                       
               <td>For future use. Must be a null pointer.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>void*</code></td> 
                       
               <td>For future use. Must be a null pointer.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><var>rc</var>, where
                    <var>rc</var> &lt; <a href="pg_nni_return_codes.htm#NNI_RC_SERR_OFFSET"><code>NNI_RC_SERR_OFFSET</code></a>
                           
               </td> 
                       
               <td>Natural startup error. The real Natural startup error number as
                  documented in <a href="../ops/ops-exitcodes.htm#ops-exitcodes-startup">Natural Startup
                              Errors</a> (which is part of the
                           <cite>Operations</cite> documentation) can be determined by the
                           following calculation: 
                           
                  <p><var>startup-error-nr</var> = -
                               (<var>rc</var> - <a href="pg_nni_return_codes.htm#NNI_RC_SERR_OFFSET"><code>NNI_RC_SERR_OFFSET</code></a>)
                  </p> 
                           
                  <p>Warnings that occur during session initialization are
                               ignored.
                  </p>
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>&gt; 0</td> 
                       
               <td>Natural error number.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
         
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_is_initialized"></a></div> 
         
      <h2> 
             <a name="x571"></a>nni_is_initialized
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e78679"></a></div> 
           <pre class="text">int nni_is_initialized( void* pnni_func, int* piIsInit );</pre> 
          <p>The function checks if the interface instance contains an initialized
              Natural session.
      </p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>piIsInit</code></td> 
                       
               <td>Returns 0, if no Natural session is initialized, a non-zero
                  value otherwise.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
         
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_uninitialize"></a></div> 
         
      <h2> 
             <a name="x572"></a> nni_uninitialize
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e78814"></a></div> 
           <pre class="text">int nni_uninitialize(void* pnni_func);</pre> 
          <p>The function uninitializes the Natural session hosted by the given
              interface instance.
      </p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
         
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_enter"></a></div> 
         
      <h2> 
             <a name="x573"></a>nni_enter
      </h2> 
          
          
      <h4 class="floating-title"> Syntax</h4> 
          
      <div><a name="d0e78926"></a></div> 
           <pre class="text">int nni_enter(void* pnni_func);</pre> 
          <p>The function lets the current thread wait for exclusive access to the
              interface instance and the Natural session it hosts. A thread calls this
              function if it wants to issue a series of interface calls that may not be
              interrupted by other threads. The thread releases the eclusive access to the
              interface instance by calling <a href="pg_nni_func-over.htm#pg_nni_leave"><code>nni_leave</code></a>.
      </p> 
          
      <h4 class="floating-title"> Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title"> Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_try_enter"></a></div> 
         
      <h2> 
             <a name="x574"></a> nni_try_enter
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e79043"></a></div> 
           <pre class="text">int nni_try_enter(void* pnni_func);</pre> 
          <p>The function behaves like <a href="pg_nni_func-over.htm#pg_nni_enter"><code>nni_enter</code></a> except that it does
              not block the thread and instead always returns immediately. If a different
              thread already has exclusive access to the interface instance, the function
              returns <a href="pg_nni_return_codes.htm#NNI_RC_LOCKED"><code>NNI_RC_LOCKED</code></a>.
      </p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_LOCKED"><code>NNI_RC_LOCKED</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
         
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_leave"></a></div> 
         
      <h2> 
             <a name="x575"></a> nni_leave
      </h2> 
          
          
      <h4 class="floating-title"> Syntax</h4> 
          
      <div><a name="d0e79176"></a></div> 
           <pre class="text">int nni_leave(void* pnni_func);</pre> 
          <p>The function releases exclusive access to the interface instance and
              allows other threads to access that instance and the Natural session it
              hosts.
      </p> 
          
      <h4 class="floating-title"> Parameters </h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title"> Return Codes </h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_logon"></a></div> 
         
      <h2> 
             <a name="x576"></a> nni_logon
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e79289"></a></div> 
           <pre class="text">int nni_logon(void* pnni_func, const char* szLibrary, const char* szUser, const char* szPassword);</pre> 
          <p>The function performs a <a href="../syscom/logon.htm"><code>LOGON</code></a> to the
              specified Natural library.
      </p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>szLibrary</code></td> 
                       
               <td>Name of the Natural library.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>szUser</code></td> 
                       
               <td>Name of the Natural user. May be a null pointer, if the Natural
                  session is not running under Natural Security or if
                  <a href="../parms/auto.htm"><code>AUTO=ON</code></a> was
                           used during initialization.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>szPassword</code></td> 
                       
               <td>Password of that user. May be a null pointer, if the Natural
                  session is not running under Natural Security or if
                  <code>AUTO=ON</code> was used during initialization..
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>&gt; 0</td> 
                       
               <td>Natural error number.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_logoff"></a></div> 
         
      <h2> 
             <a name="x577"></a> nni_logoff 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e79478"></a></div> 
           <pre class="text">int nni_logoff(void* pnni_func);
</pre> 
          <p>The function performs a <a href="../syscom/logoff.htm"><code>LOGOFF</code></a> from
              the current Natural library. This corresponds to a
              <a href="../syscom/logon.htm"><code>LOGON</code></a>
              to the previously active library and user ID.
      </p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>&gt; 0</td> 
                       
               <td>Natural error number.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_callnat"></a></div> 
         
      <h2> 
             <a name="x578"></a> nni_callnat 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e79634"></a></div> 
           <pre class="text">int nni_callnat(void* pnni_func, const char* szName, int iParm, struct parameter_description* rgDesc, struct natural_exception* pExcep);</pre> 
          <p>The function calls a Natural subprogram.</p> 
          
      <p>The function receives its parameters as an array of
              <code>parameter_description</code> structures. The caller creates
              these structures using NNI functions in the following way:
      </p> 
          
      <ul> 
              
         <li> 
                  
            <p class="initem">Use one the functions <code>create_parm</code> or
                      <code>create_module_parm</code> to create an appropriate parameter set for the
                      subprogram.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">If you have used <code>create_parm</code>, use the functions
                      <code>init_parm_*</code> to initialize each parameter to the appropriate
                      Natural data format. If you have used <code>create_module_parm</code>, the
                      parameters are already initialized to the appropriate Natural data format.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Assign a value to each parameter, using one the functions
                      <a href="pg_nni_func-over.htm#pg_nni_put_parm"><code>nni_put_parm</code></a> or
                      <a href="pg_nni_func-over.htm#pg_nni_put_parm_array"><code>nni_put_parm_array</code></a>.
                      
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Call <a href="pg_nni_func-over.htm#pg_nni_get_parm"><code>nni_get_parm</code></a> on each
                      parameter in the set. This fills the
                      <code>parameter_description</code> structures.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Pass the array of <code>parameter_description</code>
                      structures to the function <code>nni_callnat</code>.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">After the call has been executed, extract the modified parameter
                      values from the parameter set using the function
                      <a href="pg_nni_func-over.htm#pg_nni_get_parm"><code>nni_get_parm</code></a> or
                      <a href="pg_nni_func-over.htm#pg_nni_get_parm_array"><code>nni_get_parm_array</code></a>.
            </p>
                  
                 
         </li> 
             
      </ul> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>szName</code></td> 
                       
               <td>Name of the Natural subprogram.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iParm</code></td> 
                       
               <td>Number of parameters. Indicates the number of occurrences of the
                  array <code>rgDesc</code>.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>rgDesc</code></td> 
                       
               <td>An array of <code>parm_description</code> structures
                  containing the parameters for the subprogram. If the subprogram does not expect
                  parameters, the caller passes a null pointer.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>pExcep</code></td> 
                       
               <td>Pointer to a <code>natural_exception</code> structure.
                  If a Natural error occurs during execution of the subprogram,this structure is
                  filled with Natural error information. The caller may specify a null pointer.
                  In this case no extended error information is returned.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NO_MEMORY"><code>NNI_RC_NO_MEMORY</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>&gt; 0</td> 
                       
               <td>Natural error number.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_create_object"></a></div> 
         
      <h2> 
             <a name="x579"></a> nni_create_object 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e79933"></a></div> 
           <pre class="text">int nni_create_object(void* pnni_func, const char* szName, int iParm, struct parameter_description* rgDesc, struct natural_exception* pExcep); </pre> 
          <p>Creates a Natural object (an instance of a Natural class).</p> 
          
      <p>The function receives its parameters as a one-element array of
              <code>parameter_description</code> structures. The caller creates the
              structures using NNI functions in the following way:
      </p> 
          
      <ul> 
              
         <li> 
                  
            <p class="initem">Use the function <a href="pg_nni_func-over.htm#pg_nni_create_parm"><code>nni_create_parm</code></a> to create
                      parameter set with one element.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Use the function <a href="pg_nni_func-over.htm#pg_nni_init_parm_s"><code>nni_init_parm_s</code></a> to
                      initialize the parameter with the type <code>HANDLE OF OBJECT</code>.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Call <a href="pg_nni_func-over.htm#pg_nni_get_parm_info"><code>nni_get_parm_info</code></a> on
                      this parameter. This fills the <code>parameter_description</code>
                      structure.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Pass the <code>parameter_description</code> structure to the
                      function <code>nni_create_object</code>.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">After the call has been executed, extract the modified parameter value
                      from the parameter set using one the function
                      <a href="pg_nni_func-over.htm#pg_nni_get_parm"><code>nni_get_parm</code></a>.
            </p> 
                 
         </li> 
             
      </ul> 
          
      <p>The parameters passed in <code>rgDesc</code> have the
              following meaning:
      </p> 
          
      <ul> 
              
         <li> 
                  
            <p class="initem">The first (and only) parameter must be initialized with the data type
                      <code>HANDLE OF OBJECT</code> and contains on return the Natural object handle
                      of the newly created object.
            </p> 
                 
         </li> 
             
      </ul> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>szName</code></td> 
                       
               <td>Name of the class.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iParm</code></td> 
                       
               <td>Number of parameters. Indicates the number of occurrences of the
                  array <code>rgDesc</code>.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>rgDesc</code></td> 
                       
               <td>An array of <code>parm_description</code> structures
                  containing the parameters for the object creation. The caller always passes one
                  parameter, which will contain the object handle on return.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>pExcep</code></td> 
                       
               <td>Pointer to a <code>natural_exception</code> structure.
                  If a Natural error occurs during object creation, this structure is filled with
                  Natural error information. The caller may specify a null pointer. In this case
                  no extended exception information is returned.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NO_MEMORY"><code>NNI_RC_NO_MEMORY</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>&gt; 0</td> 
                       
               <td>Natural error number.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_send_method"></a></div> 
         
      <h2> 
             <a name="x580"></a> nni_send_method 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e80228"></a></div> 
           <pre class="text">int nni_send_method(void* pnni_func, const char* szName, int iParm, struct parameter_description* rgDesc, struct natural_exception* pExcep);</pre> 
          <p>Sends a method call to a Natural object (an instance of a Natural
              class).
      </p> 
          
      <p>The function receives its parameters as an array of
              <code>parameter_description</code> structures. The caller creates
              these structures using NNI functions in the following way:
      </p> 
          
      <ul> 
              
         <li> 
                  
            <p class="initem">Use the function <a href="pg_nni_func-over.htm#pg_nni_create_parm"><code>nni_create_parm</code></a> or
                      <a href="pg_nni_func-over.htm#pg_nni_create_method_parm"><code>nni_create_method_parm</code></a>
                      to create a matching parameter set.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">If you have used <code>create_parm</code>, use the functions
                      <code>init_parm_*</code> to initialize each parameter to the appropriate
                      Natural data format. If you have used
                      <a href="pg_nni_func-over.htm#pg_nni_create_method_parm"><code>nni_create_method_parm</code></a>,
                      the parameters are already initialized to the appropriate Natural data
                      format.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Assign a value to each parameter using one the functions
                      <a href="pg_nni_func-over.htm#pg_nni_put_parm"><code>nni_put_parm</code></a> or
                      <a href="pg_nni_func-over.htm#pg_nni_put_parm_array"><code>nni_put_parm_array</code></a>.
            </p>
                  
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Call <a href="pg_nni_func-over.htm#pg_nni_get_parm_info"><code>nni_get_parm_info</code></a> on
                      each parameter in the set. This fills the
                      <code>parameter_description</code> structures.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Pass the array of <code>parameter_description</code>
                      structures to the function <code>nni_send_method</code>.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">After the call has been executed, extract the modified parameter
                      values from the parameter set using one of the
                      <a href="pg_nni_func-over.htm#pg_nni_get_parm"><code>nni_get_parm</code></a>
                      functions.
            </p> 
                 
         </li> 
             
      </ul> 
          
      <p>The parameters passed in <code>rgDesc</code> have the
              following meaning:
      </p> 
          
      <ul> 
              
         <li> 
                  
            <p class="initem">The first parameter contains the object handle.</p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">The second parameter must be initialized to the data type of the
                      method return value. If the method does not have a return value, the second
                      parameter remains not initialized. On return from the method call, this
                      parameter contains the return value of the method.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">The remaining parameters are the method parameters.</p> 
                 
         </li> 
             
      </ul> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>szName</code></td> 
                       
               <td>Name of the method.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iParm</code></td> 
                       
               <td>Number of parameters. Indicates the number of occurrences of the
                  array <code>rgDesc</code>. This is always 2 + the number of method
                           parameters.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>rgDesc</code></td> 
                       
               <td>An array of <code>parm_description</code> structures
                  containing the parameters for the method. If the method does not expect
                  parameters, the caller still passes two parameters, the first for the object
                  handle and the second for the return value.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>pExcep</code></td> 
                       
               <td>Pointer to a <code>natural_exception</code> structure.
                  If a Natural error occurs during execution of the method, this structure is
                  filled with Natural error information. The caller may specify a null pointer.
                  In this case no extended exception information is returned.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NO_MEMORY"><code>NNI_RC_NO_MEMORY</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>&gt; 0</td> 
                       
               <td>Natural error number.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_get_property"></a></div> 
         
      <h2> 
             <a name="x581"></a> nni_get_property 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e80553"></a></div> 
           <pre class="text">int nni_get_property(void* pnni_func, const char* szName, int iParm, struct parameter_description* rgDesc, struct natural_exception* pExcep); </pre> 
          <p>Retrieves a property value of a Natural object (an instance of a Natural
              class).
      </p> 
          
      <p>The function receives its parameters as an array of
              <code>parameter_description</code> structures. The caller creates
              these structures using NNI functions in the following way:
      </p> 
          
      <ul> 
              
         <li> 
                  
            <p class="initem">Use the function <a href="pg_nni_func-over.htm#pg_nni_create_parm"><code>nni_create_parm</code></a> or
                      <a href="pg_nni_func-over.htm#pg_nni_create_method_parm"><code>nni_create_method_parm</code></a>
                      to create a matching parameter set.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">If you have used <code>create_parm</code>, use the functions
                      <code>init_parm_*</code> to initialize each parameter to the appropriate
                      Natural data format. If you have used <code>create_method_parm</code>, the
                      parameters are already initialized to the appropriate Natural data format.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Assign a value to each parameter using one the functions
                      <a href="pg_nni_func-over.htm#pg_nni_put_parm"><code>nni_put_parm</code></a> or
                      <a href="pg_nni_func-over.htm#pg_nni_put_parm_array"><code>nni_put_parm_array</code></a>.
            </p>
                  
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Call <a href="pg_nni_func-over.htm#pg_nni_get_parm_info"><code>nni_get_parm_info</code></a> on
                      each parameter in the set. This fills the
                      <code>parameter_description</code> structures.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Pass the array of <code>parameter_description</code>
                      structures to the function <a href="pg_nni_func-over.htm#pg_nni_send_method"><code>nni_send_method</code></a>.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">After the call has been executed, extract the modified parameter
                      values from the parameter set using one of the
                      <a href="pg_nni_func-over.htm#pg_nni_get_parm"><code>nni_get_parm</code></a>
                      functions.
            </p> 
                 
         </li> 
             
      </ul> 
          
      <p>The parameters passed in <code>rgDesc</code> have the
              following meaning:
      </p> 
          
      <ul> 
              
         <li> 
                  
            <p class="initem">The first parameter contains the object handle.</p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">The second parameter is initialized to the data type of the property.
                      On return from the property access, this parameter contains the property
                      value.
            </p> 
                 
         </li> 
             
      </ul> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>szName</code></td> 
                       
               <td>Name of the property.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iParm</code></td> 
                       
               <td>Number of parameters. Indicates the number of occurrences of the
                  array <code>rgDesc</code>. This is always 2.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>rgDesc</code></td> 
                       
               <td>An array of <code>parm_description</code> structures
                  containing the parameters for the property access. The caller always passes two
                  parameters, the first for the object handle and the second for the returned
                           property value.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>pExcep</code></td> 
                       
               <td>Pointer to a <code>natural_exception</code> structure.
                  If a Natural error occurs during property access, this structure is filled with
                  Natural error information. The caller may specify a null pointer. In this case
                  no extended exception information is returned.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NO_MEMORY"><code>NNI_RC_NO_MEMORY</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>&gt; 0</td> 
                       
               <td>Natural error number.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_set_property"></a></div> 
         
      <h2> 
             <a name="x582"></a> nni_set_property 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e80872"></a></div> 
           <pre class="text">int nni_set_property(void* pnni_func, const char* szName, int iParm, struct parameter_description* rgDesc, struct natural_exception* pExcep);</pre> 
          <p>Assigns a property value to a Natural object (an instance of a Natural
              class).
      </p> 
          
      <p>The function receives its parameters as an array of
              <code>parameter_description</code> structures. The caller creates
              these structures using NNI functions in the following way:
      </p> 
          
      <ul> 
              
         <li> 
                  
            <p class="initem">Use the function <a href="pg_nni_func-over.htm#pg_nni_create_parm"><code>nni_create_parm</code></a> or
                      <a href="pg_nni_func-over.htm#pg_nni_create_prop_parm"><code>nni_create_prop_parm</code></a>
                      to create a matching parameter set.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">If you have used <code>create_parm</code>, use the functions
                      <code>init_parm_*</code> to initialize each parameter to the appropriate
                      Natural data format. If you have used <code>create_prop_parm</code>, the
                      parameters are already initialized to the appropriate Natural data format.
                      Assign a value to each parameter using one of the
                      <a href="pg_nni_func-over.htm#pg_nni_put_parm"><code>nni_put_parm</code></a>
                      functions.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Assign a value to each parameter using one the functions
                      <a href="pg_nni_func-over.htm#pg_nni_put_parm"><code>nni_put_parm</code></a> or
                      <a href="pg_nni_func-over.htm#pg_nni_put_parm_array"><code>nni_put_parm_array</code></a>.
            </p>
                  
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Call <a href="pg_nni_func-over.htm#pg_nni_get_parm_info"><code>nni_get_parm_info</code></a> on
                      each parameter in the set. This fills the
                      <code>parameter_description</code> structures.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Pass the array of <code>parameter_description</code>
                      structures to the function <code>nni_set_property</code>.
            </p> 
                 
         </li> 
             
      </ul> 
          
      <p>The parameters passed in <code>rgDesc</code> have the
              following meaning:
      </p> 
          
      <ul> 
              
         <li> 
                  
            <p class="initem">The first parameter contains the object handle.</p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">The second parameter contains the property value.</p> 
                 
         </li> 
             
      </ul> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>szName</code></td> 
                       
               <td>Name of the property.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iParm</code></td> 
                       
               <td>Number of parameters. Indicates the number of occurrences of the
                  array <code>rgDesc</code>. This is always 2.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>rgDesc</code></td> 
                       
               <td>An array of <code>parm_description</code> structures
                  containing the parameters for the property access. The caller always passes two
                  parameters, the first for the object handle and the second for the property
                           value.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>pExcep</code></td> 
                       
               <td>Pointer to a <code>natural_exception</code> structure.
                  If a Natural error occurs during property access, this structure is filled with
                  Natural error information. The caller may specify a null pointer. In this case
                  no extended exception information is returned.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NO_MEMORY"><code>NNI_RC_NO_MEMORY</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>&gt; 0</td> 
                       
               <td>Natural error number.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_delete_object"></a></div> 
         
      <h2> 
             <a name="x583"></a> nni_delete_object 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e81184"></a></div> 
           <pre class="text">int nni_delete_object(void* pnni_func, int iParm, struct parameter_description* rgDesc, struct natural_exception* pExcep);</pre> 
          <p>Deletes a Natural object (an instance of a Natural class) created with
              <a href="pg_nni_func-over.htm#pg_nni_create_object"><code>nni_create_object</code></a>.
      </p> 
          
      <p>The function receives its parameters as a one-element array of
              <code>parameter_description</code> structures. The caller creates the
              structures using NNI functions in the following way:
      </p> 
          
      <ul> 
              
         <li> 
                  
            <p class="initem">Use the function <a href="pg_nni_func-over.htm#pg_nni_create_parm"><code>nni_create_parm</code></a> to create
                      parameter set with one element.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Use the function <a href="pg_nni_func-over.htm#pg_nni_init_parm_s"><code>nni_init_parm_s</code></a> to
                      initialize the parameter with the type <code>HANDLE OF OBJECT</code>.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Assign a value to the parameter using one the functions
                      <a href="pg_nni_func-over.htm#pg_nni_put_parm"><code>nni_put_parm</code></a>.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Call <a href="pg_nni_func-over.htm#pg_nni_get_parm_info"><code>nni_get_parm_info</code></a> on
                      this parameter. This fills the <code>parameter_description</code>
                      structure.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Pass the <code>parameter_description</code> structure to the
                      function <code>nni_delete_object</code>.
            </p> 
                 
         </li> 
             
      </ul> 
          
      <p>The parameters passed in <code>rgDesc</code> have the
              following meaning:
      </p> 
          
      <ul> 
              
         <li> 
                  
            <p class="initem">The first (and only) parameter must be initialized with the data type
                      <code>HANDLE OF OBJECT</code> and contains the Natural object handle of the
                      object to be deleted.
            </p> 
                 
         </li> 
             
      </ul> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>szName</code></td> 
                       
               <td>Name of the class.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iParm</code></td> 
                       
               <td>Number of parameters. Indicates the number of occurrences of the
                  array <code>rgDesc</code>. This is always 1.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>rgDesc</code></td> 
                       
               <td>An array of <code>parm_description</code> structures
                  containing the parameters for the object creation. The caller always passes one
                  parameter, which contains the object handle.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>pExcep</code></td> 
                       
               <td>Pointer to a <code>natural_exception</code> structure.
                  If a Natural error occurs during object creation, this structure is filled with
                  Natural error information. The caller may specify a null pointer. In this case
                  no extended exception information is returned.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NO_MEMORY"><code>NNI_RC_NO_MEMORY</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>&gt; 0</td> 
                       
               <td>Natural error number.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_create_parm"></a></div> 
         
      <h2> 
             <a name="x584"></a>nni_create_parm 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e81483"></a></div> 
           <pre class="text">int nni_create_parm(void* pnni_func, int iParm, void** pparmhandle);</pre> 
          <p>Creates a set of parameters that can be passed to a Natural module.</p> 
          
      <p>The parameters contained in the set are not yet initialized to specific
              Natural data types. Before using the parameter set in a call to
              <a href="pg_nni_func-over.htm#pg_nni_callnat"><code>nni_callnat</code></a>,
              <a href="pg_nni_func-over.htm#pg_nni_create_object"><code>nni_create_object</code></a>,
              <a href="pg_nni_func-over.htm#pg_nni_send_method"><code>nni_send_method</code></a>,
              <a href="pg_nni_func-over.htm#pg_nni_set_property"><code>nni_set_property</code></a> or
              <a href="pg_nni_func-over.htm#pg_nni_get_property"><code>nni_get_property</code></a>:
      </p> 
          
      <ul> 
              
         <li> 
                  
            <p class="initem">Initialize each parameter to the required Natural data type using one
                      of the functions <a href="pg_nni_func-over.htm#pg_nni_init_parm_s"><code>nni_init_parm_s</code></a>,
                      <a href="pg_nni_func-over.htm#pg_nni_init_parm_sa"><code>nni_init_parm_sa</code></a>,
                      <a href="pg_nni_func-over.htm#pg_nni_init_parm_d"><code>nni_init_parm_d</code></a>
                      or <a href="pg_nni_func-over.htm#pg_nni_init_parm_da"><code>nni_init_parm_da</code></a>.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Assign a value to each parameter using one of the functions
                      <a href="pg_nni_func-over.htm#pg_nni_put_parm"><code>nni_put_parm</code></a> or
                      <a href="pg_nni_func-over.htm#pg_nni_put_parm_array"><code>nni_put_parm_array</code></a>.
            </p>
                  
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Turn each parameter into a <code>parm_description</code>
                      structure using the function <a href="pg_nni_func-over.htm#pg_nni_get_parm_info"><code>nni_get_parm_info</code></a>.
            </p> 
                 
         </li> 
             
      </ul> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iParm</code></td> 
                       
               <td>Requested number of parameters. The maxinum number of parameters
                  is 32767.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>pparmhandle</code></td> 
                       
               <td>Points a to a pointer to a parameter set on return.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_ILL_PNUM"><code>NNI_RC_ILL_PNUM</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>&gt; 0</td> 
                       
               <td>Natural error number.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_create_module_parm"></a></div> 
         
      <h2> 
             <a name="x585"></a> nni_create_module_parm 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e81739"></a></div> 
           <pre class="text">int nni_create_module_parm(void* pnni_func, char chType, const char* szName, void** pparmhandle); </pre> 
          <p>Creates a set of parameters that can be used in a call to
              <a href="pg_nni_func-over.htm#pg_nni_callnat"><code>nni_callnat</code></a>. The
              function enables an application to dynamically explore the signature of a
              callable Natural module.
      </p> 
          
      <p>The parameters contained in the returned set are already initialized to
              Natural data types according to the parameter data area of the specified
              module. Before using the parameter set in a call to
              <a href="pg_nni_func-over.htm#pg_nni_callnat"><code>nni_callnat</code></a>:
      </p> 
          
      <ul> 
              
         <li> 
                  
            <p class="initem">Assign a value to each parameter using one of the functions
                      <a href="pg_nni_func-over.htm#pg_nni_put_parm"><code>nni_put_parm</code></a> or
                      <a href="pg_nni_func-over.htm#pg_nni_put_parm_array"><code>nni_put_parm_array</code></a>.
                      
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Turn each parameter into a <code>parm_description</code>
                      structure using the function <a href="pg_nni_func-over.htm#pg_nni_get_parm_info"><code>nni_get_parm_info</code></a>.
            </p> 
                 
         </li> 
             
      </ul> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>chType</code></td> 
                       
               <td>Type of the Natural module. Always <code>N</code> (for
                           subprogram).
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>szName</code></td> 
                       
               <td>Name of the Natural module.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>pparmhandle</code></td> 
                       
               <td>Points a to a pointer to a parameter set on return.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>&gt; 0</td> 
                       
               <td>Natural error number.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_create_method_parm"></a></div> 
         
      <h2> 
             <a name="x586"></a> nni_create_method_parm 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e81961"></a></div> 
           <pre class="text">int nni_create_method_parm( void* pnni_func, const char* szClass, const char* szMethod, void** pparmhandle ); </pre> 
          <p>Creates a set of parameters that can be used in a call to
              <a href="pg_nni_func-over.htm#pg_nni_send_method"><code>nni_send_method</code></a>. The
              function enables an application to dynamically explore the signature of a
              method of a Natural class.
      </p> 
          
      <p>The returned parameter set contains not only the method parameters, but
              also the other parameters required by <a href="pg_nni_func-over.htm#pg_nni_send_method"><code>nni_send_method</code></a>. This
              means: If the method has <var>n</var> parameters, the parameter
              set contains <var>n</var> + 2 parameters.
      </p> 
          
      <ul> 
              
         <li> 
                  
            <p class="initem">The first parameter in the set is initialized to the data type
                      <code>HANDLE OF OBJECT</code>.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">The second parameter in the set is initialized to the data type of the
                      method return value. If the method does not have a return value, the second
                      parameter is not initialized.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">The remaining parameters in the set are initialized to the data types
                      of the method parameters.
            </p> 
                 
         </li> 
             
      </ul> 
          
      <p>Before using the parameter set in a call to
              <a href="pg_nni_func-over.htm#pg_nni_send_method"><code>nni_send_method</code></a>:
      </p> 
          
      <ul> 
              
         <li> 
                  
            <p class="initem">Assign a value to each parameter using one of the functions
                      <a href="pg_nni_func-over.htm#pg_nni_put_parm"><code>nni_put_parm</code></a> or
                      <a href="pg_nni_func-over.htm#pg_nni_put_parm_array"><code>nni_put_parm_array</code></a>.
            </p>
                  
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Turn each parameter into a <code>parm_description</code>
                      structure using the function <a href="pg_nni_func-over.htm#pg_nni_get_parm_info"><code>nni_get_parm_info</code></a>.
            </p> 
                 
         </li> 
             
      </ul> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>szClass</code></td> 
                       
               <td>Name of the Natural class.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>szMethod</code></td> 
                       
               <td>Name of the Natural method.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>pparmhandle</code></td> 
                       
               <td>Points a to a pointer to a parameter set on return.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>&gt; 0</td> 
                       
               <td>Natural error number.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_create_prop_parm"></a></div> 
         
      <h2> 
             <a name="x587"></a> nni_create_prop_parm 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e82217"></a></div> 
           <pre class="text">int nni_create_prop_parm(void* pnni_func, const char* szClass, const char* szProp,void** pparmhandle); </pre> 
          <p>Creates a set of parameters that can be used in a call to
              <a href="pg_nni_func-over.htm#pg_nni_get_property"><code>nni_get_property</code></a> or
              <a href="pg_nni_func-over.htm#pg_nni_set_property"><code>nni_set_property</code></a>. The
              returned parameter set contains all parameters required by
              <a href="pg_nni_func-over.htm#pg_nni_get_property"><code>nni_get_property</code></a> or
              <a href="pg_nni_func-over.htm#pg_nni_set_property"><code>nni_set_property</code></a>. The
              function enables an application to determine the data type of a property of a
              Natural class.
      </p> 
          
      <ul> 
              
         <li> 
                  
            <p class="initem">The first parameter in the set is initialized to the data type
                      <code>HANDLE OF OBJECT</code>.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">The second parameter in the set is initialized to the data type of the
                      property.
            </p> 
                 
         </li> 
             
      </ul> 
          
      <p>Before using the parameter set in a call to
              <a href="pg_nni_func-over.htm#pg_nni_get_property"><code>nni_get_property</code></a> or
              <a href="pg_nni_func-over.htm#pg_nni_set_property"><code>nni_set_property</code></a>:
      </p> 
          
      <ul> 
              
         <li> 
                  
            <p class="initem">Assign a value to each parameter using one of the functions
                      <a href="pg_nni_func-over.htm#pg_nni_put_parm"><code>nni_put_parm</code></a> or
                      <a href="pg_nni_func-over.htm#pg_nni_put_parm_array"><code>nni_put_parm_array</code></a>.
            </p>
                  
                 
         </li> 
              
         <li> 
                  
            <p class="initem">Turn each parameter into a <code>parm_description</code>
                      structure using the function <a href="pg_nni_func-over.htm#pg_nni_get_parm_info"><code>nni_get_parm_info</code></a>.
            </p> 
                 
         </li> 
             
      </ul> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>szClass</code></td> 
                       
               <td>Name of the Natural class.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>szProp</code></td> 
                       
               <td>Name of the Natural property.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>pparmhandle</code></td> 
                       
               <td>Points a to a pointer to a parameter set on return.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>&gt; 0</td> 
                       
               <td>Natural error number.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_parm_count"></a></div> 
         
      <h2> 
             <a name="x588"></a> nni_parm_count 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e82470"></a></div> 
           <pre class="text">int nni_parm_count( void* pnni_func, void* parmhandle, int* piParm )</pre> 
          <p>The function retrieves the number of parameters in a parameter set.</p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>parmhandle</code></td> 
                       
               <td>Pointer to a parameter set.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>piParm</code></td> 
                       
               <td>Returns the number of parameters in the parameter set.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_init_parm_s"></a></div> 
         
      <h2> 
             <a name="x589"></a> nni_init_parm_s 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e82629"></a></div> 
           <pre class="text">int nni_init_parm_s(void* pnni_func, int iParm, void* parmhandle, char chFormat, int iLength, int iPrecision, int iFlags); </pre> 
          <p>Initializes a parameter in a parameter set to a static data type.</p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iParm</code></td> 
                       
               <td>Index of the parameter. The first parameter in the set has the
                  index 0.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>parmhandle</code></td> 
                       
               <td>Pointer to a parameter set.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>chFormat</code></td> 
                       
               <td>Natural data type of the parameter.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iLength</code></td> 
                       
               <td>Natural length of the parameter.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iPrecision</code></td> 
                       
               <td>Number of decimal places (<code>NNI_TYPE_NUM</code> and
                           <code>NNI_TYPE_PACK</code> only).
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iFlags</code></td> 
                       
               <td>Parameter flags. The following flags can be used: 
                  
                  <p class="mini-list"> 
                               <code>NNI_FLG_PROTECTED</code> 
                              
                  </p> 
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_ILL_PNUM"><code>NNI_RC_ILL_PNUM</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NO_MEMORY"><code>NNI_RC_NO_MEMORY</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_BAD_FORMAT"><code>NNI_RC_BAD_FORMAT</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_BAD_LENGTH"><code>NNI_RC_BAD_LENGTH</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_init_parm_sa"></a></div> 
         
      <h2> 
             <a name="x590"></a> nni_init_parm_sa 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e82893"></a></div> 
           <pre class="text">int nni_init_parm_sa (void* pnni_func, int iParm, void* parmhandle, char chFormat, int iLength, int iPrecision, int iDim, int* rgiOcc, int iFlags); </pre> 
          <p>Initializes a parameter in a parameter set to an array of a static data
              type.
      </p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iParm</code></td> 
                       
               <td>Index of the parameter. The first parameter in the set has the
                  index 0.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>parmhandle</code></td> 
                       
               <td>Pointer to a parameter set.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>chFormat</code></td> 
                       
               <td>Natural data type of the parameter.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iLength</code></td> 
                       
               <td>Natural length of the parameter.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iPrecision</code></td> 
                       
               <td>Number of decimal places (<code>NNI_TYPE_NUM</code> and
                           <code>NNI_TYPE_PACK</code> only).
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iDim</code></td> 
                       
               <td>Array dimension of the parameter.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>rgiOcc</code></td> 
                       
               <td>Three dimensional array of int values, indicating the occurrence
                  count for each dimension. The occurrence count for unused dimensions must be
                  specified as 0.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iFlags</code></td> 
                       
               <td>Parameter flags. The following flags can be used: 
                  
                  <p class="mini-list"> 
                               <code>NNI_FLG_PROTECTED</code><br> 
                               <code>NNI_FLG_LBVAR_0</code><br> 
                               <code>NNI_FLG_UBVAR_0</code><br> 
                               <code>NNI_FLG_LBVAR_1</code><br> 
                               <code>NNI_FLG_UBVAR_1</code><br> 
                               <code>NNI_FLG_LBVAR_2</code><br> 
                               <code>NNI_FLG_UBVAR_2</code> 
                              
                  </p> If one of the <code>NNI_FLG_*VAR*</code> flags is set,
                           the array is an x-array. In each dimension only the lower bound or the upper
                           bound (not both) can be variable. Therefore for instance the flag
                           <code>IF4_FLG_LBVAR_0</code> may not be combined with
                           <code>IF4_FLG_UBVAR_0</code>.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_ILL_PNUM"><code>NNI_RC_ILL_PNUM</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NO_MEMORY"><code>NNI_RC_NO_MEMORY</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_BAD_FORMAT"><code>NNI_RC_BAD_FORMAT</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_BAD_LENGTH"><code>NNI_RC_BAD_LENGTH</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_BAD_DIM"><code>NNI_RC_BAD_DIM</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_BAD_BOUNDS"><code>NNI_RC_BAD_BOUNDS</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_init_parm_d"></a></div> 
         
      <h2> 
             <a name="x591"></a> nni_init_parm_d 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e83236"></a></div> 
           <pre class="text">int nni_init_parm_d(void* pnni_func, int iParm, void* parmhandle, char chFormat, int iFlags); </pre> 
          <p>Initializes a parameter in a parameter set to a dynamic data type.</p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iParm</code></td> 
                       
               <td>Index of the parameter. The first parameter in the set has the
                  index 0.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>parmhandle</code></td> 
                       
               <td>Pointer to a parameter set.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>chFormat</code></td> 
                       
               <td>Natural data type of the parameter (<code>NNI_TYPE_ALPHA</code>
                           or <code>NNI_TYPE_BIN</code>).
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iFlags</code></td> 
                       
               <td>Parameter flags. The following flags can be used: 
                  
                  <p class="mini-list"> 
                               <code>NNI_FLG_PROTECTED</code> 
                              
                  </p> 
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_ILL_PNUM"><code>NNI_RC_ILL_PNUM</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NO_MEMORY"><code>NNI_RC_NO_MEMORY</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_BAD_FORMAT"><code>NNI_RC_BAD_FORMAT</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_init_parm_da"></a></div> 
         
      <h2> 
             <a name="x592"></a> nni_init_parm_da 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e83467"></a></div> 
           <pre class="text">int nni_init_parm_da (void* pnni_func, int iParm, void* parmhandle, char chFormat, int iDim, int* rgiOcc, int iFlags); </pre> 
          <p>Initializes a parameter in a parameter set to an array of a dynamic data
              type.
      </p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iParm</code></td> 
                       
               <td>Index of the parameter. The first parameter in the set has the
                  index 0.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>parmhandle</code></td> 
                       
               <td>Pointer to a parameter set.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>chFormat</code></td> 
                       
               <td>Natural data type of the parameter (<code>NNI_TYPE_ALPHA</code>
                           or <code>NNI_TYPE_BIN</code>).
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iDim</code></td> 
                       
               <td>Array dimension of the parameter.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>rgiOcc</code></td> 
                       
               <td>Three dimensional array of int values, indicating the occurrence
                  count for each dimension. The occurrence count for unused dimensions must be
                  specified as 0.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iFlags</code></td> 
                       
               <td>Parameter flags. The following flags can be used: 
                  
                  <p class="mini-list"> 
                               <code>NNI_FLG_PROTECTED</code><br> 
                               <code>NNI_FLG_LBVAR_0</code><br> 
                               <code>NNI_FLG_UBVAR_0</code><br> 
                               <code>NNI_FLG_LBVAR_1</code><br> 
                               <code>NNI_FLG_UBVAR_1</code><br> 
                               <code>NNI_FLG_LBVAR_2</code><br> 
                               <code>NNI_FLG_UBVAR_2</code> 
                              
                  </p> If one of the <code>NNI_FLG_*VAR*</code> flags is set,
                           the array is an x-array. In each dimension only the lower bound or the upper
                           bound (not both) can be variable. Therefore for instance the flag
                           <code>IF4_FLG_LBVAR_0</code> may not be combined with
                           <code>IF4_FLG_UBVAR_0</code>.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_ILL_PNUM"><code>NNI_RC_ILL_PNUM</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NO_MEMORY"><code>NNI_RC_NO_MEMORY</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_BAD_FORMAT"><code>NNI_RC_BAD_FORMAT</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_BAD_DIM"><code>NNI_RC_BAD_DIM</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_BAD_BOUNDS"><code>NNI_RC_BAD_BOUNDS</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_get_parm_info"></a></div> 
         
      <h2> 
             <a name="x593"></a> nni_get_parm_info 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e83777"></a></div> 
           <pre class="text">int nni_get_parm_info (void* pnni_func, int iParm, void* parmhandle, struct parameter_description* pDesc); </pre> 
          <p>Returns detailed information about a specific parameter in a parameter
              set.
      </p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iParm</code></td> 
                       
               <td>Index of the parameter. The first parameter in the set has the
                  index 0.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>parmhandle</code></td> 
                       
               <td>Pointer to a parameter set.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>pDesc</code></td> 
                       
               <td>Parameter description structure.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_ILL_PNUM"><code>NNI_RC_ILL_PNUM</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_get_parm"></a></div> 
         
      <h2> 
             <a name="x594"></a> nni_get_parm 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e83959"></a></div> 
           <pre class="text">int nni_get_parm(void* pnni_func, int iParm, void* parmhandle, int iBufferLength, void* pBuffer); </pre> 
          <p>Returns the value of a specific parameter in a parameter set. The value
              is returned in the buffer at the address specified in
              <code>pBuffer</code>, with the size specified in
              <code>iBufferLength</code>. On successful return, the buffer contains
              the data in Natural internal format. See
              <a href="pg_nni_nat_dat_typ.htm#pg_nni_nat_dat_typ">Natural Data
            Types</a> on how to interpret the contents of the buffer.
      </p> 
          
      <p>If the length of the parameter according to the Natural data type is
              greater than <code>iBufferLength</code>, Natural truncates the data
              to the given length and returns the code <a href="pg_nni_return_codes.htm#NNI_RC_DATA_TRUNC"><code>NNI_RC_DATA_TRUNC</code></a>. The
              caller can use the function <a href="pg_nni_func-over.htm#pg_nni_get_parm_info"><code>nni_get_parm_info</code></a> to
              request the length of the parameter value in advance.
      </p> 
          
      <p>If the length of the parameter according to the Natural data type is
              smaller than <code>iBufferLength</code>, Natural fills the buffer
              according to the length of the parameter and returns the length of the copied
              data in the return code.
      </p> 
          
      <p>If the parameter is an array, the function returns the whole array in
              the buffer. This makes sense only for fixed size arrays of fixed size elements,
              because in other cases the caller cannot interpret the contents of the buffer.
              In order to retrieve an individual occurrence of an arbitrary array use the
              function <a href="pg_nni_func-over.htm#pg_nni_get_parm_array"><code>nni_get_parm_array</code></a>.
      </p>
          
          
      <p>If no memory of the size specified in
              <code>iBufferLength</code> is allocated at the adress specified in
              <code>pBuffer</code>, the results of the operation are unpredictable.
              Natural only checks that <code>pBuffer</code> is not null.
      </p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iParm</code></td> 
                       
               <td>Index of the parameter. The first parameter in the set has the
                  index 0.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>parmhandle</code></td> 
                       
               <td>Pointer to a parameter set.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iBufferLength</code></td> 
                       
               <td>Length of the buffer specified in
                  <code>pBuffer</code>.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>pBuffer</code></td> 
                       
               <td>Buffer in which the value is returned.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_ILL_PNUM"><code>NNI_RC_ILL_PNUM</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_DATA_TRUNC"><code>NNI_RC_DATA_TRUNC</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>= <var>n</var>, where
                     <var>n</var> &gt; 0
               </td> 
                       
               <td>Successful operation, but only <var>n</var>
                  bytes were returned in the buffer.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_get_parm_array"></a></div> 
         
      <h2> 
             <a name="x595"></a>nni_get_parm_array 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e84234"></a></div> 
           <pre class="text">int nni_get_parm_array(void* pnni_func, int parmnum, void* parmhandle, int iBufferLength, void* pBuffer, int* rgiInd);</pre> 
          <p>Returns the value of a specific occurrence of a specific array parameter
              in a parameter set. The only difference to <a href="pg_nni_func-over.htm#pg_nni_get_parm"><code>nni_get_parm</code></a> is that array
              indices can be specified. The indices for unused dimensions must be specified
              as 0.
      </p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iParm</code></td> 
                       
               <td>Index of the parameter. The first parameter in the set has the
                  index 0.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>parmhandle</code></td> 
                       
               <td>Pointer to a parameter set.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iBufferLength</code></td> 
                       
               <td>Length of the buffer specified in
                  <code>pBuffer</code>.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>pBuffer</code></td> 
                       
               <td>Buffer in which the value is returned.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>rgiInd</code></td> 
                       
               <td>Three dimensional array of int values, indicating a specific
                  array occurrence. The indices start with 0.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_ILL_PNUM"><code>NNI_RC_ILL_PNUM</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_DATA_TRUNC"><code>NNI_RC_DATA_TRUNC</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_ARRAY"><code>NNI_RC_NOT_ARRAY</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_BAD_INDEX_0"><code>NNI_RC_BAD_INDEX_0</code></a>
                           
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_BAD_INDEX_1"><code>NNI_RC_BAD_INDEX_1</code></a>
                           
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_BAD_INDEX_2"><code>NNI_RC_BAD_INDEX_2</code></a>
                           
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>= <var>n</var>, where
                     <var>n</var> &gt; 0
               </td> 
                       
               <td>Successful operation, but only <var>n</var>
                           bytes were returned.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_get_parm_array_length"></a></div> 
         
      <h2> 
             <a name="x596"></a> nni_get_parm_array_length 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e84526"></a></div> 
           <pre class="text">int <a href="pg_nni_func-over.htm#pg_nni_get_parm">nni_get_parm</a>_array_length(void* pnni_func, int iParm, void* parmhandle, int* piLength, int* rgiInd);</pre> 
          <p>Returns the length of a specific occurrence of a specific array
              parameter in a parameter set.
      </p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iParm</code></td> 
                       
               <td>Index of the parameter. The first parameter in the set has the
                  index 0.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>parmhandle</code></td> 
                       
               <td>Pointer to a parameter set.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>piLength</code></td> 
                       
               <td>Pointer to an int in which the length of the value is
                  returned.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>rgiInd</code></td> 
                       
               <td>Three dimensional array of int values, indicating a specific
                  array occurrence. The indices start with 0.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_ILL_PNUM"><code>NNI_RC_ILL_PNUM</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_DATA_TRUNC"><code>NNI_RC_DATA_TRUNC</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_ARRAY"><code>NNI_RC_NOT_ARRAY</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_BAD_INDEX_0"><code>NNI_RC_BAD_INDEX_0</code></a>
                           
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_BAD_INDEX_1"><code>NNI_RC_BAD_INDEX_1</code></a>
                           
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_BAD_INDEX_2"><code>NNI_RC_BAD_INDEX_2</code></a>
                           
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_put_parm"></a></div> 
         
      <h2> 
             <a name="x597"></a> nni_put_parm 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e84760"></a></div> 
           <pre class="text">int nni_put_parm(void* pnni_func, int iParm, void* parmhandle, int iBufferLength, const void* pBuffer); </pre> 
          <p>Assigns a value to a specific parameter in a parameter set. The value is
              passed to the function in the buffer at the address specified in
              <code>pBuffer</code>, with the size specified in
              <code>iBufferLength</code>. See
              <a href="pg_nni_nat_dat_typ.htm#pg_nni_nat_dat_typ">Natural Data
            Types</a> on how to prepare the contents of the buffer.
      </p> 
          
      <p>If the length of the parameter according to the Natural data type is
              smaller than the given buffer length, the data will be truncated to the length
              of the parameter. The rest of the buffer will be ignored. If the length of the
              parameter according to the Natural data type is greater than the given buffer
              length, the data will copied only to the given buffer length, the rest of the
              parameter value stays unchanged. See <a href="pg_nni_nat_dat_typ.htm#pg_nni_nat_dat_typ">Natural Data Types</a>
              on the internal length of Natural data types.
      </p> 
          
      <p>If the parameter is a dynamic variable, it is automatically resized
              according to the given buffer length.
      </p> 
          
      <p>If the parameter is an array, the function expects the whole array in
              the buffer. This makes sense only for fixed size arrays of fixed size elements,
              because in other cases the caller cannot provide the correct contents of the
              buffer. In order to assign a value to an individual occurrence of an arbitrary
              array use the function <a href="pg_nni_func-over.htm#pg_nni_put_parm_array"><code>nni_put_parm_array</code></a>.
      </p>
          
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iParm</code></td> 
                       
               <td>Index of the parameter. The first parameter in the set has the
                  index 0.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>parmhandle</code></td> 
                       
               <td>Pointer to a parameter set.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iBufferLength</code></td> 
                       
               <td>Length of the buffer specified in
                  <code>pBuffer</code>.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>pBuffer</code></td> 
                       
               <td>Buffer in which the value is passed.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_ILL_PNUM"><code>NNI_RC_ILL_PNUM</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_WRT_PROT"><code>NNI_RC_WRT_PROT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_DATA_TRUNC"><code>NNI_RC_DATA_TRUNC</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NO_MEMORY"><code>NNI_RC_NO_MEMORY</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>= <var>n</var>, where
                     <var>n</var> &gt; 0
               </td> 
                       
               <td>Successful operation, but only <var>n</var>
                    bytes of the buffer were used.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_put_parm_array"></a></div> 
         
      <h2> 
             <a name="x598"></a> nni_put_parm_array 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e85039"></a></div> 
           <pre class="text">int <a href="pg_nni_func-over.htm#pg_nni_put_parm">nni_put_parm</a>_array(void* pnni_func, int iParm, void* parmhandle, int iBufferLength, const void* pBuffer, int* rgiInd);</pre> 
          <p>Assigns a value to a specific occurrence of a specific array parameter
              in a parameter set. The only difference to <a href="pg_nni_func-over.htm#pg_nni_get_parm"><code>nni_get_parm</code></a> is that array
              indices can be specified. The indices for unused dimensions must be specified
              as 0.
      </p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iParm</code></td> 
                       
               <td>Index of the parameter. The first parameter in the set has the
                  index 0.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>parmhandle</code></td> 
                       
               <td>Pointer to a parameter set.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iBufferLength</code></td> 
                       
               <td>Length of the buffer specified in
                  <code>pBuffer</code>.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>pBuffer</code></td> 
                       
               <td>Buffer in which the value is passed.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>rgiInd</code></td> 
                       
               <td>Three dimensional array of int values, indicating a specific
                  array occurrence. The indices start with 0.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_ILL_PNUM"><code>NNI_RC_ILL_PNUM</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_WRT_PROT"><code>NNI_RC_WRT_PROT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_DATA_TRUNC"><code>NNI_RC_DATA_TRUNC</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NO_MEMORY"><code>NNI_RC_NO_MEMORY</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_ARRAY"><code>NNI_RC_NOT_ARRAY</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_BAD_INDEX_0"><code>NNI_RC_BAD_INDEX_0</code></a>
                           
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_BAD_INDEX_1"><code>NNI_RC_BAD_INDEX_1</code></a>
                           
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_BAD_INDEX_2"><code>NNI_RC_BAD_INDEX_2</code></a>
                           
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>= <var>n</var>, where
                     <var>n</var> &gt; 0
               </td> 
                       
               <td>Successful operation, but only <var>n</var>
                    bytes of the buffer were used.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_resize_parm_array"></a></div> 
         
      <h2> 
             <a name="x599"></a> nni_resize_parm_array 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e85360"></a></div> 
           <pre class="text">int nni_resize_parm_array(void* pnni_func, int iParm, void* parmhandle, int* rgiOcc); </pre> 
          <p>Changes the occurrence count of a specific x-array parameter in a
              parameter set. For an <var>n</var>-dimensional array an
              occurrence count must be specified for all <var>n</var>
              dimensions. If the dimension of the array is less than 3, the value 0 must be
              specified for the not used dimensions.
      </p> 
          
      <p>The function tries to resize the occurrence count of each dimension
              either by changing the lower bound or the upper bound, whatever is appropriate
              for the given x-array.
      </p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iParm</code></td> 
                       
               <td>Index of the parameter. The first parameter in the set has the
                  index 0.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>parmhandle</code></td> 
                       
               <td>Pointer to a parameter set.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>rgiOcc</code></td> 
                       
               <td>Three dimensional array of int values, indicating the new
                  occurrence count of the array.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_ILL_PNUM"><code>NNI_RC_ILL_PNUM</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_WRT_PROT"><code>NNI_RC_WRT_PROT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_DATA_TRUNC"><code>NNI_RC_DATA_TRUNC</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NO_MEMORY"><code>NNI_RC_NO_MEMORY</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_ARRAY"><code>NNI_RC_NOT_ARRAY</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_RESIZABLE"><code>NNI_RC_NOT_RESIZABLE</code></a>
                           
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>&gt; 0</td> 
                       
               <td>Natural error number.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_delete_parm"></a></div> 
         
      <h2> 
             <a name="x600"></a> nni_delete_parm 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e85625"></a></div> 
           <pre class="text">int nni_delete_parm(void* pnni_func, void* parmhandle);</pre> 
          <p>Deletes the specified parameter set.</p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>parmhandle</code></td> 
                       
               <td>Pointer to a parameter set.</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_from_string"></a></div> 
         
      <h2> 
             <a name="x601"></a>nni_from_string 
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e85774"></a></div> 
           <pre class="text">int nni_from_string(void* pnni_func, const char* szString, char chFormat, int iLength, int iPrecision, int iBufferLength, void* pBuffer); </pre> 
          <p>Converts the string representation of a Natural P, N, D or T value into
              the internal representation of the value, as it is used in the functions
              <a href="pg_nni_func-over.htm#pg_nni_get_parm"><code>nni_get_parm</code></a>,
              <a href="pg_nni_func-over.htm#pg_nni_get_parm_array"><code>nni_get_parm_array</code></a>,
              <a href="pg_nni_func-over.htm#pg_nni_put_parm"><code>nni_put_parm</code></a> and
              <a href="pg_nni_func-over.htm#pg_nni_put_parm_array"><code>nni_put_parm_array</code></a>.
      </p>
          
          
      <p>The string representations of these Natural data types look like
              this:
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Format</th> 
                       
               <th align="left">String representation</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td>P, N</td> 
                       
               <td>For example, <code>-3.141592</code>, where the decimal character
                         defined in the <a href="../parms/dc.htm"><code>DC</code></a> parameter is
                           used.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>D</td> 
                       
               <td>Date format as defined in the
                  <a href="../parms/dtform.htm"><code>DTFORM</code></a>
                   parameter, (e. g. "2004-07-06", if
                           <code>DTFORM=I</code>).
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>T</td> 
                       
               <td>Date format as defined in the <code>DTFORM</code>
                  parameter, combined with a Time value in the form hh:ii:ss:t (e. g.
                           <code>2004-07-06 11:30:42:7</code>, if <code>DTFORM=I</code>) or Time
                           value in the form hh:ii:ss:t (e. g. <code>11:30:42:7</code>).
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>szString</code></td> 
                       
               <td>String representation of the value.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>chFormat</code></td> 
                       
               <td>Natural data type of the value.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iLength</code></td> 
                       
               <td>Natural length of the value. The total number of significant
                  digits in the case of <code>NNI_TYPE_NUM</code> and <code>NNI_TYPE_PACK</code>,
                           0 otherwise.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iPrecision</code></td> 
                       
               <td>Number of decimal places in the case of
                  <code>NNI_TYPE_NUM</code> and <code>NNI_TYPE_PACK</code>, 0 otherwise.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iBufferLength</code></td> 
                       
               <td>Length of the buffer provided in
                  <code>pBuffer</code>.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>pBuffer</code></td> 
                       
               <td>Buffer that contains the internal representation of the value on
                  return. The buffer must be large enough to hold the internal Natural
                  representation of the value. The required sizes are documented in
                  <a href="pg_defi_dv.htm#Format_Length_Def">Format and Length of
                              User-Defined Variables</a>.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>&gt; 0</td> 
                       
               <td>Natural error number</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="pg_nni_to_string"></a></div> 
         
      <h2> 
             <a name="x602"></a> nni_to_string
      </h2> 
          
          
      <h4 class="floating-title">Syntax</h4> 
          
      <div><a name="d0e86101"></a></div> 
           <pre class="text">int nni_to_string(void* pnni_func, int iBufferLength, const void* pBuffer, char chFormat, int iLength, int iPrecision, int iStringLength, char* szString);</pre> 
          <p>Converts the internal representation of a Natural P, N, D or T value, as
              it is used in the functions <a href="pg_nni_func-over.htm#pg_nni_get_parm"><code>nni_get_parm</code></a>,
              <a href="pg_nni_func-over.htm#pg_nni_get_parm_array"><code>nni_get_parm_array</code></a>,
              <a href="pg_nni_func-over.htm#pg_nni_put_parm"><code>nni_put_parm</code></a> and
              <a href="pg_nni_func-over.htm#pg_nni_put_parm_array"><code>nni_put_parm_array</code></a>,
              into a the string representation.
      </p> 
          
      <p>The string representations of these Natural data types look as described
              with the function <a href="pg_nni_func-over.htm#pg_nni_from_string"><code>nni_from_string</code></a>.
      </p> 
          
      <h4 class="floating-title">Parameters</h4> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Parameter</th> 
                       
               <th align="left">Meaning</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><code>pnni_func</code></td> 
                       
               <td>Pointer to an NNI interface instance.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iBufferLength</code></td> 
                       
               <td>Length of the buffer provided in
                  <code>pBuffer</code>.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>pBuffer</code></td> 
                       
               <td>Buffer that contains the internal representation of the value.
                  The required sizes are documented in <a href="pg_defi_dv.htm#Format_Length_Def">Format and Length of User-Defined
                              Variables</a>.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>chFormat</code></td> 
                       
               <td>Natural data type of the value.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iLength</code></td> 
                       
               <td>Natural length of the value. The total number of significant
                  digits in the case of <code>NNI_TYPE_NUM</code> and <code>NNI_TYPE_PACK</code>,
                           0 otherwise.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iPrecision</code></td> 
                       
               <td>Number of decimal places in the case of
                  <code>NNI_TYPE_NUM</code> and <code>NNI_TYPE_PACK</code>, 0 otherwise.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>iStringLength</code></td> 
                       
               <td>Length of the string buffer provided in
                  <code>szString</code> including the terminating zero.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><code>szString</code></td> 
                       
               <td>String buffer that contains the string representation of the
                  value on return. The string buffer must be large enough to hold the external
                  representation including the terminating zero.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <h4 class="floating-title">Return Codes</h4> 
          
      <p>The meaning of the return codes is explained in the section
              <a href="pg_nni_return_codes.htm#pg_nni_return_codes">Return
            Codes</a>.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Return Code</th> 
                       
               <th align="left">Remark</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_OK"><code>NNI_RC_OK</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_NOT_INIT"><code>NNI_RC_NOT_INIT</code></a> 
               </td> 
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <a href="pg_nni_return_codes.htm#NNI_RC_PARM_ERROR"><code>NNI_RC_PARM_ERROR</code></a> 
               </td>
                       
                       
               <td>&nbsp;</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>&gt; 0</td> 
                       
               <td>Natural error number</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
       
      <div class="noprint">
         <div class="nospy">
            <p><a href="pg_nni_func-over.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
            <table border="0" cellpadding="0" cellspacing="0" width="97%">
               <col width="15%">
               <col width="34%">
               <col width="48%">
               <tr>
                  <td class="footer"><img src="../graphics/blank.png" width="3" height="10">&nbsp;<a class="navig" target="_blank" href="http://www.softwareag.com">www.softwareag.com</a>&nbsp;
                  </td>
                  <td nowrap class="footer"><img src="../graphics/blank.png" width="3"><a class="navig" href="../general/legal.htm" target="_blank">Copyright &copy; Software AG 1992-2008. All rights reserved.&nbsp;</a></td>
                  <td class="bottomlinks" align="right" nowrap><img src="../graphics/blank.png" width="3"><a class="navig" target="_blank" href="../fts/search.htm" onclick="window.open('../fts/search.htm', 'fts', 'dependent,width=555,height=420,resizable'); return false">SEARCH</a>
                     &nbsp;&nbsp;<a class="navig" href="javascript:sized_window('../navig/navig.htm')" onclick="document.cookie='sagphdcc=../pg/pg_nni_func-over.htm;path=/'; window.open('../navig/navig.htm', 'nvgtr', 'dependent,width=450,height=270,resizable'); return false">CONTENTS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="http://documentation.softwareag.com/natural/nat635unx/pdf/pg/pg_nni_func-over.pdf">PDF PAGE</a>
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="../general/print.htm">PDF BOOKS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" href="../overview.htm">HOME</a>
                     &nbsp;&nbsp;<a class="navig" href="pg_nni-over.htm">UP</a>
                     &nbsp;&nbsp;<a class="navig" href="pg_nni_interf_inst_nat_sess.htm">PREV</a>
                     &nbsp;&nbsp;<a class="navig" href="pg_nni_para_des_struc.htm">NEXT</a></td>
               </tr>
            </table>
         </div>
      </div>
   </body>
</html>