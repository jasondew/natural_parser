
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   
      <meta name="generator" content="Sagdoc XSL Stylesheets">
      <link rel="stylesheet" type="text/css" href="../general/style2.css"><script language="JavaScript" src="../general/selbox.js"></script><script type="text/javascript" language="javascript">
         <!--
window.name = 'contents';
//--></script><title>Screen Design</title>
   </head>
   <body bgcolor="#FFFFFF" background="../graphics/bar.png" style="margin-left: 20px;">
      <div><a name="pg_desgn_screen"></a></div>
      <div class="noprint">
         <div class="nospytext">
            <table border="0" cellpadding="0" cellspacing="0" width="97%">
               <col width="15%">
               <col width="34%">
               <col width="48%">
               <tr>
                  <td colspan="2" class="topline"><a name="Top"></a>&nbsp;<img src="../graphics/natux_logo.png"></td>
                  <td class="topline" align="right"><img src="../graphics/sag_logo.png">&nbsp;
                  </td>
               </tr>
               <tr>
                  <td class="header" nowrap><img src="../graphics/blank.png" width="3" height="10"></td>
                  <td class="header"><img src="../graphics/blank.png" width="3">Version&nbsp;6.3.5 for UNIX
                  </td>
                  <td class="toplinks" align="right" nowrap><img src="../graphics/blank.png" width="3"><a class="navig" target="_blank" href="../fts/search.htm" onclick="window.open('../fts/search.htm', 'fts', 'dependent,width=555,height=420,resizable'); return false">SEARCH</a>
                     &nbsp;&nbsp;<a class="navig" href="javascript:sized_window('../navig/navig.htm')" onclick="document.cookie='sagphdcc=../pg/pg_desgn_screen.htm;path=/'; window.open('../navig/navig.htm', 'nvgtr', 'dependent,width=450,height=270,resizable'); return false">CONTENTS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="http://documentation.softwareag.com/natural/nat635unx/pdf/pg/pg_desgn_screen.pdf">PDF PAGE</a>
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="../general/print.htm">PDF BOOKS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" href="../overview.htm">HOME</a>
                     &nbsp;&nbsp;<a class="navig" href="pg_desgn-over.htm">UP</a>
                     &nbsp;&nbsp;<a class="navig" href="pg_desgn-over.htm">PREV</a>
                     &nbsp;&nbsp;<a class="navig" href="pg_desgn_dialog.htm">NEXT</a></td>
               </tr>
            </table>
         </div>
      </div>
      <div class="nospytext" style="margin-top:0.25in;">
         <div><span class="module">&nbsp;&#8212;&nbsp;&nbsp;Programming Guide&nbsp;&nbsp;&#8212;</span></div>
      </div> 
        
      <div class="nospytext">
         <h1> 
               <a name="x517"></a>Screen Design
         </h1>
      </div> 
         
         
      <p>This document provides options to define a general screen layout:</p>
         
      <ul>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#Control_of_Function-Key_Lines_tc_y">Control of Function-Key Lines - Terminal Command %Y</a></p>
         </li>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#Control_of_the_Message_Line_tc_m">Control of the Message Line - Terminal Command %M</a></p>
         </li>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#Assigning_Colors_to_Fields_tc_pceq">Assigning Colors to Fields - Terminal Command %=</a></p>
         </li>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#Statistics_Line_Infoline_tc_pcx">Infoline - Terminal Command %X</a></p>
         </li>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#Windows">Windows</a></p>
         </li>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#Standard_Dynamic_Layout_Maps">Standard/Dynamic Layout Maps</a></p>
         </li>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#Multilingual_User_Interfaces">Multilingual User Interfaces</a></p>
         </li>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#Skill-Sensitive_User_Interfaces">Skill-Sensitive User Interfaces</a></p>
         </li>
      </ul> 
        
      <hr> 
        
      <div><a name="Control_of_Function-Key_Lines_tc_y"></a></div> 
         
      <h2> 
             <a name="x518"></a> 
             <a name="x519"></a> Control of Function-Key Lines - Terminal Command %Y 
      </h2> 
          
          
      <p>With the terminal command <a href="../tcom/pcy.htm"><code>%Y</code></a> you can define
              how and where the Natural function-key lines are to be displayed.
      </p> 
          
      <p>Below is information on:</p> 
      <ul>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#Format_of_Function-Key_Lines">Format of Function-Key Lines</a></p>
         </li>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#Positioning_of_Function-Key_Lines">Positioning of Function-Key Lines</a></p>
         </li>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#Cursor-Sensitivity">Cursor-Sensitivity</a></p>
         </li>
      </ul> 
          
         
      <div><a name="Format_of_Function-Key_Lines"></a></div> 
          
      <h3> Format of Function-Key Lines </h3> 
           
           
      <p>The following terminal commands are available for defining the format
               of function-key lines:
      </p> 
           
      <dl> 
                
                
         <dt><a name="d0e74292"><strong> %YN </strong></a></dt>
         <dd> 
                    
            <p class="definition">&nbsp;The function-key lines are displayed in tabular Software AG
                        format:
            </p> 
                    
            <table border="1" cellpadding="5" class="screen">
               <tr>
                  <td><pre>
  Command ===&gt;
  
<strong>Enter-PF1---PF2---PF3---PF4---PF5---PF6---PF7---PF8---PF9---PF10--PF11--PF12---
        Help        Exit                                                  Canc </strong>
</pre></td>
               </tr>
            </table> 
                   
         </dd> 
                
                
                
         <dt><a name="d0e74309"><strong> %YS </strong></a></dt>
         <dd> 
                    
            <p class="definition">The function-key lines display the keys sequentially and only show
                        those keys to which names have been assigned
                        (PF1=<var>value</var>, PF2=<var>value</var>,
                        etc.):
            </p> 
                    
            <table border="1" cellpadding="5" class="screen">
               <tr>
                  <td><pre>
  Command ===&gt;                                                                   
  <strong>PF1=Help,PF3=Exit,PF12=Canc</strong>
</pre></td>
               </tr>
            </table> 
                   
         </dd> 
                
                
                
         <dt><a name="d0e74332"><strong> %YP</strong></a></dt>
         <dd> 
                    
            <p class="definition">The function-key lines are displayed in PC-like format, that is,
                        sequentially and only showing those keys to which names have been assigned
                        (F1=<var>value</var>, F2=<var>value</var>,
                        etc.):
            </p> 
                    
            <table border="1" cellpadding="5" class="screen">
               <tr>
                  <td><pre>
  Command ===&gt;                                                                   
  <strong>F1=Help,F3=Exit,F12=Canc</strong>
</pre></td>
               </tr>
            </table> 
                   
         </dd> 
                
              
      </dl> 
           
          
      <div><a name="d0e74357"></a></div> 
           
      <h4>Other Display Options</h4> 
            
            
      <p>Various other command options are available for function-key lines,
                such as:
      </p> 
            
      <ul> 
                
         <li> 
                    
            <p class="initem">single- and double-line display,</p> 
                   
         </li> 
                
         <li> 
                    
            <p class="initem">intensified display,</p> 
                   
         </li> 
                
         <li> 
                    
            <p class="initem">reverse video display,</p> 
                   
         </li> 
                
         <li> 
                    
            <p class="initem">color display.</p> 
                   
         </li> 
               
      </ul> 
            
      <p>For details on these options, see <a href="../tcom/pcy.htm">%Y - Control of PF-Key
            Lines</a> in the <cite>Terminal Commands</cite>
                documentation.
      </p> 
            
           
          
         
      <div><a name="Positioning_of_Function-Key_Lines"></a></div> 
          
      <h3> Positioning of Function-Key Lines </h3> 
           
           
      <dl> 
                
                
         <dt><a name="d0e74416"><strong>%YB</strong></a></dt>
         <dd> 
                    
            <p class="definition">The function-key lines are displayed at the bottom of the
                        screen.
            </p> 
                    
         </dd> 
                
                
                
         <dt><a name="d0e74432"><strong> %YT</strong></a></dt>
         <dd> 
                    
            <p class="definition">The function-key lines are displayed at the top of the screen.</p> 
                    
         </dd> 
                
                
                
         <dt><a name="d0e74448"><strong> %Y<var>nn</var></strong></a></dt>
         <dd> 
                    
            <p class="definition">The function-key lines are displayed on line
                        <var>nn</var> of the screen. 
            </p> 
                    
         </dd> 
                
              
      </dl> 
           
          
         
      <div><a name="Cursor-Sensitivity"></a></div> 
          
      <h3> 
              <a name="x520"></a>Cursor-Sensitivity 
      </h3> 
           
           
      <dl> 
                
                
         <dt><a name="d0e74489"><strong> %YC</strong></a></dt>
         <dd> 
                    
            <p class="definition">This command makes the function-key lines cursor-sensitive. This
                        means that they act like an action bar on a PC screen: you just move the cursor
                        to the desired function-key number or name and press <span class="key">Enter</span>, and
                        Natural reacts as if the corresponding function key had been pressed.
            </p> 
                    
            <p class="definition">To switch cursor-sensitivity off, you enter
                        <code>%YC</code> again (toggle switch).
            </p> 
                    
            <p class="definition">By using <code>%YC</code> in conjunction with tabular
                        display format (<code>%YN</code>) and having only the
                        function-key names displayed (<code>%YH</code>), you can equip
                        your applications with very comfortable action bar processing: the user merely
                        has to select a function name with the cursor and press <span class="key">Enter</span>, and
                        the function is executed.
            </p> 
                   
         </dd> 
                
              
      </dl> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_desgn_screen.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="Control_of_the_Message_Line_tc_m"></a></div> 
         
      <h2> 
             <a name="x521"></a> 
             <a name="x522"></a>Control of the Message Line - Terminal Command %M 
      </h2> 
          
          
      <p>Various options of the terminal command <a href="../tcom/pcm.htm"><code>%M</code></a> are available
              for defining how and where the Natural message line is to be displayed.
      </p> 
          
      <p>Below is information on:</p> 
      <ul>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#Positioning_the_Message_Line">Positioning the Message Line</a></p>
         </li>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#Message_Line_Color">Message Line Color</a></p>
         </li>
      </ul> 
          
         
      <div><a name="Positioning_the_Message_Line"></a></div> 
          
      <h3> Positioning the Message Line </h3> 
           
           
      <dl> 
                
                
         <dt><a name="d0e74575"><strong>%MB</strong></a></dt>
         <dd> 
                    
            <p class="definition">The message line is displayed at the bottom of the screen.</p> 
                     
                   
         </dd> 
                
                
                
         <dt><a name="d0e74592"><strong> %MT</strong></a></dt>
         <dd> 
                    
            <p class="definition">The message line is displayed at the top of the screen.</p> 
                    
         </dd> 
                
              
      </dl> 
           
      <p>Other options for the positioning of the message line are described in
               <a href="../tcom/pcm.htm">%M - Control of Message
            Line</a> in the <cite>Terminal Commands</cite>
               documentation.
      </p> 
           
          
          
         
      <div><a name="Message_Line_Color"></a></div> 
          
      <h3> Message Line Color </h3> 
           
           
      <dl> 
                
                
         <dt><a name="d0e74652"><strong> %M=<var>color-code</var></strong></a></dt>
         <dd> 
                    
            <p class="definition">The message line is displayed in the specified color (for an
                        explanation of color codes, see the session parameter
                        <a href="../parms/sp_cd.htm"><code>CD</code></a> as
                        described in the <cite>Parameter Reference</cite>).
            </p>
         </dd> 
                
              
      </dl> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_desgn_screen.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="Assigning_Colors_to_Fields_tc_pceq"></a></div> 
         
      <h2> 
             <a name="x523"></a> 
             <a name="x524"></a>Assigning Colors to Fields - Terminal Command %= 
      </h2> 
          
          
      <p>You can use the terminal command <a href="../tcom/pceq.htm"><code>%=</code></a> to assign
              colors to field attributes for programs that were originally not written for
              color support. The command causes all fields/text defined with the specified
              attributes to be displayed in the specified color.
      </p> 
          
      <p>If predefined color assignments are not suitable for your terminal type,
              you can use this command to override the original assignments with new
              ones.
      </p> 
          
      <p>You can also use the <code>%=</code> terminal command
              within Natural editors, for example to define color assignments dynamically
              during map creation.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left">Codes</th> 
                       
               <th align="left">Description</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <em>blank</em> 
               </td> 
                       
               <td>Clear color translate table.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>F</td> 
                       
               <td>Newly defined colors are to override colors assigned by the
                  program.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>N</td> 
                       
               <td>Color attributes assigned by program are not to be
                  modified.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>O</td> 
                       
               <td>Output field.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>M</td> 
                       
               <td>Modifiable field (output and input).</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>T</td> 
                       
               <td>Text constant.</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>B</td> 
                       
               <td>Blinking</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>C</td> 
                       
               <td>Italic</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>D</td> 
                       
               <td>Default</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>I</td> 
                       
               <td>Intensified</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>U</td> 
                       
               <td>Underlined</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>V</td> 
                       
               <td>Reverse video</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>BG</td> 
                       
               <td>Background</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>BL</td> 
                       
               <td>Blue</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>GR</td> 
                       
               <td>Green</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>NE</td> 
                       
               <td>Neutral</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>PI</td> 
                       
               <td>Pink</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>RE</td> 
                       
               <td>Red</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>TU</td> 
                       
               <td>Turquoise</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>YE</td> 
                       
               <td>Yellow</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <p> Example: </p> 
          <pre class="verbatim">%=TI=RE,OB=YE</pre> 
          <p>This example assigns the color red to all intensified text fields and
              yellow to all blinking output fields.
      </p> 
          
        
        
        
      <div class="noprint">
         <p><a href="pg_desgn_screen.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="Statistics_Line_Infoline_tc_pcx"></a></div> 
         
      <h2> 
              
             <a name="x530"></a> 
             <a name="x531"></a> Infoline - Terminal
             Command %X
      </h2> 
          
          
      <p>The terminal command %X controls the display of the Natural
              infoline. 
      </p> 
          
      <p>For further information, see the description of the
              terminal command <a href="../tcom/pcx.htm"><code>%X</code></a> in the
              <cite>Terminal Commands</cite> documentation.
      </p> 
           
      <ul></ul> 
          
          
          
        
        
      <div class="noprint">
         <p><a href="pg_desgn_screen.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="Windows"></a></div> 
         
      <h2> 
             <a name="x532"></a>Windows 
      </h2> 
          
          
      <p>Below is information on:</p> 
      <ul>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#What_is_a_Window">What is a Window?</a></p>
         </li>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#DEFINE_WINDOW_Statement">DEFINE WINDOW Statement</a></p>
         </li>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#INPUT_WINDOW_Statement">INPUT WINDOW Statement</a></p>
         </li>
      </ul> 
          
         
      <div><a name="What_is_a_Window"></a></div> 
          
      <h3> What is a Window?</h3> 
           
           
      <p>A <em>window</em> is that segment of a logical page, built by a
               program, which is displayed on the terminal screen.
      </p> 
           
      <p>A <em>logical page</em> is the output area for Natural; in other words
               the logical page contains the current report/map produced by the Natural
               program for display. This logical page may be larger than the physical
               screen.
      </p> 
           
      <p>There is always a window present, although you may not be aware of its
               existence. Unless specified differently (by a
               <a href="../sm/definewi.htm"><code>DEFINE WINDOW</code></a>
               statement), the size of the window is identical to the physical size of your
               terminal screen.
      </p> 
           
      <p>You can manipulate a window in two ways:</p> 
           
      <ul> 
               
         <li> 
                   
            <p class="initem">You can control the size and position of the window on the
                       <em>physical screen</em>.
            </p> 
                  
         </li> 
               
         <li> 
                   
            <p class="initem">You can control the position of the window on the <em>logical
                  page</em>.
            </p> 
                  
         </li> 
              
      </ul> 
           
      <h4 class="floating-title"> Positioning on the Physical Screen</h4> 
           
      <p>The figure below illustrates the positioning of a window on the
               physical screen. Note that the same section of the logical page is displayed in
               both cases, only the position of the window on the screen has changed.
      </p> 
           
      <p><img src="graphics/pgdesign-physicalscreen.png" alt="Physical screen" width="500" height="300"></p> 
           
      <h4 class="floating-title"> Positioning on the Logical Page</h4> 
           
      <p>The figure below illustrates the positioning of a window on the logical
               page.
      </p> 
           
      <p>When you change the position of the window on the <em>logical
            page</em>, the size and position of the window on the <em>physical screen</em>
               will remain unchanged. In other words, the window is not moved over the page,
               but the page is moved "underneath" the window.
      </p> 
           
      <p><img src="graphics/pgdesign-logicalpage.png" alt="Logical page" width="500" height="300"></p> 
           
          
         
      <div><a name="DEFINE_WINDOW_Statement"></a></div> 
          
      <h3> 
              <a name="x533"></a>DEFINE WINDOW Statement 
      </h3> 
           
           
      <p>You use the <a href="../sm/definewi.htm"><code>DEFINE
               WINDOW</code></a> statement to specify the size, position and attributes
               of a window on the <em>physical screen</em>.
      </p> 
           
      <p>A <code>DEFINE WINDOW</code> statement does not activate a window; this
               is done with a <a href="../sm/setwindo.htm"><code>SET
               WINDOW</code></a> statement or with the
               <a href="../sm/input1.htm#window-name_input1"><code>WINDOW</code></a> clause
               of an <a href="../sm/input.htm"><code>INPUT</code></a>
               statement.
      </p> 
           
      <p>Various options are available with the
               <a href="../sm/definewi.htm"><code>DEFINE WINDOW</code></a>
               statement. These are described below in the context of the following example.
               
      </p>
           
           
      <p>The following program defines a window on the physical screen.</p> 
           <pre class="verbatim">
** Example 'WINDX01': DEFINE WINDOW                                     
************************************************************************
DEFINE DATA LOCAL                                                       
1 COMMAND (A10)                                                         
END-DEFINE                                                              
*                                                                       
<strong>DEFINE WINDOW TEST                                                      
       SIZE 5*25                                                        
       BASE 5/40                                                        
       TITLE 'Sample Window'                                            
       CONTROL WINDOW                                                   
       FRAMED POSITION SYMBOL BOTTOM LEFT</strong>                     
*                                                                       
INPUT WINDOW='TEST' WITH TEXT 'message line'                            
      COMMAND (AD=I'_') /                                               
      'dataline 1' /                                                    
      'dataline 2' /                                                    
      'dataline 3' 'long data line'                                     
*                                                                       
IF COMMAND = 'TEST2'         
  FETCH 'WINDX02'            
ELSE                         
  IF COMMAND = '.'           
    STOP                     
  ELSE                       
    REINPUT 'invalid command'
  END-IF                     
END-IF                       
END
</pre> 
           <p>The window-name identifies the window. The name may be up to 32
               characters long. For a window name, the same naming conventions apply as for
               user-defined variables. Here the name is <code>TEST</code>.
      </p> 
           
      <p>The window size is set with the <a href="../sm/definewi.htm#SIZE"><code>SIZE</code></a> option. Here the
               window is 5 lines high and 25 columns (positions) wide.
      </p> 
           
      <p>The position of the window is set by the
               <a href="../sm/definewi.htm#BASE"><code>BASE</code></a> option.
               Here the top left-hand corner of the window is positioned on line 5, column
               40.
      </p> 
           
      <p>With the <a href="../sm/definewi.htm#operand5_definewi"><code>TITLE</code></a>
               option, you can define a title that is to be displayed in the window frame (of
               course, only if you have defined a frame for the window).
      </p> 
           
      <p>With the <a href="../sm/definewi.htm#CONTROL"><code>CONTROL</code></a> clause, you
               determine whether the PF-key lines, the message line and the statistics line
               are displayed in the window or on the full physical screen. Here <code>CONTROL
            WINDOW</code> causes the message line to be displayed inside the window.
               <code>CONTROL SCREEN</code> would cause the lines to be displayed on the full
               physical screen outside the window. If you omit the <code>CONTROL</code>
               clause, <code>CONTROL WINDOW</code> applies by default.
      </p> 
           
      <p>With the <a href="../sm/definewi.htm#FRAMED"><code>FRAMED</code></a> option, you
               define that the window is to be framed. This frame is then cursor-sensitive.
               Where applicable, you can page forward, backward, left or right within the
               window by simply placing the cursor over the appropriate symbol (&lt;, -, +, or
               &gt;; see <a href="../sm/definewi.htm#position-clause"><code>POSITION</code></a>
               clause) and then pressing <span class="key">Enter</span>. In other words, you are moving the
               <em>logical page</em> underneath the window on the physical screen. If no
               symbols are displayed, you can page backward and forward within the window by
               placing the cursor in the top frame line (for backward positioning) or bottom
               frame line (for forward positioning) and then pressing <span class="key">Enter</span>.
      </p> 
           
      <p>With the <code>POSITION</code> clause of the
               <a href="../sm/definewi.htm#FRAMED"><code>FRAMED</code></a>
               option, you define that information on the position of the window on the
               logical page is to be displayed in the frame of the window. This applies only
               if the logical page is larger than the window; if it is not, the
               <code>POSITION</code> clause will be ignored. The position information
               indicates in which directions the logical page extends above, below, to the
               left and to the right of the current window.
      </p> 
           
      <p>If the <code>POSITION</code> clause is omitted, <code>POSITION SYMBOL
            TOP RIGHT</code> applies by default.
      </p> 
           
      <p> <a href="../sm/definewi.htm#POSITION_SYMBOL"><code>POSITION
               SYMBOL</code></a> causes the position information to be displayed in
               form of symbols: "More: &lt; - + &gt;". The information is
               displayed in the top and/or bottom frame line.
      </p> 
           
      <p><code>TOP</code>/<code>BOTTOM</code> determines whether the position
               information is displayed in the top or bottom frame line.
      </p> 
           
      <p><code>LEFT</code>/<code>RIGHT</code> determines whether the position
               information is displayed in the left or right part of the frame line.
      </p> 
            
            
      <p>You can define which characters are to be used for the frame with the
                terminal command <a href="../tcom/pcfeq.htm"><code>%F=<var>chv</var></code></a>.
      </p>
            
             
             
      <table border="1" class="color" cellpadding="3" width="97%"> 
                 
         <tbody align="left" valign="top"> 
                     
            <tr> 
                         
               <th>c</th> 
                         
               <td>The first character will be used for the four
                  <em>corners</em> of the window frame.
               </td> 
                        
            </tr> 
                     
            <tr> 
                         
               <th>h</th> 
                         
               <td>The second character will be used for the
                  <em>horizontal</em> frame lines. 
               </td> 
                        
            </tr> 
                     
            <tr> 
                         
               <th>v</th> 
                         
               <td>The third character will be used for the
                  <em>vertical</em> frame lines. 
               </td> 
                        
            </tr> 
                    
         </tbody> 
                
      </table> 
             
            
      <p> Example: </p> 
            <pre class="verbatim">
%F=+-!
</pre> 
            <p>The above command makes the window frame look like this:</p> 
            <pre class="verbatim">
+------------------------+
!                        !
!                        !
!                        !
!                        !
+------------------------+
</pre> 
            
           
          
         <div><a name="INPUT_WINDOW_Statement"></a></div> 
          
      <h3> 
              <a name="x534"></a>INPUT WINDOW Statement 
      </h3> 
           
           
      <p>The <a href="../sm/input1.htm#window-name_input1"><code>INPUT
               WINDOW</code></a> statement activates the window defined in the
               <a href="../sm/definewi.htm"><code>DEFINE WINDOW</code></a>
               statement. In the example, the window TEST is activated. Note that if you wish
               to output data in a window (for example, with a <a href="../sm/write.htm"><code>WRITE</code></a> statement), you use the
               <a href="../sm/setwindo.htm"><code>SET WINDOW</code></a>
               statement.
      </p> 
           
      <p>When the above program is run, the window is displayed with one input
               field <code>COMMAND</code>. The session parameter
               <a href="../parms/sp_ad.htm"><code>AD</code></a> is used
               to define that the value of the field is displayed
               <a href="../parms/sp_ad.htm#sp_ad_ad_i">intensified</a> and an
               underscore is used as <a href="../parms/sp_ad.htm#sp_ad_Filler_Character">filler
                  character</a>.
      </p> 
           
      <p>Output of Program WINDX01:</p> 
            
            
            
      <table border="1" cellpadding="5" class="screen">
         <tr>
            <td><pre>&gt; r                                     &gt; +  Program     WINDX01  Lib SYSEXPG  
Top    ....+....1....+....2....+....3....+....4....+....5....+....6....+....7..
  0010 ** Example 'WINDX01': DEFINE WINDOW                                     
  0020 ******************************* <strong>+----Sample Window-----+</strong> ***************
  0030 DEFINE DATA LOCAL               <strong>! message line         !</strong>                
  0040 1 COMMAND (A10)                 <strong>! COMMAND __________   !</strong>                
  0050 END-DEFINE                      <strong>! dataline 1           !</strong>                
  0060 *                               <strong>+More:     + &gt;---------+</strong>                
  0070 DEFINE WINDOW TEST                                                      
  0080        SIZE 5*25                                                        
  0090        BASE 5/40                                                        
  0100        TITLE 'Sample Window'                                            
  0110        CONTROL WINDOW                                                   
  0120        FRAMED POSITION SYMBOL BOTTOM LEFT                               
  0130 *                                                                       
  0140 <strong>INPUT WINDOW='TEST' WITH TEXT 'message line'</strong>                            
  0150       <strong>COMMAND (AD=I'_') /</strong>                                               
  0160       <strong>'dataline 1' /</strong>                                                    
  0170       <strong>'dataline 2' /</strong>                                                    
  0180       <strong>'dataline 3' 'long data line'</strong>                                     
  0190 *                                                                       
  0200 IF COMMAND = 'TEST2'                                                    
       ....+....1....+....2....+....3....+....4....+....5....+... S 29   L 1   
</pre></td>
         </tr>
      </table> 
            
      <p>In the bottom frame line, the position information <code>More: +
            &gt;</code> indicates that there is more information on the logical page than
                is displayed in the window.
      </p> 
            
      <p>To see the information that is further down on the logical page, you
                place the cursor in the bottom frame line on the plus (+) sign and press
                <span class="key">Enter</span>.
      </p> 
            
      <p>The window is now moved downwards. Note that the text <code>long data
            line</code> does not fit in the window and is consequently not fully
                visible.
      </p> 
            
      <table border="1" cellpadding="5" class="screen">
         <tr>
            <td><pre>
&gt; r                                     &gt; +  Program     WINDX01  Lib SYSEXPG  
Top    ....+....1....+....2....+....3....+....4....+....5....+....6....+....7..
  0010 ** Example 'WINDX01': DEFINE WINDOW                                     
  0020 ******************************* <strong>+----Sample Window-----+</strong> ***************
  0030 DEFINE DATA LOCAL               <strong>! message line         !</strong>                
  0040 1 COMMAND (A10)                 <strong>! dataline 3 long data !</strong>                
  0050 END-DEFINE                      <strong>! dataline 2           !</strong>               
  0060 *                               <strong>+More:   -   &gt;---------+</strong>                
  0070 DEFINE WINDOW TEST                                                      
  0080        SIZE 5*25                                                        
  0090        BASE 5/40                                                        
  0100        TITLE 'Sample Window'                                            
  0110        CONTROL WINDOW                                                   
  0120        FRAMED POSITION SYMBOL BOTTOM LEFT                               
  0130 *                                                                       
  0140 INPUT WINDOW='TEST' WITH TEXT 'message line'                            
  0150       COMMAND (AD=I'_') /                                               
  0160       'dataline 1' /                                                    
  0170       'dataline 2' /                                                    
  0180       'dataline 3' 'long data line'                                     
  0190 *                                                                       
  0200 IF COMMAND = 'TEST2'                                                    
       ....+....1....+....2....+....3....+....4....+....5....+... S 29   L 1   
</pre></td>
         </tr>
      </table> 
            
      <p>To see this hidden information to the right, you place the cursor in
                the bottom frame line on the less-than symbol (&gt;) and press
                <span class="key">Enter</span>. The window is now moved to the right on the logical page and
                displays the previously invisible word <code>line</code>:
      </p> 
            
      <table border="1" cellpadding="5" class="screen">
         <tr>
            <td><pre>
&gt; r                                     &gt; +  Program     WINDX01  Lib SYSEXPG  
Top    ....+....1....+....2....+....3....+....4....+....5....+....6....+....7..
  0010 ** Example 'WINDX01': DEFINE WINDOW                                     
  0020 ******************************* <strong>+----Sample Window-----+</strong> ***************
  0030 DEFINE DATA LOCAL               <strong>! message line         !</strong>                
  0040 1 COMMAND (A10)                 <strong>!  line                ! &lt;==</strong>
  0050 END-DEFINE                      <strong>!                      !</strong>                
  0060 *                               <strong>+More: &lt; -    ---------+</strong>                
  0070 DEFINE WINDOW TEST                                                      
  0080        SIZE 5*25                                                        
  0090        BASE 5/40                                                        
  0100        TITLE 'Sample Window'                                            
  0110        CONTROL WINDOW                                                   
  0120        FRAMED POSITION SYMBOL BOTTOM LEFT                               
  0130 *                                                                       
  0140 INPUT WINDOW='TEST' WITH TEXT 'message line'                            
  0150       COMMAND (AD=I'_') /                                               
  0160       'dataline 1' /                                                    
  0170       'dataline 2' /                                                    
  0180       'dataline 3' 'long data line'                                     
  0190 *                                                                       
  0200 IF COMMAND = 'TEST2'                                                    
       ....+....1....+....2....+....3....+....4....+....5....+... S 29   L 1   
</pre></td>
         </tr>
      </table> 
            
          
      <div><a name="d0e75678"></a></div> 
           
      <h4>Multiple Windows</h4> 
            
            
      <p>You can, of course, open multiple windows. However, only one Natural
                window is active at any one time, that is, the most recent window. Any previous
                windows may still be visible on the screen, but are no longer active and are
                ignored by Natural. You may enter input only in the most recent window. If
                there is not enough space to enter input, the window size must be adjusted
                first.
      </p> 
            
      <p>When <code>TEST2</code> is entered in the <code>COMMAND</code> field,
                the program <code>WINDX02</code> is executed.
      </p> 
            <pre class="verbatim">
** Example 'WINDX02': DEFINE WINDOW                                     
************************************************************************
DEFINE DATA LOCAL                                                       
1 COMMAND (A10)                                                         
END-DEFINE                                                              
*                                                                       
DEFINE WINDOW TEST2                                                     
       SIZE 5*30                                                        
       BASE 15/40                                                       
       TITLE 'Another Window'                                           
       CONTROL SCREEN                                                   
       FRAMED POSITION SYMBOL BOTTOM LEFT                               
*                                                                       
INPUT WINDOW='TEST2' WITH TEXT 'message line'                           
      COMMAND (AD=I'_') /                                               
      'dataline 1' /                                                    
      'dataline 2' /                                                    
      'dataline 3' 'long data line'                                     
*                                                                       
IF COMMAND = 'TEST' 
  FETCH 'WINDX01'            
ELSE                         
  IF COMMAND = '.'           
    STOP                     
  ELSE                       
    REINPUT 'invalid command'
  END-IF                     
END-IF                       
END                         
</pre> 
            <p>A second window is opened. The other window is still visible, but it
                is inactive.
      </p> 
             
            
      <table border="1" cellpadding="5" class="screen">
         <tr>
            <td><pre>
<strong>message line</strong>
&gt; r                                     &gt; +  Program     WINDX01  Lib SYSEXPG  
Top    ....+....1....+....2....+....3....+....4....+....5....+....6....+....7..
  0010 ** Example 'WINDX01': DEFINE WINDOW                                     
  0020 ******************************* <strong>+----Sample Window-----+</strong> ***************
  0030 DEFINE DATA LOCAL               <strong>! message line         !  Inactive</strong>
  0040 1 COMMAND (A10)                 <strong>! COMMAND TEST2_____   !  Window</strong>
  0050 END-DEFINE                      <strong>! dataline 1           !  &lt;==</strong>
  0060 *                               <strong>+More:     + &gt;---------+</strong>                
  0070 DEFINE WINDOW TEST                                                      
  0080        SIZE 5*25                                                        
  0090        BASE 5/40                                                        
  0100        TITLE 'Sample Window'                                            
  0110        CONTROL WINDOW                                                   
  0120        FRAMED POSITION SYMBOL B <strong>+------Another Window-------+  Currently</strong>         
  0130 *                               <strong>! COMMAND __________        !  Active</strong>
  0140 INPUT WINDOW='TEST' WITH TEXT ' <strong>! dataline 1                !  Window</strong>
  0150       COMMAND (AD=I'_') /       <strong>! dataline 2                !  &lt;==</strong>
  0160       'dataline 1' /            <strong>+More:   +------------------+</strong>           
  0170       'dataline 2' /                                                    
  0180       'dataline 3' 'long data line'                                     
  0190 *                                                                       
  0200 IF COMMAND = 'TEST2'                                                            
</pre></td>
         </tr>
      </table> 
            
      <p>Note that for the new window the message line is now displayed
                on the full physical screen (at the top)
                and not in the
                window. This was defined by the
                <a href="../sm/definewi.htm#CONTROL_SCREEN"><code>CONTROL
               SCREEN</code></a> clause in the <code>WINDX02</code> program.
      </p> 
            
      <p>For further details on the statements
                <a href="../sm/definewi.htm"><code>DEFINE WINDOW</code></a>,
                <a href="../sm/input1.htm#window-name_input1"><code>INPUT
               WINDOW</code></a> and <a href="../sm/setwindo.htm"><code>SET
               WINDOW</code></a>, see the corresponding descriptions in the
                <cite>Statements</cite> documentation.
      </p> 
            
           
          
        
        
      <div class="noprint">
         <p><a href="pg_desgn_screen.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="Standard_Dynamic_Layout_Maps"></a></div> 
         
      <h2> 
             <a name="x535"></a>Standard/Dynamic Layout Maps 
      </h2> 
         
      <div><a name="d0e75793"></a></div> 
          
      <h3> 
              <a name="x536"></a>Standard Layout Maps
      </h3> 
           
           
      <p>A
               <em>standard layout</em> can be defined in the map editor. This layout
               guarantees a uniform appearance for all maps that reference it throughout the
               application.
      </p> 
           
      <p>When a map that references a standard layout is initialized, the
               standard layout becomes a fixed part of the map. This means that if this
               standard layout is modified, all affected maps must be re-cataloged before the
               changes take effect.
      </p> 
           
          
         
      <div><a name="d0e75824"></a></div> 
          
      <h3> 
              <a name="x537"></a>Dynamic Layout Maps
      </h3> 
           
           
      <p>In contrast to a standard layout, a <em>dynamic layout</em> does not
               become a fixed part of a map that references it, rather it is executed at
               runtime.
      </p> 
           
      <p>This means that if you define the layout map as "dynamic"
               on the Define Map Settings For MAP screen in the map
               editor, any modifications to
               the layout map are also carried out on all maps that reference it. The maps
               need not be re-cataloged.
      </p> 
            
           
      <p>For further details on layout maps, see <a href="../edis/edis_ux_map.htm">Map Editor</a>
               in the <cite>Editors</cite> documentation.
      </p> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_desgn_screen.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="Multilingual_User_Interfaces"></a></div> 
         
      <h2> 
             <a name="x538"></a> 
             <a name="x539"></a>Multilingual User Interfaces 
      </h2> 
          
          
      <p>Using Natural, you can create multilingual applications for
              international use.
      </p> 
          
      <p>Maps, helproutines, error messages, programs, functions, subprograms and copycodes can be defined in
              up to 60 different languages (including languages with double-byte character
              sets).
      </p> 
          
      <p>Below is information on:</p> 
      <ul>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#Language_Codes">Language Codes</a></p>
         </li>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#Defining_the_Language_of_a_Natural_Object">Defining the Language of a Natural Object</a></p>
         </li>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#Defining_the_User_Language">Defining the User Language</a></p>
         </li>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#Referencing_Multilingual_Objects">Referencing Multilingual Objects</a></p>
         </li>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#Programs">Programs</a></p>
         </li>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#Error_Messages">Error Messages</a></p>
         </li>
         <li>
            <p class="initem"><a href="pg_desgn_screen.htm#Edit_Masks_for_Date_and_Time_Fields_pg_desgn_screen">Edit Masks for Date and Time Fields</a></p>
         </li>
      </ul> 
          
         
      <div><a name="Language_Codes"></a></div> 
          
      <h3> 
              <a name="x540"></a>Language Codes 
      </h3> 
           
           
      <p>In Natural, each language has a <em>language code</em> (from 1 to 60).
               The table below is an extract from the full table of language codes. For a
               complete overview, refer to the description of the system variable
               <a href="../vari/natenv.htm#LANGUAGE"><code>*LANGUAGE</code></a>
               in the <cite>System Varibales</cite> documentation.
      </p> 
            
            
      <table border="1" class="color" cellpadding="3" width="97%"> 
                  
                
         <thead align="left" valign="top"> 
                    
            <tr> 
                        
               <th align="left">Language Code</th> 
                        
               <th align="left">Language</th> 
                        
               <th align="left">Map Code in Object Names</th> 
                       
            </tr> 
                   
         </thead> 
                
         <tbody align="left" valign="top"> 
                    
            <tr> 
                        
               <td>1</td> 
                        
               <td>English</td> 
                        
               <td>1</td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td>2</td> 
                        
               <td>German</td> 
                        
               <td>2</td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td>3</td> 
                        
               <td>French</td> 
                        
               <td>3</td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td>4</td> 
                        
               <td>Spanish</td> 
                        
               <td>4</td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td>5</td> 
                        
               <td>Italian</td> 
                        
               <td>5</td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td>6</td> 
                        
               <td>Dutch</td> 
                        
               <td>6</td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td>7</td> 
                        
               <td>Turkish</td> 
                        
               <td>7</td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td>8</td> 
                        
               <td>Danish</td> 
                        
               <td>8</td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td>9</td> 
                        
               <td>Norwegian</td> 
                        
               <td>9</td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td>10</td> 
                        
               <td>Albanian</td> 
                        
               <td>A</td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td>11</td> 
                        
               <td>Portuguese&nbsp;&nbsp;</td> 
                        
               <td>B</td> 
                       
            </tr> 
                   
         </tbody> 
               
      </table> 
            
           
      <p>The language code (left column) is the code that is contained in the
               system variable <a href="../vari/natenv.htm#LANGUAGE"><code>*LANGUAGE</code></a>.
               This code is used by Natural internally. It is the code you use to define the
               user language (see <a href="pg_desgn_screen.htm#Defining_the_User_Language">Defining the User
            Language</a> below). The code you use to identify the language
               of a Natural object is the <em>map code</em> in the right-hand column of the
               table.
      </p> 
           
      <p> Example: </p> 
           
      <p>The language code for Portuguese is "11". The code you use
               when cataloging a Portuguese Natural object is "B".
      </p> 
           
      <p>For the full table of language codes, see the system variable
               <a href="../vari/natenv.htm#LANGUAGE"><code>*LANGUAGE</code></a>
               as described in the <cite>System Variables</cite> documentation.
      </p> 
           
          
         
      <div><a name="Defining_the_Language_of_a_Natural_Object"></a></div> 
          
      <h3> 
              <a name="x541"></a> Defining the Language of a Natural Object 
      </h3> 
           
           
      <p>To define the language of a Natural object (map, helproutine, program,
               function, subprogram or copycode), you add the
               corresponding map code to the object name. Apart from the map code, the name of
               the object must be identical for all languages.
      </p> 
           
      <p>In the example below, a map has been created in English and in German.
               To identify the languages of the maps, the map code that corresponds to the
               respective language has been included in the map name.
      </p> 
           
      <h4 class="floating-title"> Example of Map Names for a Multilingual
               Application
      </h4> 
           
      <p><code>DEMO1</code> = English map (map code 1) 
      </p> 
           
      <p><code>DEMO2</code> = German map (map code 2)
      </p> 
           
      <h4 class="floating-title"> Defining Languages with Alphabetical Map Codes
               
      </h4> 
           
      <p>Map codes are in the range 1-9, A-Z or a-y. The alphabetical map codes
               require special handling.
      </p> 
           
      <p>Normally, it is not possible to catalog an object with a lower-case
               letter in the name - all characters are automatically converted into
               capitals.
      </p> 
           
      <p>This is however necessary, if for example you wish to define an object
               for Kanji (Japanese) which has the language code 59 and the map code
               <code>x</code>.
      </p> 
           
      <p>To catalog such an object, you first set the correct language code
               (here 59) using the terminal command <a href="../tcom/pcl.htm"><code>%L=<var>nn</var></code></a>,
               where <var>nn</var> is the language code.
      </p> 
           
      <p>You then catalog the object using the ampersand (&amp;) character
               instead of the actual map code in the object name. So to have a Japanese
               version of the map <code>DEMO</code>, you stow the map under the name
               <code>DEMO&amp;</code>.
      </p> 
           
      <p>If you now look at the list of Natural objects, you will see that the
               map is correctly listed as <code>DEMOx</code>.
      </p> 
           
      <p>Objects with language codes 1-9 and upper case A-Z can be cataloged
               directly without the use of the ampersand (&amp;) notation.
      </p> 
           
      <p>In the example list below, you can see the three maps
               <code>DEMO1</code>, <code>DEMO2</code> and <code>DEMOx</code>. To delete the
               map <code>DEMOx</code>, you use the same method as when creating it, that is,
               you set the correct language with the terminal command
               <a href="../tcom/pcl.htm"><code>%L=59</code></a> and
               then confirm the deletion with the ampersand (&amp;) notation
               (<code>DEMO&amp;</code>).
      </p> 
            
           
          
         
      <div><a name="Defining_the_User_Language"></a></div> 
          
      <h3> 
              <a name="x542"></a>Defining the User Language 
      </h3> 
           
           
      <p>You define the language to be used per user - as defined in the system
               variable <a href="../vari/natenv.htm#LANGUAGE"><code>*LANGUAGE</code></a>
               - with the profile parameter <a href="../parms/ulang.htm"><code>ULANG</code></a> (which is
               described in the <cite>Parameter Reference</cite>) or with the terminal
               command <a href="../tcom/pcl.htm"><code>%L=<var>nn</var></code></a>
               (where <var>nn</var> is the language code).
      </p> 
           
          
         
      <div><a name="Referencing_Multilingual_Objects"></a></div> 
          
      <h3> 
              <a name="x543"></a> Referencing Multilingual Objects 
      </h3> 
           
           
      <p>To reference multilingual objects in a program, you use the ampersand
               (&amp;) character in the name of the object.
      </p> 
           
      <p>The program below uses the maps <code>DEMO1</code> and
               <code>DEMO2</code>. The ampersand (&amp;) character at the end of the map name
               stands for the map code and indicates that the map with the current language as
               defined in the <code>*LANGUAGE</code> system variable is to be
               used.
      </p> 
           <pre class="verbatim">
DEFINE DATA LOCAL  
1 PERSONNEL VIEW OF EMPLOYEES
  2 NAME (A20) 
  2 PERSONNEL-ID (A8) 
1 CAR VIEW OF VEHICLES
   2 REG-NUM (A15) 
1 #CODE (N1)  
END-DEFINE
* 
<strong>INPUT USING MAP 'DEMO&amp;'</strong> /* &lt;--- INVOKE MAP WITH CURRENT LANGUAGE CODE 
...
</pre> 
           <p>When this program is run, the English map (<code>DEMO1</code>) is
               displayed. This is because the current value of
               <a href="../vari/natenv.htm#LANGUAGE"><code>*LANGUAGE</code></a>
               is <code>1</code> = English.
      </p> 
           
      <table border="1" cellpadding="5" class="screen">
         <tr>
            <td><pre>
                                                          MAP DEMO1   
                                                                                 
                                                                                 
                                SAMPLE MAP                                     
                                                                                 
                                                                                 
                                                                                 
                                                                                 
                    Please select a function!                                    
                                                                                 
                                                                                 
                                                                                 
                    1.) Employee information                                     
                                                                                 
                    2.) Vehicle information                                      
                                                                                 
                                                                                 
                                                                                 
                    Enter code here: _
</pre></td>
         </tr>
      </table> 
           
      <p>In the example below, the language code has been switched to
               <code>2</code> = German with the terminal command
               <a href="../tcom/pcl.htm"><code>%L=2</code></a>.
      </p>
           
           
      <p>When the program is now run, the German map (<code>DEMO2</code>) is
               displayed.
      </p> 
           
      <table border="1" cellpadding="5" class="screen">
         <tr>
            <td><pre>
                                BEISPIEL-MAP                                   
                                                                                 
                                                                                 
                                                                                 
                                                                                 
                    Bitte w&auml;hlen Sie eine Funktion!                              
                                                                                 
                                                                                 
                                                                                 
                    1.) Mitarbeiterdaten                                         
                                                                                 
                    2.) Fahrzeugdaten                                            
                                                                                 
                                                                                 
                                                                                 
                 Code hier eingeben: _
</pre></td>
         </tr>
      </table> 
           
          
         
      <div><a name="Programs"></a></div> 
          
      <h3> Programs</h3> 
           
           
      <p>For some applications it may be useful to define multilingual programs.
               For example, a standard invoicing program, might use different subprograms to
               handle various tax aspects, depending on the country where the invoice is to be
               written.
      </p> 
           
      <p>Multilingual programs are defined with the same technique as described
               above for maps.
      </p> 
           
          
         
      <div><a name="Error_Messages"></a></div> 
          
      <h3> Error Messages </h3> 
           
           
      <p>Using the Natural utility SYSERR, you can translate Natural error
               messages into up to 60 languages, and also define your own error messages.
      </p> 
           
      <p>Which message language a user sees, depends on the
               <a href="../vari/natenv.htm#LANGUAGE"><code>*LANGUAGE</code></a>
               system variable.
      </p> 
           
      <p>For further information on error messages, see
               <a href="../utis/syserr.htm">SYSERR Utility</a>
               in the <cite>Utilities</cite> documentation.
      </p> 
           
          
         
      <div><a name="Edit_Masks_for_Date_and_Time_Fields_pg_desgn_screen"></a></div> 
          
      <h3> Edit Masks for Date and Time Fields </h3> 
           
           
      <p>The language used for date and time fields defined with edit masks also
               depends on the system variable <a href="../vari/natenv.htm#LANGUAGE"><code>*LANGUAGE</code></a>.
      </p>
           
           
      <p>For details on edit masks, see the session parameter
               <a href="../parms/sp_em.htm"><code>EM</code></a> as
               described in the <cite>Parameter Reference</cite>.
      </p> 
           
          
        
        
      <div class="noprint">
         <p><a href="pg_desgn_screen.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="Skill-Sensitive_User_Interfaces"></a></div> 
         
      <h2> 
             <a name="x544"></a> 
             <a name="x545"></a>Skill-Sensitive User Interfaces 
      </h2> 
          
          
      <p>Users with varying levels of skill may wish to have different maps (of
              varying detail) while using the same application.
      </p> 
          
      <p>If your application is not for international use by users speaking
              different languages, you can use the techniques for multilingual maps to define
              maps of varying detail.
      </p> 
          
      <p>For example, you could define language code 1 as corresponding to the
              skill of the beginner, and language code 2 as corresponding to the skill of the
              advanced user. This simple but effective technique is illustrated below.
      </p> 
          
      <p>The following map (PERS1) includes instructions for the end user on how
              to select a function from the menu. The information is very detailed. The name
              of the map contains the map code 1:
      </p> 
          
      <table border="1" cellpadding="5" class="screen">
         <tr>
            <td><pre>
                                                          MAP PERS1       
                                                                                 
                                  SAMPLE MAP                                     
                                                                                 
                    Please select a function                                     
                                                                                 
                                                                                 
                    1.) Employee information  _                                  
                                                                                 
                    2.) Vehicle information   _                                  
                                                                                 
                        Enter code:  _                                           
                                                                                 
  To select a function, do one of the following:                                 
                                                                                 
  - place the cursor on the input field next to desired function and press Enter 
  - mark the input field next to desired function with an X and press Enter      
  - enter the desired function code (1 or 2) in the 'Enter code' field and press 
Enter                                                                           
</pre></td>
         </tr>
      </table> 
          
      <p>The same map, but without the detailed instructions is saved under the
              same name, but with map code 2.
      </p> 
          
      <table border="1" cellpadding="5" class="screen">
         <tr>
            <td><pre>
                                                      MAP PERS2       
                                                                                 
                                                                                 
                                  SAMPLE MAP                                     
                                                                                 
                    Please select a function                                     
                                                                                 
                                                                                 
                    1.) Employee information  _                                  
                                                                                 
                    2.) Vehicle information   _                                  
                                                                                 
                        Enter code:  _                                           
                                                                                
</pre></td>
         </tr>
      </table> 
          
      <p>In the example above, the map with the detailed instructions is output,
              if the <code>ULANG</code> profile parameter has the value 1, the map
              without the instructions if the value is 2. See also the description of the
              profile parameter <a href="../parms/ulang.htm"><code>ULANG</code></a> (in the
              <cite>Parameter Reference</cite>).
      </p> 
          
        
       
      <div class="noprint">
         <div class="nospy">
            <p><a href="pg_desgn_screen.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
            <table border="0" cellpadding="0" cellspacing="0" width="97%">
               <col width="15%">
               <col width="34%">
               <col width="48%">
               <tr>
                  <td class="footer"><img src="../graphics/blank.png" width="3" height="10">&nbsp;<a class="navig" target="_blank" href="http://www.softwareag.com">www.softwareag.com</a>&nbsp;
                  </td>
                  <td nowrap class="footer"><img src="../graphics/blank.png" width="3"><a class="navig" href="../general/legal.htm" target="_blank">Copyright &copy; Software AG 1992-2008. All rights reserved.&nbsp;</a></td>
                  <td class="bottomlinks" align="right" nowrap><img src="../graphics/blank.png" width="3"><a class="navig" target="_blank" href="../fts/search.htm" onclick="window.open('../fts/search.htm', 'fts', 'dependent,width=555,height=420,resizable'); return false">SEARCH</a>
                     &nbsp;&nbsp;<a class="navig" href="javascript:sized_window('../navig/navig.htm')" onclick="document.cookie='sagphdcc=../pg/pg_desgn_screen.htm;path=/'; window.open('../navig/navig.htm', 'nvgtr', 'dependent,width=450,height=270,resizable'); return false">CONTENTS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="http://documentation.softwareag.com/natural/nat635unx/pdf/pg/pg_desgn_screen.pdf">PDF PAGE</a>
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="../general/print.htm">PDF BOOKS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" href="../overview.htm">HOME</a>
                     &nbsp;&nbsp;<a class="navig" href="pg_desgn-over.htm">UP</a>
                     &nbsp;&nbsp;<a class="navig" href="pg_desgn-over.htm">PREV</a>
                     &nbsp;&nbsp;<a class="navig" href="pg_desgn_dialog.htm">NEXT</a></td>
               </tr>
            </table>
         </div>
      </div>
   </body>
</html>