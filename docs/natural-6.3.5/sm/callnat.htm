
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   
      <meta name="generator" content="Sagdoc XSL Stylesheets">
      <link rel="stylesheet" type="text/css" href="../general/style2.css"><script language="JavaScript" src="../general/selbox.js"></script><script type="text/javascript" language="javascript">
         <!--
window.name = 'contents';
//--></script><title>CALLNAT</title>
   </head>
   <body bgcolor="#FFFFFF" background="../graphics/bar.png" style="margin-left: 20px;">
      <div><a name="callnat" id="16761"></a></div>
      <div class="noprint">
         <div class="nospytext">
            <table border="0" cellpadding="0" cellspacing="0" width="97%">
               <col width="15%">
               <col width="34%">
               <col width="48%">
               <tr>
                  <td colspan="2" class="topline"><a name="Top"></a>&nbsp;<img src="../graphics/natux_logo.png"></td>
                  <td class="topline" align="right"><img src="../graphics/sag_logo.png">&nbsp;
                  </td>
               </tr>
               <tr>
                  <td class="header" nowrap><img src="../graphics/blank.png" width="3" height="10"></td>
                  <td class="header"><img src="../graphics/blank.png" width="3">Version&nbsp;6.3.5 for UNIX
                  </td>
                  <td class="toplinks" align="right" nowrap><img src="../graphics/blank.png" width="3"><a class="navig" target="_blank" href="../fts/search.htm" onclick="window.open('../fts/search.htm', 'fts', 'dependent,width=555,height=420,resizable'); return false">SEARCH</a>
                     &nbsp;&nbsp;<a class="navig" href="javascript:sized_window('../navig/navig.htm')" onclick="document.cookie='sagphdcc=../sm/callnat.htm;path=/'; window.open('../navig/navig.htm', 'nvgtr', 'dependent,width=450,height=270,resizable'); return false">CONTENTS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="http://documentation.softwareag.com/natural/nat635unx/pdf/sm/callnat.pdf">PDF PAGE</a>
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="../general/print.htm">PDF BOOKS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" href="../overview.htm">HOME</a>
                     &nbsp;&nbsp;<a class="navig" href="sm-over.htm">UP</a>
                     &nbsp;&nbsp;<a class="navig" href="callloop.htm">PREV</a>
                     &nbsp;&nbsp;<a class="navig" href="closecon.htm">NEXT</a></td>
               </tr>
            </table>
         </div>
      </div>
      <div class="nospytext" style="margin-top:0.25in;">
         <div><span class="module">&nbsp;&#8212;&nbsp;&nbsp;Statements&nbsp;&nbsp;&#8212;</span></div>
      </div> 
        
      <div class="nospytext">
         <h1>CALLNAT 
               <a name="x39"></a></h1>
      </div> 
         
          
          
      <table border="0" class="syntax" cellpadding="3"> 
               
               
               
                
              
         <tbody align="left" valign="top"> 
                  
            <tr> 
                      
               <td>&nbsp;</td> 
                      
               <td rowspan="6"> 
                  
                  <p><img src="../graphics/sbo5.gif" alt="" width="4" height="138"></p>
               </td> 
                      
               <td>&nbsp;</td> 
                      
               <td rowspan="6">&nbsp; 
                  
                  <p><img src="../graphics/cbo6.gif" alt="" width="8" height="102"></p>
               </td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td rowspan="6">
                  <img src="../graphics/cbc4.gif" alt="" width="6" height="100">
                          <img src="../graphics/dot3.gif" alt="" width="12" height="4"></td> 
                      
               <td rowspan="6"> 
                  
                  <p><img src="../graphics/sbc5.gif" alt="" width="4" height="138"></p>
               </td> 
                     
            </tr> 
                  
            <tr> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td rowspan="3"> 
                  
                  <p><img src="../graphics/sbo3.gif" alt="" width="5" height="61"></p>
               </td> 
                      
               <td>&nbsp;</td> 
                      
               <td rowspan="3"> 
                  
                  <p><img src="../graphics/cbo3.gif" alt="" width="6" height="59"></p>
               </td> 
                      
               <td align="center"> <a href="callnat.htm#AD_M_callnat">
                      <code class="keyword">M</code></a></td> 
                      
               <td rowspan="3"> 
                  
                  <p><img src="../graphics/cbc3.gif" alt="" width="6" height="59"></p>
               </td> 
                      
               <td>&nbsp;</td> 
                      
               <td rowspan="3"> 
                  
                  <p><img src="../graphics/sbc3.gif" alt="" width="5" height="61"></p>
               </td> 
                     
            </tr> 
                  
            <tr> 
                      
               <td rowspan="2" nowrap> <a href="callnat.htm#Function_callnat"> <code class="keyword">CALLNAT</code></a>
                          <a href="callnat.htm#operand1_callnat">
                             <var>operand1</var></a></td> 
                      
               <td rowspan="2" nowrap> [<code class="keyword">USING</code>]
               </td> 
                      
               <td nowrap> <a href="callnat.htm#operand2_callnat">
                      <var>operand2</var></a></td> 
                      
               <td nowrap> (<a href="callnat.htm#AD"><code class="keyword">AD</code></a>= 
               </td> 
                      
               <td align="center"> <a href="callnat.htm#AD_O_callnat">
                      <code class="keyword">O</code></a></td> 
                      
               <td>)</td> 
                     
            </tr> 
                  
            <tr> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td align="center"> <a href="callnat.htm#AD_A_callnat">
                      <code class="keyword">A</code></a></td> 
                      
               <td>&nbsp;</td> 
                     
            </tr> 
                  
            <tr> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td colspan="2"> <a href="callnat.htm#nX_callnat">
                      <var>n</var><code class="keyword">X</code></a></td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                     
            </tr> 
                  
            <tr> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                     
            </tr> 
                 
         </tbody> 
             
      </table> 
          
         
      <p>This document covers the following topics:</p>
         
      <ul>
         <li>
            <p class="initem"><a href="callnat.htm#Function_callnat">Function</a></p>
         </li>
         <li>
            <p class="initem"><a href="callnat.htm#syntax_descr_callnat">Syntax Description</a></p>
         </li>
         <li>
            <p class="initem"><a href="callnat.htm#PT_DV_CALLNAT">Parameter Transfer with Dynamic Variables</a></p>
         </li>
         <li>
            <p class="initem"><a href="callnat.htm#callnat_exa">Examples</a></p>
         </li>
      </ul> 
         
      <p>For an explanation of the symbols used in the syntax diagram, see
             <a href="synsym.htm#Syntax_Symbols">Syntax
            Symbols</a>.
      </p> 
         
      <p>Related Statements: <a href="call.htm#call">CALL</a> |
             <a href="callfile.htm#callfile">CALL FILE</a> |
             <a href="callloop.htm#callloop">CALL LOOP</a> |
             <a href="definesu.htm#definesu">DEFINE SUBROUTINE</a> |
             <a href="escape.htm#escape">ESCAPE</a> | <a href="fetch.htm#fetch">FETCH</a> | <a href="perform.htm#perform">PERFORM</a></p> 
         
      <p>Belongs to Function Group:
             <a href="stmt.htm#Invoking_Programs_and_Routines">Invoking Programs
            and Routines</a></p> 
        
      <hr> 
        
      <div><a name="Function_callnat"></a></div> 
         
      <h2>Function</h2> 
          
          
      <p>The <code>CALLNAT</code> statement is used to invoke a Natural
              subprogram for execution. (A Natural subprogram can only be invoked via a
              <code>CALLNAT</code> statement; it cannot be executed by itself.)
      </p> 
          
      <p>When the <code>CALLNAT</code> statement is executed, the execution of
              the invoking object (that is, the object containing the <code>CALLNAT</code>
              statement) will be suspended and the invoked subprogram will be executed. The
              execution of the subprogram continues until either its <code>END</code>
              statement is reached or processing of the subprogram is stopped by an
              <a href="escape.htm#ESCAPE_ROUTINE"><code>ESCAPE ROUTINE</code></a>
              statement being executed. In either case, processing of the invoking object
              will then continue with the statement following the <code>CALLNAT</code>
              statement.
      </p> 
          
      <p class="notes"><strong>Notes:</strong></p>
      <ol class="note-list"> 
              
         <li>A subprogram can in turn invoke other subprograms.</li> 
              
         <li>A subprogram has no access to the global data area used by the
                  invoking object. If a subprogram in turn invokes a subroutine or helproutine,
                  it can establish its own global data area to be shared with the
                  subroutine/helproutine.
         </li> 
             
      </ol> 
          
        
        
      <div class="noprint">
         <p><a href="callnat.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="syntax_descr_callnat"></a></div> 
         
      <h2>Syntax Description</h2> 
          
          
      <p>Operand Definition Table:</p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
                
                
                
                
                
                
                
                 
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th>Operand</th> 
                       
               <th colspan="5" align="center">Possible
                  Structure
               </th> 
                       
               <th colspan="13" align="center">Possible
                  Formats
               </th> 
                       
               <th align="center">Referencing Permitted</th> 
                       
               <th align="center">Dynamic Definition</th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td><var>operand1</var></td> 
                       
               <td>C</td> 
                       
               <td>S</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>A</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td align="center">&nbsp;</td> 
                       
               <td align="center">&nbsp;</td> 
                       
               <td align="center">yes</td> 
                       
               <td align="center">no</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><var>operand2</var></td> 
                       
               <td>C</td> 
                       
               <td>S</td> 
                       
               <td>A</td> 
                       
               <td>G</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>A</td> 
                       
               <td>U</td> 
                       
               <td>N</td> 
                       
               <td>P</td> 
                       
               <td>I</td> 
                       
               <td>F</td> 
                       
               <td>B</td> 
                       
               <td>D</td> 
                       
               <td>T</td> 
                       
               <td>L</td> 
                       
               <td>C</td> 
                       
               <td align="center">G</td> 
                       
               <td align="center">O</td> 
                       
               <td align="center">yes</td> 
                       
               <td align="center">yes</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <p>Syntax Element Description:</p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <th nowrap> <a name="operand1_callnat"></a>
                   <var>operand1</var></th> 
                       
               <td colspan="2"> 
                  
                  <div><strong class="floating-title"> Subprogram name:</strong></div> 
                           
                  <p>As <var>operand1</var>, you specify the name of the
                     subprogram to be invoked. The name may be specified either as a constant of 1
                     to 8 characters, or - if different subprograms are to be called dependent on
                     program logic - as an alphanumeric variable of length 1 to 8.
                  </p> 
                           
                  <p>The subprogram name may contain an ampersand (&amp;); at execution
                               time, this character will be replaced by the current value of the system
                               variable <a href="../vari/natenv.htm#LANGUAGE"><code>*LANGUAGE</code></a>.
                               This makes it possible, for example, to invoke different subprograms for the
                               processing of input, depending on the language in which input is
                               provided.
                  </p>
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th nowrap> <a name="operand2_callnat"></a>
                   <var>operand2</var></th> 
                       
               <td colspan="2"> 
                  
                  <div><strong class="floating-title"> Parameters:</strong></div> 
                           
                  <p>If parameters are passed to the subprogram, the structure of the
                     parameter list must be defined in a <a href="defineda_pda.htm#defineda_pda"><code>DEFINE DATA PARAMETER</code></a>
                               statement. The parameters specified with the <code>CALLNAT</code> statement are
                               the only data available to the subprogram from the invoking object.
                  </p> 
                           
                  <p>By default, the parameters are passed <em>by reference</em>, that
                               is, the data are transferred via address parameters, the parameter values
                               themselves are not moved. However, it is also possible to pass parameters
                               <em>by value</em>, that is, pass the actual parameter values. To do so, you
                               define these fields in the <a href="defineda_pda.htm#defineda_pda"><code>DEFINE DATA
                                     PARAMETER</code></a> statement of the subprogram with the option
                               <a href="defineda_pda.htm#BY_VALUE"><code>BY VALUE</code></a> or
                               <a href="defineda_pda.htm#BY_VALUE_RESULT"><code>BY VALUE RESULT</code></a>
                               (see the <a href="defineda_pda.htm#param_data_def"><var>parameter-data-definition</var></a>
                               in the description of the <a href="defineda.htm#defineda"><code>DEFINE
                                     DATA</code></a> statement).
                  </p> 
                           
                  <ul> 
                               
                     <li> 
                                   
                        <p class="initem">If parameters are passed <em>by reference</em> the following
                                       applies: The sequence, format and length of the parameters in the invoking
                                       object must match exactly the sequence, format and length of the
                                       <a href="defineda_pda.htm#defineda_pda"><code>DEFINE DATA PARAMETER</code></a>
                                       structure in the invoked subprogram. The names of the variables in the invoking
                                       object and the invoked subprogram may be different.
                        </p> 
                                  
                     </li> 
                               
                     <li> 
                                   
                        <p class="initem">If parameters are passed <em>by value</em> the following applies:
                                       The sequence of the parameters in the invoking object must match exactly the
                                       sequence in the <a href="defineda_pda.htm#defineda_pda"><code>DEFINE DATA
                                             PARAMETER</code></a> structure of the invoked subprogram. Formats and
                                       lengths of the variables in the invoking object and the subprogram may be
                                       different; however, they have to be data transfer compatible (see the
                                       corresponding table in the section <a href="../pg/pg_furth_arithm.htm">Rules for Arithmetic
                                          Assignments</a>,
                                       <a href="../pg/pg_furth_arithm.htm#Data_Transfer">Data
                                          Transfer</a> in the <cite>Programming Guide</cite>.
                                       The names of the variables in the invoking object and the subprogram may be
                                       different. If parameter values that have been modified in the subprogram are to
                                       be passed back to the invoking object, you have to define these fields with
                                       <a href="defineda_pda.htm#BY_VALUE_RESULT"><code>BY VALUE RESULT</code></a>.
                                       With <a href="defineda_pda.htm#BY_VALUE"><code>BY VALUE</code></a> (without
                                       <code>RESULT</code>) it is not possible to pass modified parameter values back
                                       to the invoking object (regardless of the <a href="../parms/sp_ad.htm"><code>AD</code></a> specification;
                                       see also below).
                        </p> 
                                  
                     </li> 
                              
                  </ul> 
                           
                  <p class="note"><strong>Note:</strong><br> With <a href="defineda_pda.htm#BY_VALUE"><code>BY
                                     VALUE</code></a>, an internal copy of the parameter values is created.
                               The subprogram accesses this copy and can modify it, but this will not affect
                               the original parameter values in the invoking object. With
                               <a href="defineda_pda.htm#BY_VALUE_RESULT"><code>BY VALUE RESULT</code></a>,
                               an internal copy is likewise created; however, after termination of the
                               subprogram, the original parameter values are overwritten by the (modified)
                               values of the copy.
                  </p> 
                           
                  <p>For both ways of passing parameters, the following applies:</p> 
                           
                  <p>If a group is specified as <var>operand2</var>, the
                               individual fields contained in that group are passed to the subprogram; that
                               is, for each of these fields a corresponding field must be defined in the
                               subprogram's parameter data area.
                  </p> 
                           
                  <p>In the parameter data area of the invoked subprogram, a
                               redefinition of groups is only permitted within a <a href="redefine.htm#redefine"><code>REDEFINE</code></a> block.
                  </p> 
                           
                  <p>If an array is passed, its number of dimensions and occurrences in
                               the subprogram's parameter data area must be the same as in the
                               <code>CALLNAT</code> parameter list.
                  </p> 
                           
                  <p class="note"><strong>Note:</strong><br> If multiple occurrences of an array that is defined as part of
                               an indexed group are passed with the <code>CALLNAT</code> statement, the
                               corresponding fields in the subprogram's parameter data area must not be
                               redefined, as this would lead to the wrong addresses being passed.
                  </p> 
                           
                  <p>With the option
                               <code>PCHECK</code> of the
                               <a href="../syscom/compopt.htm"><code>COMPOPT</code></a>
                               command set to <code>ON</code>, the compiler checks the number, format, length
                               and array index bounds of the parameters that are specified in a
                               <code>CALLNAT</code> statement. Also, the <a href="defineda_pda.htm#OPTIONAL"><code>OPTIONAL</code></a> feature of the
                               <a href="defineda_pda.htm#defineda_pda"><code>DEFINE DATA PARAMETER</code></a>
                               statement is considered in the parameter check.
                  </p>
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th rowspan="5"> <a name="AD"></a>AD=
               </th>
                       
                       
               <td colspan="2"> 
                  
                  <div><strong class="floating-title"> Attribute Definition:</strong></div> 
                           
                  <p>If <var>operand2</var> is a variable, you can mark
                               it in one of the following ways:
                  </p>
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><a name="AD_O_callnat"></a> <strong>AD=O</strong></td> 
                       
               <td> 
                  
                  <p>Non-modifiable, see session parameter
                               <a href="../parms/sp_ad.htm#sp_ad_ad_o"><code>AD=O</code></a>.
                  </p>
                           
                           
                  <p class="note"><strong>Note:</strong><br> Internally, <code>AD=O</code> is processed in the
                               same way as <code>BY VALUE</code> (see the <a href="defineda_pda.htm#param_data_def"><var>parameter-data-definition</var></a>
                               in the description of the <code>DEFINE DATA</code> statement).
                  </p>
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><a name="AD_M_callnat"></a> <strong>AD=M</strong></td> 
                       
               <td> 
                  
                  <p>Modifiable, see session parameter
                               <a href="../parms/sp_ad.htm#sp_ad_ad_m"><code>AD=M</code></a>.
                  </p>
                           
                           
                  <p>This is the default setting.</p>
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><a name="AD_A_callnat"></a> <strong>AD=A</strong></td> 
                       
               <td>Input only, see session parameter
                  <a href="../parms/sp_ad.htm#sp_ad_ad_a"><code>AD=A</code></a>.
                           
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td colspan="2">If
                  <var>operand2</var> is a constant,
                           <a href="../parms/sp_ad.htm"><code>AD</code></a> cannot
                          be explicitly specified. For constants <code>AD=O</code> always
                           applies.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th><a name="nX_callnat"></a>
                  <var>n</var>X
               </th> 
                       
               <td colspan="2"> 
                  
                  <p>With the notation <code><var>n</var>X</code> you
                          can specify that the next <var>n</var> parameters are to be
                               skipped (for example, <code>1X</code> to skip the next parameter, or
                               <code>3X</code> to skip the next three parameters); this means that for the
                               next <var>n</var> parameters no values are passed to the
                               subprogram. The possible range of values for <var>n</var> is 1
                               - 4096.
                  </p> 
                           
                  <p>A parameter that is to be skipped must be defined with the keyword
                               <a href="defineda_pda.htm#OPTIONAL"><code>OPTIONAL</code></a> in the
                               subprogram's <a href="defineda_pda.htm#defineda_pda"><code>DEFINE DATA
                                     PARAMETER</code></a> statement. <code>OPTIONAL</code> means that a value
                               can - but need not - be passed from the invoking object to such a
                               parameter.
                  </p>
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="callnat.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="PT_DV_CALLNAT"></a></div> 
         
      <h2>Parameter Transfer with Dynamic Variables</h2> 
          
          
      <p>Dynamic variables may be passed as parameters to a called program object
              (<code>CALLNAT</code>, <a href="perform.htm#perform"><code>PERFORM</code></a>). Call-by-reference is
              possible because the value space of a dynamic variable is contiguous.
              Call-by-value causes an assignment with the variable definition of the caller
              as the source operand and the parameter definition as the destination operand.
              In addition, call-by-value-result causes the movement to change to the opposite
              direction. When using call-by-reference, both definitions must be
              <a href="setkey.htm#DYNAMIC"><code>DYNAMIC</code></a>. If only one of
              them is <code>DYNAMIC</code>, a runtime error is raised. In case of
              call-by-value (result) all combinations are possible.
      </p> 
          
      <p>The following table illustrates the valid combinations of statically and
              dynamically defined variables of the caller and statically and dynamically
              defined parameters concerning the parameter transfer.
      </p> 
          
         
      <div><a name="d0e14704"></a></div> 
          
      <h3>Call By Reference</h3> 
           
            
            
      <table border="1" class="color" cellpadding="3" width="97%"> 
                  
                
         <thead align="left" valign="top"> 
                    
            <tr> 
                        
               <th rowspan="2"><var>operand2</var> of Caller
                          
               </th> 
                        
               <th colspan="2" align="center"> Parameter
                  Definition 
               </th> 
                       
            </tr> 
                    
            <tr> 
                        
               <th>Static</th> 
                        
               <th>Dynamic</th> 
                       
            </tr> 
                   
         </thead> 
                
         <tbody align="left" valign="top"> 
                    
            <tr> 
                        
               <th> Static </th> 
                        
               <td>yes</td> 
                        
               <td>no</td> 
                       
            </tr> 
                    
            <tr> 
                        
               <th> Dynamic </th> 
                        
               <td>no</td> 
                        
               <td>yes</td> 
                       
            </tr> 
                   
         </tbody> 
               
      </table> 
            
           
      <p>The formats of the dynamic variables A or B must match.</p> 
           
          
         
      <div><a name="d0e14778"></a></div> 
          
      <h3>Call by Value (Result)</h3> 
           
            
            
      <table border="1" class="color" cellpadding="3" width="97%"> 
                  
                
         <thead align="left" valign="top"> 
                    
            <tr> 
                        
               <th rowspan="2"><var>operand2</var> of Caller
                          
               </th> 
                        
               <th colspan="2" align="center"> Parameter
                  Definition 
               </th> 
                       
            </tr> 
                    
            <tr> 
                        
               <th>Static</th> 
                        
               <th>Dynamic</th> 
                       
            </tr> 
                   
         </thead> 
                
         <tbody align="left" valign="top"> 
                    
            <tr> 
                        
               <th> Static </th> 
                        
               <td>yes</td> 
                        
               <td>yes</td> 
                       
            </tr> 
                    
            <tr> 
                        
               <th> Dynamic </th> 
                        
               <td>yes</td> 
                        
               <td>yes</td> 
                       
            </tr> 
                   
         </tbody> 
               
      </table> 
            
           
      <p class="note"><strong>Note:</strong><br> When using static/dynamic or dynamic/static definitions, a value
               truncation may occur according to the data transfer rules of the appropriate
               assignments.
      </p> 
           
          
        
        
      <div class="noprint">
         <p><a href="callnat.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="callnat_exa"></a></div> 
         
      <h2>Examples</h2> 
         
      <ul>
         <li>
            <p class="initem"><a href="callnat.htm#Example_1_callnat">Example 1</a></p>
         </li>
         <li>
            <p class="initem"><a href="callnat.htm#Example_2_callnat">Example 2</a></p>
         </li>
      </ul>
      <div><a name="Example_1_callnat"></a></div> 
          
      <h3>Example 1</h3> 
           
           
      <h4 class="floating-title">Calling Program:</h4> 
           <pre class="verbatim">** Example 'CNTEX1': CALLNAT                                            
************************************************************************
DEFINE DATA LOCAL                                                       
1 #FIELD1 (N6)                                                          
1 #FIELD2 (A20)                                                         
1 #FIELD3 (A10)                                                         
END-DEFINE                                                              
*                                                                       
<strong>CALLNAT 'CNTEX1N' #FIELD1 (AD=M) #FIELD2 (AD=O) #FIELD3 'P4 TEXT'</strong> 
*                                                                       
WRITE '=' #FIELD1 '=' #FIELD2 '=' #FIELD3                               
*                                                                       
END                                                                    </pre> 
           <h4 class="floating-title">Called Subprogram CNTEX1N:</h4> 
           <pre class="verbatim">** Example 'CNTEX1N': CALLNAT  (called by CNTEX1)                       
************************************************************************
DEFINE DATA PARAMETER                                                   
1 #FIELDA (N6)                                                          
1 #FIELDB (A20)                                                         
1 #FIELDC (A10)                                                         
1 #FIELDD (A7)                                                          
END-DEFINE                                                              
*                                                                       
*                                                                       
#FIELDA := 4711                                                         
*                                                                       
#FIELDB := 'HALLO'                                                      
*                                                                       
#FIELDC := 'ABC'                                                        
*                                                                       
WRITE '=' #FIELDA '=' #FIELDB '=' #FIELDC '=' #FIELDD                   
*                                                                       
END                                                                    </pre> 
          <div><a name="Example_2_callnat"></a></div> 
          
      <h3>Example 2</h3> 
           
           
      <h4 class="floating-title">Calling Program:</h4> 
           <pre class="verbatim">** Example 'CNTEX2': CALLNAT                                            
************************************************************************
DEFINE DATA LOCAL                                                       
1 #ARRAY1  (N4/1:10,1:10)                                               
1 #NUM     (N2)                                                         
END-DEFINE                                                              
*                                                                       
*                                                                       
<strong>CALLNAT 'CNTEX2N' #ARRAY1 (2:5,*)</strong>                                   
*                                                                       
FOR #NUM 1 TO 10                                                        
  WRITE #NUM #ARRAY1(#NUM,1:10)                                         
END-FOR                                                                 
*                                                                       
END</pre> 
           <p>Called Subprogram CNTEX2N:</p> 
           <pre class="verbatim">** Example 'CNTEX2N': CALLNAT  (called by CNTEX2)                       
************************************************************************
DEFINE DATA                                                             
PARAMETER                                                               
1 #ARRAY (N4/1:4,1:10)                                                  
LOCAL                                                                   
1 I      (I2)                                                           
END-DEFINE                                                              
*                                                                       
*                                                                       
FOR I 1 10                                                              
  #ARRAY(1,I) := I                                                      
  #ARRAY(2,I) := 100 + I                                                
  #ARRAY(3,I) := 200 + I                                                
  #ARRAY(4,I) := 300 + I                                                
END-FOR                                                                 
*                                                                       
END                                                                    </pre> 
           
          
        
       <div class="noprint">
         <div class="nospy">
            <p><a href="callnat.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
            <table border="0" cellpadding="0" cellspacing="0" width="97%">
               <col width="15%">
               <col width="34%">
               <col width="48%">
               <tr>
                  <td class="footer"><img src="../graphics/blank.png" width="3" height="10">&nbsp;<a class="navig" target="_blank" href="http://www.softwareag.com">www.softwareag.com</a>&nbsp;
                  </td>
                  <td nowrap class="footer"><img src="../graphics/blank.png" width="3"><a class="navig" href="../general/legal.htm" target="_blank">Copyright &copy; Software AG 1992-2008. All rights reserved.&nbsp;</a></td>
                  <td class="bottomlinks" align="right" nowrap><img src="../graphics/blank.png" width="3"><a class="navig" target="_blank" href="../fts/search.htm" onclick="window.open('../fts/search.htm', 'fts', 'dependent,width=555,height=420,resizable'); return false">SEARCH</a>
                     &nbsp;&nbsp;<a class="navig" href="javascript:sized_window('../navig/navig.htm')" onclick="document.cookie='sagphdcc=../sm/callnat.htm;path=/'; window.open('../navig/navig.htm', 'nvgtr', 'dependent,width=450,height=270,resizable'); return false">CONTENTS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="http://documentation.softwareag.com/natural/nat635unx/pdf/sm/callnat.pdf">PDF PAGE</a>
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="../general/print.htm">PDF BOOKS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" href="../overview.htm">HOME</a>
                     &nbsp;&nbsp;<a class="navig" href="sm-over.htm">UP</a>
                     &nbsp;&nbsp;<a class="navig" href="callloop.htm">PREV</a>
                     &nbsp;&nbsp;<a class="navig" href="closecon.htm">NEXT</a></td>
               </tr>
            </table>
         </div>
      </div>
   </body>
</html>