
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   
      <meta name="generator" content="Sagdoc XSL Stylesheets">
      <link rel="stylesheet" type="text/css" href="../general/style2.css"><script language="JavaScript" src="../general/selbox.js"></script><script type="text/javascript" language="javascript">
         <!--
window.name = 'contents';
//--></script><title>READ</title>
   </head>
   <body bgcolor="#FFFFFF" background="../graphics/bar.png" style="margin-left: 20px;">
      <div><a name="read" id="16844"></a></div>
      <div class="noprint">
         <div class="nospytext">
            <table border="0" cellpadding="0" cellspacing="0" width="97%">
               <col width="15%">
               <col width="34%">
               <col width="48%">
               <tr>
                  <td colspan="2" class="topline"><a name="Top"></a>&nbsp;<img src="../graphics/natux_logo.png"></td>
                  <td class="topline" align="right"><img src="../graphics/sag_logo.png">&nbsp;
                  </td>
               </tr>
               <tr>
                  <td class="header" nowrap><img src="../graphics/blank.png" width="3" height="10"></td>
                  <td class="header"><img src="../graphics/blank.png" width="3">Version&nbsp;6.3.5 for UNIX
                  </td>
                  <td class="toplinks" align="right" nowrap><img src="../graphics/blank.png" width="3"><a class="navig" target="_blank" href="../fts/search.htm" onclick="window.open('../fts/search.htm', 'fts', 'dependent,width=555,height=420,resizable'); return false">SEARCH</a>
                     &nbsp;&nbsp;<a class="navig" href="javascript:sized_window('../navig/navig.htm')" onclick="document.cookie='sagphdcc=../sm/read.htm;path=/'; window.open('../navig/navig.htm', 'nvgtr', 'dependent,width=450,height=270,resizable'); return false">CONTENTS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="http://documentation.softwareag.com/natural/nat635unx/pdf/sm/read.pdf">PDF PAGE</a>
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="../general/print.htm">PDF BOOKS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" href="../overview.htm">HOME</a>
                     &nbsp;&nbsp;<a class="navig" href="sm-over.htm">UP</a>
                     &nbsp;&nbsp;<a class="navig" href="property.htm">PREV</a>
                     &nbsp;&nbsp;<a class="navig" href="readwork.htm">NEXT</a></td>
               </tr>
            </table>
         </div>
      </div>
      <div class="nospytext" style="margin-top:0.25in;">
         <div><span class="module">&nbsp;&#8212;&nbsp;&nbsp;Statements&nbsp;&nbsp;&#8212;</span></div>
      </div> 
        
      <div class="nospytext">
         <h1> READ 
               <a name="x140"></a></h1>
      </div> 
         
          
          
      <table border="0" class="syntax" cellpadding="3"> 
               
               
               
                
              
         <tbody align="left" valign="top"> 
                  
            <tr> 
                      
               <td rowspan="2"> 
                  
                  <p><img src="../graphics/cbo2.gif" alt="" width="6" height="38"></p> 
               </td> 
                      
               <td> <a href="read.htm#Function_read"> <code class="keyword">READ</code> </a> 
               </td> 
                      
               <td rowspan="2"> 
                  
                  <p><img src="../graphics/cbc2.gif" alt="" width="6" height="38"></p> 
               </td> 
                      
               <td>&nbsp;</td> 
                      
               <td rowspan="2">
                  <img src="../graphics/sbo2.gif" alt="" width="5" height="40">
                          <img src="../graphics/cbo2.gif" alt="" width="6" height="38">
                          
               </td> 
                      
               <td> <a href="read.htm#all"> <code class="keyword">ALL</code>
                          </a> 
               </td> 
                      
               <td rowspan="2">
                  <img src="../graphics/cbc2.gif" alt="" width="6" height="38">
                          <img src="../graphics/sbc2.gif" alt="" width="5" height="40">
                          
               </td> 
                      
               <td>&nbsp;</td> 
                      
               <td rowspan="2" nowrap>[<a href="read.htm#multi_fetch"><var>MULTI-FETCH-clause</var></a>]
                          [<code class="keyword"><u>RECORD</u>S</code>] [<code class="keyword">IN</code>] [<code class="keyword">FILE</code>]
                          <a href="read.htm#view-name_read"> <var>view-name</var>
                             </a> 
               </td> 
                     
            </tr> 
                  
            <tr> 
                      
               <td> <a href="read.htm#Function_read"> <code class="keyword">BROWSE</code> </a> 
               </td> 
                      
               <td>&nbsp;</td> 
                      
               <td> <a href="read.htm#operand1_read">(<var>operand1</var>)</a>
                          
               </td> 
                      
               <td>&nbsp;</td> 
                     
            </tr> 
                  
            <tr> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td colspan="7"> [<a href="read.htm#PASSWORD_read"><code class="keyword">PASSWORD=</code></a><a href="read.htm#PASSWORD_read"><var>operand2</var></a>]
                          
               </td> 
                     
            </tr> 
                  
            <tr> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td colspan="7"> [<a href="read.htm#CIPHER"><code class="keyword">CIPHER=</code></a><a href="read.htm#CIPHER"><var>operand3</var></a>] 
               </td> 
                     
            </tr> 
                  
            <tr> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td colspan="7"> [<a href="read.htm#WITH_REPOSITION"><code class="keyword">WITH
                        REPOSITION</code></a>] 
               </td> 
                     
            </tr> 
                  
            <tr> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td colspan="7">[<a href="read.htm#sequence"><var>sequence/range-specification</var></a>]
                          
               </td> 
                     
            </tr> 
                  
            <tr> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td colspan="7"> [<a href="read.htm#operand4_read"><code class="keyword">STARTING WITH
                        ISN=</code></a><a href="read.htm#operand4_read"><var>operand4</var></a>]
                          
               </td> 
                     
            </tr> 
                  
            <tr> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td colspan="7"> [<a href="read.htm#WHERE_read"><code class="keyword">WHERE</code> </a>
                          <a href="read.htm#WHERE_read">
                             <var>logical-condition</var></a>] 
               </td> 
                     
            </tr> 
                  
            <tr> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td colspan="7"> <a href="synsym.htm#note_statement"> <var>statement</var> </a>
                          <img src="../graphics/dot3.gif" alt="" width="12" height="4">
                          
               </td> 
                     
            </tr> 
                  
            <tr> 
                      
               <td colspan="2"> <a href="read.htm#end_read">
                      <code class="keyword">END-READ</code> </a> 
               </td> 
                      
               <td colspan="6"> (<em>structured mode only</em>)
                          
               </td> 
                     
            </tr> 
                  
            <tr> 
                      
               <td colspan="2"> [<a href="loop.htm#loop"><code class="keyword">LOOP</code></a>]
               </td> 
                      
               <td colspan="6"> (<em>reporting mode only</em>)
                          
               </td> 
                     
            </tr> 
                 
         </tbody> 
             
      </table> 
          
         
      <p>This document covers the following topics:</p>
         
      <ul>
         <li>
            <p class="initem"><a href="read.htm#Function_read">Function</a></p>
         </li>
         <li>
            <p class="initem"><a href="read.htm#syntax_descr_read">Syntax Description</a></p>
         </li>
         <li>
            <p class="initem"><a href="read.htm#System_Variables_read">System Variables Available with READ</a></p>
         </li>
         <li>
            <p class="initem"><a href="read.htm#read_exa">Examples</a></p>
         </li>
      </ul> 
         
      <p>For an explanation of the symbols used in the syntax diagram, see
             <a href="synsym.htm#Syntax_Symbols">Syntax
            Symbols</a>.
      </p> 
         
      <p>Related Statements: <a href="accept.htm#accept">ACCEPT/REJECT</a>
             | <a href="atbreak.htm#atbreak">AT BREAK</a> |
             <a href="atstart.htm#atstart">AT START OF DATA</a> |
             <a href="atenddat.htm#atenddat">AT END OF DATA</a> |
             <a href="backout.htm#backout">BACKOUT TRANSACTION</a> |
             <a href="before.htm#before">BEFORE BREAK PROCESSING</a> |
             <a href="gettrans.htm#gettrans">GET TRANSACTION DATA</a> |
             <a href="delete.htm#delete">DELETE</a> | <a href="endtrans.htm#endtrans">END TRANSACTION</a> | <a href="find.htm#find">FIND</a> | <a href="histogra.htm#histogra">HISTOGRAM</a> | <a href="get.htm#get">GET</a> | <a href="getsame.htm#getsame">GET
                SAME</a> | <a href="limit.htm#limit">LIMIT</a> |
             <a href="passw.htm#passw">PASSW</a> | <a href="performb.htm#performb">PERFORM BREAK PROCESSING</a> |
             <a href="retry.htm#retry">RETRY</a> | <a href="store.htm#store">STORE</a> | <a href="update.htm#update">UPDATE</a> 
      </p> 
         
      <p>Belongs to Function Group:
             <a href="stmt.htm#Database_Access_and_Update">Database Access and
            Update</a></p> 
        
      <hr> 
        
      <div><a name="Function_read"></a></div> 
         
      <h2> Function </h2> 
          
          
      <p>The <code>READ</code> statement is used to read records from a database.
              The records can be retrieved in physical sequence, in Adabas ISN sequence, or
              in the value sequence of a descriptor (key) field.
      </p> 
          
      <p>This statement causes a processing loop to be initiated.</p> 
          
      <p>See also <a href="../pg/pg_dbms_ada.htm#READ_Statement">READ
            Statement</a> (in the <cite>Programming
                 Guide</cite>).
      </p> 
          
        
        
      <div class="noprint">
         <p><a href="read.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="syntax_descr_read"></a></div> 
         
      <h2> Syntax Description </h2> 
          
          
      <p>Operand Definition Table:</p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
                
                
                
                
                
                
                
                 
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th>Operand</th> 
                       
               <th colspan="5" align="center">
                  <a href="synsym.htm#statem_poss_struct">Possible Structure</a> 
               </th> 
                       
               <th colspan="13" align="center">
                  <a href="synsym.htm#statem_poss_form">Possible Formats</a> 
               </th> 
                       
               <th align="center">
                  <a href="synsym.htm#statem_ref_perm">Referencing Permitted</a> 
               </th> 
                       
               <th align="center">
                  <a href="synsym.htm#statem_dyn_def">Dynamic Definition</a> 
               </th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <var>operand1</var> 
               </td> 
                       
               <td>C</td> 
                       
               <td>S</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>N</td> 
                       
               <td>P</td> 
                       
               <td>I</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>B *</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td align="center">&nbsp;</td> 
                       
               <td align="center">&nbsp;</td> 
                       
               <td align="center">yes</td> 
                       
               <td align="center">no</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <var>operand2</var> 
               </td> 
                       
               <td>C</td> 
                       
               <td>S</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>A</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td align="center">&nbsp;</td> 
                       
               <td align="center">&nbsp;</td> 
                       
               <td align="center">yes</td> 
                       
               <td align="center">no</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <var>operand3</var> 
               </td> 
                       
               <td>C</td> 
                       
               <td>S</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>N</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td align="center">&nbsp;</td> 
                       
               <td align="center">&nbsp;</td> 
                       
               <td align="center">yes</td> 
                       
               <td align="center">no</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td> <var>operand4</var> 
               </td> 
                       
               <td>C</td> 
                       
               <td>S</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>N</td> 
                       
               <td>P</td> 
                       
               <td>I</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>B *</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>&nbsp;</td> 
                       
               <td align="center">&nbsp;</td> 
                       
               <td align="center">&nbsp;</td> 
                       
               <td align="center">yes</td> 
                       
               <td align="center">no</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <p><sup>*</sup> Format B of <var>operand1</var> and
              <var>operand4</var> may be used with a length of less than or
              equal to 4.
      </p> 
          
      <p>Syntax Element Description:</p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <th nowrap> <a name="operand1_read"></a>
                   <var>operand1</var> 
               </th> 
                       
               <td> 
                  
                  <div><strong class="floating-title"> Number of Records to be Read: </strong></div> 
                           
                  <p>The number of records to be read may be limited by specifying
                               <var>operand1</var> (enclosed in parentheses, immediately after
                               the keyword <code>READ</code>) - either as a numeric constant (0 - 4294967295)
                               or as a variable, enclosed within parentheses, immediately after the keyword
                               <code>READ</code>. For example:
                  </p> 
                           <pre class="verbatim">READ (5) IN EMPLOYEES ...
  
MOVE 10 TO CNT(N2)
READ (CNT) EMPLOYEES  ...</pre> 
                           <p>For this statement, the specified limit has priority over a limit
                               set with a <a href="limit.htm#limit"><code>LIMIT</code></a>
                               statement.
                  </p> 
                           
                  <p>If a smaller limit is set with the profile or session parameter
                               <a href="../parms/lt.htm"><code>LT</code></a>, the
                               <code>LT</code> limit applies.
                  </p> 
                           
                  <p class="notes"><strong>Notes:</strong></p>
                  <ol class="note-list"> 
                               
                     <li>If you wish to read a 4-digit number of records, specify it
                                   with a leading zero: (0<var>nnnn</var>); because Natural
                                   interprets every 4-digit number enclosed in parentheses as a line-number
                                   reference to a statement.
                     </li> 
                               
                     <li><var>operand1</var> is evaluated when the
                                   <code>READ</code> loop is entered. If the value of
                                   <var>operand1</var> is modified within the <code>READ</code>
                                   loop, this does not affect the number of records read.
                     </li> 
                              
                  </ol> 
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th nowrap> <a name="all"></a>ALL
                   
               </th> 
                       
               <td>To emphasize that <em>all</em> records are to be read, you can
                  optionally specify the keyword <code>ALL</code>.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th> <var>MULTI-FETCH-clause</var>
                           
               </th> 
                       
               <td>See <a href="read.htm#multi_fetch">MULTI-FETCH
                     Clause</a> below.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th> <a name="view-name_read"></a>
                   <var>view-name</var> 
               </th> 
                       
               <td> 
                  
                  <div><strong class="floating-title"> View Name: </strong></div> 
                           
                  <p>As <var>view-name</var>, you specify the name of a
                     view, which must have been defined either within a <code>DEFINE DATA</code>
                               statement or outside the program in a global or local data area.
                  </p> 
                           
                  <p>In reporting mode, <var>view-name</var> may also be
                               the name of a DDM.
                  </p> 
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th> <a name="PASSWORD_read"></a> PASSWORD 
                   
                  <p><a name="CIPHER"></a>CIPHER
                  </p> 
               </th> 
                       
               <td> 
                  
                  <div><strong class="floating-title"> PASSWORD and CYPHER Clauses: </strong></div> 
                           
                  <p>These clauses are applicable only to Adabas databases. They cannot be used with Entire System Server.</p> 
                           
                  <p>The <code>PASSWORD</code> clause is used to provide a password when
                               retrieving data from a file which is password-protected.
                  </p> 
                           
                  <p>The <code>CIPHER</code> clause is used to provide a cipher key when
                               retrieving data from a file which is enciphered.
                  </p> 
                           
                  <p>See the statements <a href="find.htm#find"><code>FIND</code></a> and <a href="passw.htm#passw"><code>PASSW</code></a> for further information.
                  </p>
                           
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th>WITH REPOSITION</th> 
                       
               <td>This option is used to make the <code>READ</code> statement
                  sensitive for repositioning events. See <a href="read.htm#WITH_REPOSITION">WITH REPOSITION
                              Option</a>.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th>
                  <var>sequence/range-specification</var> 
               </th> 
                       
               <td>This option specifies the sequence and/or the range of
                  retrieval. See <a href="read.htm#sequence">Sequence/Range
                              Specification</a>.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th> <a name="operand4_read"></a>STARTING WITH
                  ISN=<var>operand4</var> 
               </th> 
                       
               <td> 
                  
                  <p>This clause applies only to Adabas databases.</p> 
                           
                  <div><strong class="floating-title"> Access to Adabas </strong></div> 
                           
                  <p>This clause can be used in conjunction with a <code>READ</code>
                               statement in physical or in logical (ascending/descending) sequence. The value
                               supplied (<var>operand4</var>) represents an Adabas ISN
                               (Internal Sequence Number) and is used to specify a definite record where to
                               start the <code>READ</code> loop.
                  </p> 
                           
                  <ul> 
                               
                     <li> 
                                    
                                   
                        <p class="initem"><strong> Logical Sequence</strong><br>Even if documented with an equal character (=), the
                                       <code>READ</code> statement does not return only those records with exactly the
                                       start value in the corresponding descriptor field, but starts a logical browse
                                       in ascending or descending order, beginning with the start value supplied. If
                                       some records have the same contents in the descriptor field, they will be
                                       returned in an ISN-sorted sequence. 
                        </p> 
                                   
                        <p class="initem">The <code>STARTING WITH ISN</code> clause is some kind of a
                                       "second level" selection criterion that applies only if the start
                                       value matches the descriptor value for the first record. All records with a
                                       descriptor value that is the same as the start value and an ISN that is
                                       "less equal"("greater equal" for a descending
                                       <code>READ</code>) than the start ISN are ignored by Adabas. The first record
                                       returned in the <code>READ</code> loop is either 
                        </p> 
                                   
                        <ul style="margin-top: 0px; margin-bottom: 0px;"> 
                                       
                           <li class="nesteditem"> 
                                           
                              <p class="initem">the first record with descriptor = start value and an ISN
                                               "greater" ("less" for a descending <code>READ</code>)
                                               than the start ISN,
                              </p> 
                                          
                           </li> 
                                       
                           <li class="nesteditem"> 
                                           
                              <p class="initem">or if such a record does not exist, the first record with a
                                               descriptor "greater" ("less" for a descending
                                               <code>READ</code>) than the start value.
                              </p> 
                                          
                           </li> 
                                      
                        </ul> 
                                  
                     </li> 
                               
                     <li> 
                                    
                                   
                        <p class="initem"><strong> Physical Sequence</strong><br>The records are returned in the order in which they are
                                       physically stored. If a <code>STARTING WITH ISN</code> clause is specified,
                                       Adabas ignores all records until the record with the ISN that is the same as
                                       the start ISN is reached. The first record returned is the next record
                                       following the ISN=start ISN record. 
                        </p> 
                                  
                     </li> 
                              
                  </ul> 
                            
                           
                  <div><strong class="floating-title"> Examples</strong></div> 
                           
                  <p>This clause may be used for repositioning within a
                               <code>READ</code> loop whose processing has been interrupted, to easily
                               determine the next record with which processing is to continue. This is
                               particularly useful if the next record cannot be identified uniquely by any of
                               its descriptor values. It can also be useful in a distributed client/server
                               application where the reading of the records is performed by a server program
                               while further processing of the records is performed by a client program, and
                               the records are not processed all in one go, but in batches.
                  </p> 
                           
                  <p>For an example, see the program <a href="read.htm#Example_7_read">REASISND</a> below.
                  </p> 
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th nowrap>WHERE
                  <var>logical-condition</var> 
               </th> 
                       
               <td>See <a href="read.htm#WHERE_read">WHERE
                     Clause</a>.
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th> <a name="end_read"></a>END-READ 
               </th> 
                       
               <td>The Natural reserved keyword <code>END-READ</code> must be used
                           to end the <code>READ</code> statement.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
         
      <div><a name="multi_fetch"></a></div> 
          
      <h3> MULTI-FETCH Clause </h3> 
           
           
      <p class="note"><strong>Note:</strong><br> This clause can only be used for Adabas databases.
      </p> 
            
            
      <table border="0" class="syntax" cellpadding="3"> 
                 
                 
                 
                
         <tbody align="left" valign="top"> 
                    
            <tr> 
                        
               <td> 
                  
                  <p><img src="../graphics/sbo3.gif" alt="" width="5" height="61"></p> 
               </td> 
                        
               <td nowrap> <code class="keyword">MULTI-FETCH</code> 
               </td>
                        
                        
               <td> 
                  
                  <p><img src="../graphics/cbo3.gif" alt="" width="6" height="59"></p> 
               </td> 
                        
               <td> 
                  
                  <p class="mini-list"> 
                                <code class="keyword">ON</code><br> 
                                <code class="keyword">OFF</code><br> 
                                <code class="keyword">OF</code>
                                 <var>multi-fetch-factor</var>  
                               
                  </p> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/cbc3.gif" alt="" width="6" height="59"></p> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/sbc3.gif" alt="" width="5" height="61"></p> 
               </td> 
                       
            </tr> 
                   
         </tbody> 
               
      </table> 
            
           
      <p class="note"><strong>Note:</strong><br><code>[MULTI-FETCH OF
            <var>multi-fetch-factor</var>]</code> is not evaluated for
               database types <code>ADA</code> and <code>ADA2</code>. The default processing
               mode is applied; see profile parameter <a href="../parms/mfset.htm"><code>MFSET</code></a>. When used in
               conjunction with database type <code>ADA2</code>, the MULTI-FETCH clause is
               ignored completetly; see
               <a href="../config/cfg-confparm.htm#cfg-cf-glo-dbms">Database
            Management System Assignments</a> in the
               <cite>Configuration Utility</cite> documentation.
      </p> 
           
      <p>For more information, see the section
               <a href="../pg/pg_dbms_ada.htm#pg_dbms_mf">Multi-Fetch
            Clause</a> (Adabas) in the <cite>Programming
                  Guide</cite>.
      </p> 
           
          
         
      <div><a name="WITH_REPOSITION"></a></div> 
          
      <h3> WITH REPOSITION Option </h3> 
           
           
      <p class="note"><strong>Note:</strong><br>This option can only be applied if the underlying database is
               Adabas.
      </p> 
           
      <p>With a <code>WITH REPOSITION</code> option, you can make a
               <code>READ</code> statement sensitive for repositioning events. This allows you
               to reposition to another start value within an active <code>READ</code> loop.
               Processing of the <code>READ</code> statement then continues with the new start
               value.
      </p> 
           
      <p>A repositioning event is triggered by one of two ways when you use a
               <code>READ</code> statement with the <code>WITH REPOSITION</code> option:
      </p> 
           
      <ol> 
               
         <li> 
                   
            <p class="initem">When an <a href="escape.htm#REPOS"><code>ESCAPE TOP
                     REPOSITION</code></a> statement is executed. At execution of an
                       <code>ESCAPE TOP REPOSITION</code> statement, Natural makes an instant branch
                       to the loop begin and performs a restart; that is, the database repositions to
                       a new record in the file according to the current content of the search value
                       variable. At the same time, the loop-counter
                       <code>*COUNTER</code> is reset to zero.
            </p> 
                  
         </li> 
               
         <li> 
                   
            <p class="initem">When a <code>READ</code> loop tries to fetch the next record from the
                       database and the value of the system variable
                       <a href="../vari/appl.htm#COUNTER"><code>*COUNTER</code></a>
                       is <code>0</code>. 
            </p> 
                   
            <p class="note"><strong>Note:</strong><br>If <code>*COUNTER</code> is set to <code>0</code>
                       within the active <code>READ</code> loop, processing of the current record is
                       continued; no instant branch to the loop begin is performed.You cannot trigger a reposition event in this fashion on Natural
                       for Windows, UNIX and OpenVMS. This functionality has only been retained for
                       compatibility reasons with Natural Version 3.1 for Mainframes. Therefore, it is
                       not recommended that you use this process.
            </p> 
                  
         </li> 
              
      </ol> 
           
      <div><a name="Func_Con"></a></div>
      <h4 class="floating-title"> Functional Considerations </h4>
           
           
      <ul> 
               
         <li> 
                   
            <p class="initem">If the <code>READ</code> statement has a loop-limit (e.g. <code>READ
                  (10) EMPLOYEES WITH REPOSITION ..</code>) and a restart event was triggered,
                       the loop gets another 10 new records, no matter how many records where already
                       processed until the repositioning takes place.
            </p> 
                  
         </li> 
               
         <li> 
                   
            <p class="initem">If an <a href="escape.htm#syntax_descr_escape"><code>ESCAPE TOP
                     REPOSITION</code></a> statement is executed, but the innermost loop is
                       not capable of repositioning (since the <code>WITH REPOSITION</code> keyword is
                       not set in the <code>READ</code> statement or the posted loop statement is
                       anything else but a <code>READ</code>), a corresponding runtime error is
                       issued.
            </p> 
                  
         </li> 
               
         <li> 
                   
            <p class="initem">Since the <code>ESCAPE TOP</code> statement does not allow a
                       reference, you can only initiate a reposition event if the innermost processing
                       loop is a <code>READ ..WITH REPOSITION</code> statement.
            </p> 
                  
         </li> 
               
         <li> 
                   
            <p class="initem">A reposition event does not trigger the execution of the
                       <a href="atstart.htm#atstart"><code>AT START OF DATA</code></a> section,
                       nor does it trigger the re-evaluation of the loop-limit operand (if it is a
                       variable).
            </p> 
                  
         </li> 
               
         <li> 
                   
            <p class="initem">If the search value was not altered, the loop repositions to the same
                       record like at initial loop start.
            </p> 
                  
         </li> 
              
      </ul> 
           
          
         
      <div><a name="sequence"></a></div> 
          
      <h3> Sequence/Range Specification </h3> 
           
           
      <p>Three syntax options are available to specify the sequence and/or the
               range of retrieval.
      </p> 
           
      <p>Syntax Option 1:</p> 
            
            
      <table border="0" class="syntax" cellpadding="3"> 
                 
                  
                
         <tbody align="left" valign="top"> 
                    
            <tr> 
                        
               <td> <a href="read.htm#syn1_read"> [<code class="keyword">IN</code>] [<code class="keyword"><u>PHYSICAL</u></code>] </a> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/sbo4.gif" alt="" width="5" height="80"></p> 
               </td> 
                        
               <td nowrap> 
                  
                  <p class="mini-list"> 
                                <a href="read.htm#ascending_read"> <code class="keyword">
                                       <u>ASC</u>ENDING</code> </a> <br> 
                                <a href="read.htm#ascending_read"> <code class="keyword">
                                       <u>DESC</u>ENDING</code> </a><br> 
                                <a href="read.htm#ascending_read"> <code class="keyword">
                                       VARIABLE</code> </a><a href="read.htm#ascending_read">
                                    <var>operand5</var> </a> <br> 
                                <a href="read.htm#ascending_read"> <code class="keyword">DYNAMIC</code> </a><a href="read.htm#ascending_read">
                                    <var>operand5</var> </a> 
                               
                  </p> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/sbc4.gif" alt="" width="5" height="80"></p> 
               </td> 
                        
               <td>[<code class="keyword">SEQUENCE</code>] 
               </td> 
                       
            </tr> 
                   
         </tbody> 
               
      </table> 
            
           
      <p>Syntax Option 2: </p> 
            
            
      <table border="0" class="syntax" cellpadding="3"> 
                 
                 
                 
                  
                
         <tbody align="left" valign="top"> 
                    
            <tr> 
                        
               <td rowspan="3"> 
                  
                  <p><img src="../graphics/cbo2.gif" alt="" width="6" height="38"></p> 
               </td> 
                        
               <td>&nbsp;</td> 
                        
               <td rowspan="3"> 
                  
                  <p><img src="../graphics/cbc2.gif" alt="" width="6" height="38"></p> 
               </td> 
                        
               <td>&nbsp;</td> 
                        
               <td rowspan="3"> 
                  
                  <p><img src="../graphics/sbo4.gif" alt="" width="5" height="85"></p> 
               </td> 
                        
               <td rowspan="3"> 
                  
                  <p><img src="../graphics/sbo4.gif" alt="" width="5" height="80"></p> 
               </td> 
                        
               <td rowspan="3"> 
                  
                  <p class="mini-list"> 
                                <a href="read.htm#STARTING_FROM_read"> <code class="keyword">=</code> </a><br> 
                                <code class="keyword">EQ</code><br> 
                                <code class="keyword">EQUAL&nbsp;TO</code><br> 
                                <a href="read.htm#STARTING_FROM_read">[<code class="keyword">STARTING</code>]&nbsp;<code class="keyword">FROM</code></a> 
                               
                  </p> 
               </td> 
                        
               <td rowspan="3"> 
                  
                  <p><img src="../graphics/sbc4.gif" alt="" width="5" height="80"></p> 
               </td> 
                        
               <td>&nbsp;</td> 
                        
               <td rowspan="3"> 
                  
                  <p><img src="../graphics/sbc4.gif" alt="" width="5" height="85"></p> 
               </td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td> 
                  
                  <p class="mini-list"> 
                                <a href="read.htm#BY_ISN"> <code class="keyword">BY</code></a> <br> 
                                <a href="read.htm#BY_ISN"><code class="keyword">WITH
                                       </code></a> 
                               
                  </p> 
               </td> 
                        
               <td> <a href="read.htm#BY_ISN"> <code class="keyword">ISN</code></a> 
               </td> 
                        
               <td> <var>operand6</var> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/sbo3.gif" alt="" width="5" height="55"></p> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/sbo3.gif" alt="" width="5" height="45"></p> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/cbo2.gif" alt="" width="6" height="38"></p>
               </td> 
                        
               <td> 
                  
                  <p class="mini-list"> 
                                <a href="read.htm#thru_ending_read"><code class="keyword">THRU</code></a><br> 
                                <a href="read.htm#thru_ending_read"><code class="keyword">ENDING&nbsp;AT</code></a> 
                               
                  </p> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/cbc2.gif" alt="" width="6" height="38"></p> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/sbc3.gif" alt="" width="5" height="45"></p>
               </td> 
                        
               <td align="center">
                  <var>operand7</var> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/sbc3.gif" alt="" width="5" height="55"></p> 
               </td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                       
            </tr> 
                   
         </tbody> 
               
      </table> 
            
           
      <p>Syntax Option 3: </p> 
            
            
      <table border="0" class="syntax" cellpadding="3"> 
                 
                 
                 
                 
                 
                 
                 
                
         <tbody align="left" valign="top"> 
                    
            <tr> 
                        
               <td> <a href="read.htm#LOGICAL"> [<code class="keyword">IN</code>]
                         [<code class="keyword">LOGICAL</code>] </a> 
               </td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td> 
                  
                  <p><img src="../graphics/sbo4.gif" alt="" width="5" height="80"></p> 
               </td> 
                        
               <td align="left" nowrap> 
                  
                  <p class="mini-list"> 
                                <a href="read.htm#ascending_read"> <code class="keyword"><u>ASC</u>ENDING</code> </a><br> 
                                <a href="read.htm#ascending_read"> <code class="keyword">
                                       <u>DESC</u>ENDING</code> </a><br> 
                                <a href="read.htm#ascending_read"><code class="keyword">VARIABLE</code></a>&nbsp;<a href="read.htm#ascending_read"><var>operand5</var>
                                    </a><br> 
                                <a href="read.htm#ascending_read"><code class="keyword">DYNAMIC</code>&nbsp;</a>&nbsp;<a href="read.htm#ascending_read"><var>operand5</var>
                                    </a> 
                               
                  </p> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/sbc4.gif" alt="" width="5" height="80"></p> 
               </td> 
                        
               <td> [<code class="keyword">SEQUENCE</code>] 
               </td>
                        
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td> 
                  
                  <p><img src="../graphics/cbo2.gif" alt="" width="6" height="38"></p> 
               </td> 
                        
               <td align="left"> 
                  
                  <p class="mini-list"> 
                                <a href="read.htm#BY_ISN"> <code class="keyword">BY</code></a> <br> 
                                <a href="read.htm#BY_ISN"><code class="keyword">WITH
                                       </code></a> 
                               
                  </p> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/cbc2.gif" alt="" width="6" height="38"></p> 
               </td> 
                        
               <td> <a href="read.htm#descriptor">
                      <var>descriptor</var> </a> 
               </td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td>&nbsp;</td> 
                        
               <td rowspan="3"> 
                  
                  <p><img src="../graphics/cbo25.gif" alt="" width="10" height="500"></p> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/sbo4.gif" alt="" width="5" height="85"></p> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/sbo4.gif" alt="" width="5" height="80"></p> 
               </td> 
                        
               <td align="left"> 
                  
                  <p class="mini-list"> 
                                <code class="keyword">=</code><br> 
                                <code class="keyword">EQ</code><br> 
                                <code class="keyword">EQUAL&nbsp;TO</code><br> 
                                <a href="read.htm#STARTING_FROM_read">[<code class="keyword">STARTING</code>]&nbsp;<code class="keyword">FROM</code></a> 
                               
                  </p> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/sbc4.gif" alt="" width="5" height="80"></p> 
               </td> 
                        
               <td> <var>operand6</var> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/sbc4.gif" alt="" width="5" height="85"></p> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/sbo3.gif" alt="" width="5" height="55"></p> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/sbo3.gif" alt="" width="5" height="45"></p> 
               </td> 
                        
               <td align="left"> 
                  
                  <p class="mini-list"> 
                                <a href="read.htm#STARTING_FROM_read"> <code class="keyword">THRU</code> </a><br> 
                                <a href="read.htm#STARTING_FROM_read"> <code class="keyword">ENDING&nbsp;AT</code> </a> 
                               
                  </p> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/sbc3.gif" alt="" width="5" height="45"></p> 
               </td> 
                        
               <td> <var>operand7</var> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/sbc3.gif" alt="" width="5" height="55"></p> 
               </td> 
                        
               <td rowspan="3"> 
                  
                  <p><img src="../graphics/cbc25.gif" alt="" width="10" height="500"></p> 
               </td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td> 
                  
                  <p><img src="../graphics/sbo4.gif" alt="" width="5" height="80"></p> 
               </td> 
                        
               <td align="left"> 
                  
                  <p class="mini-list"> 
                                <code class="keyword">=</code><br> 
                                <code class="keyword">EQ</code><br> 
                                <code class="keyword">EQUAL&nbsp;TO</code><br> 
                                [<code class="keyword">STARTING</code>]&nbsp;<code class="keyword">FROM</code>  
                               
                  </p> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/sbc4.gif" alt="" width="5" height="80"></p> 
               </td> 
                        
               <td colspan="7">
                  <var>operand6</var> <a href="read.htm#to_read">
                               <code class="keyword">TO</code> </a> <var>operand7</var>
                            
               </td> 
                        
               <td>&nbsp;</td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td> 
                  
                  <p><img src="../graphics/cbo12.gif" alt="" width="10" height="230"></p> 
               </td> 
                        
               <td align="left"> 
                  
                  <p class="mini-list"> 
                                <code class="keyword">&lt; </code><br> 
                                <code class="keyword">LT</code><br> 
                                <code class="keyword">LESS&nbsp;THAN </code><br> 
                                <code class="keyword">&gt;</code><br> 
                                <code class="keyword">GT </code><br> 
                                <code class="keyword">GREATER&nbsp;THAN</code><br> 
                                <code class="keyword">&lt;= </code><br> 
                                <code class="keyword">LE</code><br> 
                                <code class="keyword">LESS&nbsp;EQUAL</code><br> 
                                <code class="keyword">&gt;=</code><br> 
                                <code class="keyword">GE</code><br> 
                                <code class="keyword">GREATER&nbsp;EQUAL</code> 
                               
                  </p> 
               </td> 
                        
               <td> 
                  
                  <p><img src="../graphics/cbc12.gif" alt="" width="10" height="230"></p> 
               </td> 
                        
               <td> <var>operand6</var> 
               </td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                       
            </tr> 
                   
         </tbody> 
               
      </table> 
            
           
      <p class="notes"><strong>Notes:</strong></p>
      <ol class="note-list"> 
               
         <li>The syntax options [2] and [3] are not available with Entire
                   System Server.
         </li> 
               
         <li>If the comparators of Diagram 3 are used, the options <code>ENDING
               AT</code>, <code>THRU</code> and <code>TO</code> may not be used. These
                   comparators are also valid for the <a href="histogra.htm#histogra"><code>HISTOGRAM</code></a> statement.
         </li> 
              
      </ol> 
           
      <p>Operand Definition Table:</p> 
            
            
      <table border="1" class="color" cellpadding="3" width="97%">
         <colgroup>
            <col width="97%">
         </colgroup> 
                 
                 
                
                 
                 
                 
                 
                 
                 
                 
                
         <thead align="left" valign="top"> 
                    
            <tr> 
                        
               <th>Operand</th> 
                        
               <th colspan="5" align="center">
                  <a href="synsym.htm#statem_poss_struct">Possible Structure</a> 
               </th> 
                        
               <th colspan="13" align="center">
                  <a href="synsym.htm#statem_poss_form">Possible Formats</a> 
               </th> 
                        
               <th align="center">
                  <a href="synsym.htm#statem_ref_perm">Referencing Permitted</a> 
               </th> 
                        
               <th align="center">
                  <a href="synsym.htm#statem_dyn_def">Dynamic Definition</a> 
               </th> 
                       
            </tr> 
                   
         </thead> 
                
         <tbody align="left" valign="top"> 
                    
            <tr> 
                        
               <td> <var>operand5</var> 
               </td> 
                        
               <td>&nbsp;</td> 
                        
               <td>S</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>A</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td align="center">&nbsp;</td> 
                        
               <td align="center">&nbsp;</td> 
                        
               <td align="center">yes</td> 
                        
               <td align="center">no</td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td> <var>operand6</var> 
               </td> 
                        
               <td>C</td> 
                        
               <td>S</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>A</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>N</td> 
                        
               <td>P</td> 
                        
               <td>I</td> 
                        
               <td>F</td> 
                        
               <td>B *</td> 
                        
               <td>D</td> 
                        
               <td>T</td> 
                        
               <td>L</td> 
                        
               <td>&nbsp;</td> 
                        
               <td align="center">&nbsp;</td> 
                        
               <td align="center">&nbsp;</td> 
                        
               <td align="center">yes</td> 
                        
               <td align="center">no</td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td> <var>operand7</var> 
               </td> 
                        
               <td>C</td> 
                        
               <td>S</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>A</td> 
                        
               <td>&nbsp;</td> 
                        
               <td>N</td> 
                        
               <td>P</td> 
                        
               <td>I</td> 
                        
               <td>F</td> 
                        
               <td>B *</td> 
                        
               <td>D</td> 
                        
               <td>T</td> 
                        
               <td>L</td> 
                        
               <td>&nbsp;</td> 
                        
               <td align="center">&nbsp;</td> 
                        
               <td align="center">&nbsp;</td> 
                        
               <td align="center">yes</td> 
                        
               <td align="center">no</td> 
                       
            </tr> 
                   
         </tbody> 
               
      </table> 
            
           
      <p><sup>*</sup> Format B of <var>operand6</var> and
               <var>operand7</var> may be used only with a length of less than
               or equal to 4.
      </p> 
           
      <p>Syntax Element Description:</p> 
            
            
      <table border="1" class="color" cellpadding="3" width="97%"> 
                 
                
         <tbody align="left" valign="top"> 
                    
            <tr> 
                        
               <th align="left"> <a name="syn1_read"></a>READ IN
                  PHYSICAL SEQUENCE 
               </th> 
                        
               <td align="left"> 
                  
                  <p><code>PHYSICAL SEQUENCE</code> is used to read records in the
                     order in which they are physically stored in a database.
                  </p> 
                             
                            
                  <p><code>PHYSICAL</code> is the default sequence.
                  </p> 
               </td> 
                       
            </tr> 
                    
            <tr> 
                        
               <th align="left"> <a name="BY_ISN"></a>READ BY
                  ISN 
               </th> 
                        
               <td align="left"> 
                  
                  <p><code>READ BY ISN</code> can only be used for Adabas databases.
                  </p> 
                            
                  <p><code>READ BY ISN</code> is used to read records in the order of
                                Adabas ISNs (internal sequence numbers).
                  </p> 
                             
                             
                  <p class="note"><strong>Note:</strong><br>For XML databases: <code>READ BY ISN</code> is used to read
                                 XML objects according to the order of Tamino object IDs.
                  </p>
                            
               </td> 
                       
            </tr> 
                    
            <tr> 
                        
               <th align="left"> <a name="LOGICAL"></a>READ IN
                  LOGICAL SEQUENCE 
               </th> 
                        
               <td align="left"> 
                  
                  <p><a name="descriptor"></a><code>LOGICAL SEQUENCE</code> is used to read
                     records in the order of the values of a descriptor (key) field.
                  </p> 
                            
                  <p>If you specify a descriptor, the records will be read in the value
                     sequence of the descriptor. A descriptor, subdescriptor, superdescriptor or
                     hyperdescriptor may be used for sequence control. A phonetic descriptor, a
                               descriptor within a periodic group, or a superdescriptor which contains a
                                periodic-group field cannot be used.
                  </p> 
                            
                  <p>If you do not specify a descriptor, the default descriptor as
                                specified in the DDM (field <code>Default Sequence</code>) will be used.
                  </p> 
                             
                            
                  <p>If the descriptor used for sequence control is defined with
                                null-value suppression (Adabas only), any record which contains a null value
                                for the descriptor will not be read.
                  </p> 
                            
                  <p>If the descriptor is a multiple-value field (Adabas only), the
                                same record will be read multiple times depending on the number of values
                                present.
                  </p> 
                            
                  <p class="note"><strong>Note:</strong><br> <code>READ IN LOGICAL SEQUENCE</code> is also discussed in the
                                <cite>Programming Guide</cite>; see <cite>Statements for Database
                                   Access</cite>, <a href="../pg/pg_dbms_ada.htm#READ_Statement">READ
                                   Statement</a>.
                  </p> 
               </td> 
                       
            </tr> 
                    
            <tr> 
                        
               <th align="left"> <a name="ascending_read"></a>ASCENDING | DESCENDING | VARIABLE | DYNAMIC
                  SEQUENCE 
               </th> 
                        
               <td align="left"> 
                  
                  <p>This clause only applies to Adabas,
                     XML databases
                     and SQL databases. In a <code>READ PHYSICAL</code> statement, it can
                                only be applied to DB2 databases.
                  </p> 
                            
                  <p>With this clause, you can determine whether the records are to be
                                read in ascending sequence or in descending sequence.
                  </p> 
                            
                  <ul> 
                                
                     <li> 
                                    
                        <p class="initem">The default sequence is ascending (which may, but need not, be
                                        explicitly specified by using the keyword <code>ASCENDING</code>).
                        </p> 
                                   
                     </li> 
                                
                     <li> 
                                    
                        <p class="initem">If the records are to be read in descending sequence, you
                                        specify the keyword <code>DESCENDING</code>.
                        </p> 
                                   
                     </li> 
                                
                     <li> 
                                    
                        <p class="initem">If, instead of determining it in advance, you want to have the
                                        option of determining at runtime whether the records are to be read in
                                        ascending or descending sequence, you either specify the keyword
                                        <code>VARIABLE</code> or <code>DYNAMIC</code>, followed by a variable
                                        (<var>operand5</var>). <var>Operand5</var> has
                                        to be of format/length A1 and can contain the value <code>A</code> (for
                                        "ascending") or <code>D</code> (for "descending").
                                        
                        </p> 
                                    
                        <ul style="margin-top: 0px; margin-bottom: 0px;"> 
                                        
                           <li class="nesteditem"> 
                                            
                              <p class="initem">If keyword <code>VARIABLE</code> is used, the reading
                                                direction (value of <var>operand5</var>) is evaluated at start
                                                of the <code>READ</code> processing loop and remains the same until the loop is
                                                terminated, regardless if the <var>operand5</var> field is
                                                altered in the <code>READ</code> loop or not.
                              </p> 
                                           
                           </li> 
                                        
                           <li class="nesteditem"> 
                                            
                              <p class="initem">If keyword <code>DYNAMIC</code> is used, the reading direction
                                                (value of <var>operand5</var>) is evaluated before every record
                                                fetch in the <code>READ</code> processing loop and may be changed from record
                                                to record. This allows to change the scroll sequence from ascending to
                                                descending (and vice versa) at any place in the <code>READ</code> loop.
                              </p> 
                                           
                           </li> 
                                       
                        </ul> 
                                   
                     </li> 
                               
                  </ul> 
                            
                  <p class="notes"><strong>Notes:</strong></p>
                  <ol class="note-list"> 
                                 
                                
                     <li>For XML databases: <code>DYNAMIC SEQUENCE</code>
                                    is not available.
                     </li> 
                               
                  </ol> 
               </td> 
                       
            </tr> 
                    
            <tr> 
                        
               <th align="left">
                  <a name="STARTING_FROM_read" id="10954"></a>STARTING FROM ...
                  ENDING AT/TO
               </th> 
                        
               <td align="left"> 
                  
                  <p>The <code>STARTING FROM</code> and <code>ENDING AT</code> clauses
                     are used to limit reading to a set of records based on a user-specified range
                                of values.
                  </p> 
                            
                  <p>The <code>STARTING FROM</code> clause (<code>=</code> or
                                <code>EQ</code> or <code>EQUAL TO</code> or <code>[STARTING] FROM</code>)
                      determines the starting value for the read operation. If a starting value is
                                specified, reading will begin with the value specified. If the starting value
                                does not exist in the file, the next higher (or lower for a
                                <code>DESCENDING</code> read) value will be used. If no higher (or lower for
                                <code>DESCENDING</code>) value exists, the loop will not be entered.
                  </p> 
                            
                  <p>In order to limit the records to an end-value, you may specify an
                                <code>ENDING AT</code> clause with the terms <code>THRU</code>, <code>ENDING
                                   AT</code> or <code>TO</code>, that imply an inclusive range. Whenever the read
                                descriptor field exceeds the end-value specified, an automatic loop termination
                                is performed. Although the basic functionality of the <code>TO</code>,
                                <code>THRU</code> and <code>ENDING AT</code> keywords looks quite similar,
                                internally they differ in how they work.
                  </p> 
               </td> 
                       
            </tr> 
                    
            <tr> 
                        
               <th align="left"> <a name="thru_ending_read"></a>THRU/ENDING AT 
               </th> 
                        
               <td align="left"> 
                  
                  <p>If <code>THRU</code> or <code>ENDING AT</code> is used, only the
                     start-value is supplied to the database, but the end-value check is performed
                     by the Natural runtime system, after the record is returned by the database. If
                               the read direction is <code>ASCENDING</code>, you have to supply the lower
                                value as the start-value and the higher-value as the end-value, since the
                                start-value represents the value (and record) returned first in the
                                <code>READ</code> loop. However, if you invoke a backwards read
                                (<code>DESCENDING</code>), the higher value has to appear in the start-value
                                and the lower-value in the end-value.
                  </p> 
                            
                  <p>Internally, to determine the end of the range to be read, Natural
                                reads one record beyond the end-value. If you have left the <code>READ</code>
                                loop because the end-value has been reached, be aware that this last record is
                                in fact not the last record within the demanded range, but the first record
                                beyond that range (except if the file does not contain a further record after
                                the last result record).
                  </p> 
                            
                  <p>The <code>THRU</code> and <code>ENDING AT</code> clauses can be
                                used for all databases which support the <code>READ</code> or
                                <a href="histogra.htm#histogra"><code>HISTOGRAM</code></a> statements.
                  </p>
                            
               </td> 
                       
            </tr> 
                    
            <tr> 
                        
               <th align="left"> <a name="to_read"></a>TO
                   
               </th> 
                        
               <td align="left"> 
                  
                  <p>If the keyword <code>TO</code> is used, both the start-value and
                     the end-value are sent to the database and Natural does not perform checks for
                     value ranges. If the end-value is exceeded, the database reacts the same as
                     when "end-of-file" is reached and the database loop is exited.
                     Since the complete range checking is done by the database, the lower-value (of
                     the range) is always supplied in the start-value and the higher-value filled
                     into the end-value, regardless if you are browsing in <code>ASCENDING</code> or
                                <code>DESCENDING</code> order.
                  </p> 
                            
                  <p>The <code>TO</code> option is only applicable if the underlying
                                database is Adabas Version 3.1.1 on UNIX, OpenVMS or
                                Windows, Adabas Version 7 (or above) on mainframes, Tamino or an SQL
                                database.
                  </p> 
               </td> 
                       
            </tr> 
                   
         </tbody> 
               
      </table> 
            
           
      <h4 class="floating-title"> Notes on Functional Differences between THRU/ENDING AT
               and TO 
      </h4> 
           
      <p>The following list describes the functional differences between the
               usage of the <a href="read.htm#thru_ending_read"><code>THRU/ENDING
               AT</code></a> and <a href="read.htm#to_read"><code>TO</code></a> options.
      </p> 
            
            
      <table border="1" class="color" cellpadding="3" width="97%"> 
                 
                
         <thead align="left" valign="top"> 
                    
            <tr> 
                        
               <th>THRU/ENDING AT</th> 
                        
               <th>TO</th> 
                       
            </tr> 
                   
         </thead> 
                
         <tbody align="left" valign="top"> 
                    
            <tr> 
                        
               <td>When the <code>READ</code> loop terminates because the
                  end-value has been reached, the view contains the first record
                  "out-of-range".
               </td> 
                        
               <td>When the <code>READ</code> loop terminates because the
                  end-value has been reached, the view contains the last record of the specified
                         range.
               </td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td>If a end-value variable is modified during the
                  <code>READ</code> loop, the new value will be used for end-value check on next
                            record being read.
               </td> 
                        
               <td>The end-value variable will only be evaluated at
                  <code>READ</code> loop start. All further modifications during the
                            <code>READ</code> loop have no effect.
               </td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td>An incorrect range (e.g. <code>READ .. = 'B' THRU 'A'</code>)
                  does not cause a database error, but just returns no record.
               </td> 
                        
               <td>An incorrect range results in a database error (e.g. Adabas
                  RC=61), because a value range must not be supplied in descending order.
               </td>
                        
                       
            </tr> 
                    
            <tr> 
                        
               <td>If a <code>READ .. DESCENDING</code> is used with start- and
                  end-value, the start value is used to position in the file, whereas the
                  end-value is used by Natural to check for "end-of-range".
                  Therefore the start-value is higher than (or equal to) the end-value.
               </td> 
                        
               <td>Since both values are passed to the database, they have to
                  appear in ascending order. In other words, the start-value is lower than (or
                  equal to) the end-value, no matter if you are reading in ascending or
                  descending order.
               </td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td>In order to check for range overflow, the descriptor value has
                  to appear in the underlying database view; that is, it must be returned in the
                  record buffer.
               </td> 
                        
               <td>The descriptor is not required in the record fields
                  returned.
               </td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td>The end-value check for an Adabas multi-value field (MU-field)
                  or a sub-/super-/hyper-descriptor is not possible and leads to syntax error
                  NAT0160 at program compilation.
               </td> 
                        
               <td>You may specify an end-value for MU-fields and
                  sub-/super-/hyper-descriptors.
               </td> 
                       
            </tr> 
                    
            <tr> 
                        
               <td>Can be used for all databases.</td> 
                        
               <td>Can only be used for Adabas Version 3.1.1 on
                  Windows, UNIX or OpenVMS, Adabas Version 7 (or above) on mainframes, Tamino or
                  an SQL database.
               </td> 
                       
            </tr> 
                   
         </tbody> 
               
      </table> 
            
           
          
         
      <div><a name="WHERE_read"></a></div> 
          
      <h3> WHERE Clause </h3> 
           
            
            
      <table border="0" class="syntax" cellpadding="3">  
                
         <tbody align="left" valign="top"> 
                    
            <tr> 
                        
               <td nowrap> <code class="keyword">WHERE</code>
                        <a href="../pg/pg_furth_lcc.htm">
                               <var>logical-condition</var> </a> 
               </td> 
                       
            </tr> 
                   
         </tbody> 
               
      </table> 
            
           
      <p>The <code>WHERE</code> clause may be used to specify an additional
               selection criterion (<var>logical-condition</var>) which is
               evaluated <em>after</em> a value has been read and <em>before</em> any
               processing is performed on the value (including the
               <a href="atbreak.htm#atbreak"><code>AT BREAK</code></a> evaluation).
      </p> 
           
      <p>The syntax for a <var>logical-condition </var> is
               described in the section <a href="../pg/pg_furth_lcc.htm">Logical Condition
            Criteria</a> (in the <cite>Programming
                  Guide</cite>).
      </p> 
           
      <p>If a <a href="limit.htm#limit"><code>LIMIT</code></a> statement
               or a processing limit is specified in a <code>READ</code> statement containing
               a <code>WHERE</code> clause, records which are rejected as a result of the
               <code>WHERE</code> clause are not counted against the limit.
      </p> 
           
          
        
        
      <div class="noprint">
         <p><a href="read.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="System_Variables_read"></a></div> 
         
      <h2> System Variables Available with READ </h2> 
          
          
      <p>The Natural system variables <a href="../vari/appl.htm#ISN"><code>*ISN</code></a> and
              <a href="../vari/appl.htm#COUNTER"><code>*COUNTER</code></a>
              are available with the <code>READ</code> statement.
      </p> 
          
      <p>The format/length of these system variables is P10. This format/length
              cannot be changed.
      </p> 
          
      <p>The usage of the system variables is illustrated below.</p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <th>*ISN</th> 
                       
               <td> 
                  
                  <p>The system variable <a href="../vari/appl.htm#ISN"><code>*ISN</code></a>
                     contains the Adabas ISN of the record currently being processed.
                  </p> 
                            
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th>*COUNTER</th> 
                       
               <td>The system variable <a href="../vari/appl.htm#COUNTER"><code>*COUNTER</code></a>
                  contains the number of times the processing loop has been entered.
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="read.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="read_exa"></a></div> 
         
      <h2> Examples </h2>
      <ul>
         <li>
            <p class="initem"><a href="read.htm#Example_1_read">Example 1 - READ Statement</a></p>
         </li>
         <li>
            <p class="initem"><a href="read.htm#Example_2_read">Example 2 - READ WITH REPOSITION</a></p>
         </li>
         <li>
            <p class="initem"><a href="read.htm#Example_3_read">Example 3 - Combining READ and FIND Statements</a></p>
         </li>
         <li>
            <p class="initem"><a href="read.htm#Example_4_read">Example 4 - DESCENDING Option</a></p>
         </li>
         <li>
            <p class="initem"><a href="read.htm#Example_5_read">Example 5 - VARIABLE Option&gt;</a></p>
         </li>
         <li>
            <p class="initem"><a href="read.htm#Example_6_read">Example 6 - DYNAMIC Option</a></p>
         </li>
         <li>
            <p class="initem"><a href="read.htm#Example_7_read">Example 7 - STARTING WITH ISN Clause</a></p>
         </li>
      </ul> 
         
      <div><a name="Example_1_read"></a></div> 
          
      <h3>Example 1 - READ Statement</h3> 
           
           <pre class="verbatim">** Example 'REAEX1S': READ (structured mode)                            
************************************************************************
DEFINE DATA LOCAL                                                       
1 EMPLOY-VIEW VIEW OF EMPLOYEES                                         
  2 PERSONNEL-ID                                                        
  2 NAME                                                                
1 VEHIC-VIEW VIEW OF VEHICLES                                           
  2 PERSONNEL-ID                                                        
  2 MAKE                                                                
END-DEFINE                                                              
*                                                                       
LIMIT 3                                                                 
*                                                                       
WRITE 'READ IN PHYSICAL SEQUENCE'                                       
<strong>READ EMPLOY-VIEW IN PHYSICAL SEQUENCE</strong>                         
  DISPLAY NOTITLE PERSONNEL-ID NAME *ISN *COUNTER                       
<strong>END-READ</strong>                                                            
*                                                                       
WRITE / 'READ IN ISN SEQUENCE'                                          
<strong>READ EMPLOY-VIEW BY ISN STARTING FROM 1 ENDING AT 3</strong>
  DISPLAY         PERSONNEL-ID NAME *ISN *COUNTER  
<strong>END-READ</strong>                                       
*                                                  
WRITE / 'READ IN NAME SEQUENCE'                    
<strong>READ EMPLOY-VIEW BY NAME</strong>                     
  DISPLAY         PERSONNEL-ID NAME *ISN *COUNTER  
<strong>END-READ</strong>                                   
*                                                  
WRITE / 'READ IN NAME SEQUENCE STARTING FROM ''M'''
<strong>READ EMPLOY-VIEW BY NAME STARTING FROM 'M'</strong>   
  DISPLAY         PERSONNEL-ID NAME *ISN *COUNTER  
<strong>END-READ</strong>                                      
*                                                  
END                                               </pre> 
           <h4 class="floating-title">Output of Program REAEX1S:</h4> <pre class="system-output">PERSONNEL         NAME            ISN         CNT     
   ID                                                 
--------- -------------------- ----------- -----------
                                                      
READ IN PHYSICAL SEQUENCE                             
50005800  ADAM                           1           1
50005600  MORENO                         2           2
50005500  BLOND                          3           3
                                                      
READ IN ISN SEQUENCE                                  
50005800  ADAM                           1           1
50005600  MORENO                         2           2
50005500  BLOND                          3           3
                                                      
READ IN NAME SEQUENCE                                 
60008339  ABELLAN                      478           1
30000231  ACHIESON                     878           2
50005800  ADAM                           1           3
                                                      
READ IN NAME SEQUENCE STARTING FROM 'M'               
30008125  MACDONALD                    923           1
20028700  MACKARNESS                   765           2
40000045  MADSEN                       508           3</pre> 
           <p>Equivalent reporting-mode example: <a href="sm_exas.htm#REAEX1R">REAEX1R</a>.
      </p> 
          
      <div><a name="Example_2_read"></a></div> 
          
      <h3> Example 2 - READ WITH REPOSITION</h3> 
           
           <pre class="verbatim">DEFINE DATA LOCAL
1 MYVIEW VIEW OF ...
  2 NAME
1 #STARTVAL (A20) INIT &lt;'A'&gt;
1 #ATTR     (C)
END-DEFINE
...
SET KEY PF3
...
<strong>READ MYVIEW WITH REPOSITION BY NAME = #STARTVAL</strong>
INPUT (IP=OFF AD=O) 'NAME:' NAME /
    'Enter new start value for repositioning:' #STARTVAL (AD=MT CV=#ATTR) /
    'Press PF3 to stop'
  IF *PF-KEY = 'PF3'
    THEN STOP
  END-IF
  IF #ATTR MODIFIED
    THEN <strong>ESCAPE TOP REPOSITION</strong>
  END-IF
<strong>END-READ</strong>
...</pre> 
           <pre class="verbatim">DEFINE DATA LOCAL
1 MYVIEW VIEW OF ...
  2 NAME
1 #STARTVAL (A20) INIT &lt;'A'&gt;
1 #ATTR     (C)
END-DEFINE
...
SET KEY PF3
...
<strong>READ MYVIEW WITH REPOSITION BY NAME = #STARTVAL</strong>
  INPUT (IP=OFF AD=O) 'NAME:' NAME /
    'Enter new start value for repositioning:' #STARTVAL (AD=MT CV=#ATTR) /
    'Press PF3 to stop'
  IF *PF-KEY = 'PF3'
    THEN STOP
  END-IF
  IF #ATTR MODIFIED
    THEN <strong>RESET *COUNTER</strong>
  END-IF
<strong>END-READ</strong>
...</pre> 
          <div><a name="Example_3_read"></a></div> 
          
      <h3>Example 3 - Combining READ and FIND Statements</h3> 
           
           
      <p>The following program reads records from the
               EMPLOYEES file in logical sequential
               order based on the values of the descriptor <code>NAME</code>. A
               <a href="find.htm#find"><code>FIND</code></a> statement is then issued
               to the VEHICLES file using the personnel
               number from the EMPLOYEES file as search
               criterion. The resulting report shows the name (read from the
               EMPLOYEES file) of each person read and
               the model of automobile (read from the VEHICLES file) owned by this person. Multiple
               lines with the same name are produced if the person owns more than one
               automobile.
      </p> 
           <pre class="verbatim">** Example 'REAEX2': READ and FIND combination                          
************************************************************************
DEFINE DATA LOCAL                                                       
1 EMPLOY-VIEW VIEW OF EMPLOYEES                                         
  2 PERSONNEL-ID                                                        
  2 FIRST-NAME                                                          
  2 NAME                                                                
  2 CITY                                                                
1 VEH-VIEW VIEW OF VEHICLES                                             
  2 PERSONNEL-ID                                                        
  2 MAKE                                                                
END-DEFINE                                                              
*                                                                       
LIMIT 10                                                                
*                                                                       
<strong>RD. READ EMPLOY-VIEW BY NAME STARTING FROM 'JONES'</strong>                    
  SUSPEND IDENTICAL SUPPRESS                                            
  <strong>FD. FIND VEH-VIEW WITH PERSONNEL-ID = PERSONNEL-ID (RD.)</strong>       
    IF NO RECORDS FOUND                                                 
      ENTER                                   
    END-NOREC                                 
    DISPLAY NOTITLE (ES=OFF IS=ON ZP=ON AL=15)
            PERSONNEL-ID (RD.)                
            FIRST-NAME (RD.)                  
            MAKE (FD.) (IS=OFF)               
  
  <strong>END-FIND</strong>
<strong>END-READ</strong>                          
END</pre> 
           <h4 class="floating-title">Output of Program REAEX2:</h4> <pre class="system-output">PERSONNEL      FIRST-NAME         MAKE      
      ID                                       
--------------- --------------- ---------------
                                               
20007500        VIRGINIA        CHRYSLER       
20008400        MARSHA          CHRYSLER       
                                CHRYSLER       
20021100        ROBERT          GENERAL MOTORS 
20000800        LILLY           FORD           
                                MG             
20001100        EDWARD          GENERAL MOTORS 
20002000        MARTHA          GENERAL MOTORS 
20003400        LAUREL          GENERAL MOTORS 
30034045        KEVIN           DATSUN         
30034233        GREGORY         FORD           
11400319        MANFRED                       </pre> 
          <div><a name="Example_4_read"></a></div> 
          
      <h3>Example 4 - DESCENDING Option</h3> 
           
           <pre class="verbatim">** Example 'READSCND': READ (with DESCENDING SEQUENCE)                  
************************************************************************
DEFINE DATA LOCAL                                                       
1 EMPL VIEW OF EMPLOYEES                                                
  2 NAME                                                                
  2 FIRST-NAME                                                          
  2 BIRTH                                                               
END-DEFINE                                                              
*                                                                       
<strong>READ (10) EMPL IN DESCENDING SEQUENCE BY NAME FROM 'ZZZ'</strong>          
  DISPLAY *ISN NAME FIRST-NAME BIRTH (EM=YYYY-MM-DD)                    
<strong>END-READ</strong>                                                           
END</pre> 
          <div><a name="Example_5_read"></a></div> 
          
      <h3>Example 5 - VARIABLE Option&gt;</h3> 
           
           <pre class="verbatim">** Example 'REAVSEQ':  READ  (with VARIABLE SEQUENCE)                   
************************************************************************
DEFINE DATA LOCAL                                                       
1 EMPL VIEW OF EMPLOYEES                                                
  2 NAME                                                                
  2 FIRST-NAME                                                          
  2 BIRTH                                                               
*                                                                       
1 #DIR        (A1)                                                      
1 #STARTVALUE (A20)                                                     
END-DEFINE                                                              
*                                                                       
SET KEY PF7 PF8                                                         
*                                                                       
INPUT 'Select READ direction'                                           
   // 'Press' 08T 'PF7' (I)                  21T 'to read backward'     
    /         08T 'PF8' (I) 'or' 'ENTER' (I) 21T 'to read forward'      
*                                                                       
IF *PF-KEY = 'PF7'                                                      
  MOVE 'D'   TO #DIR                                
  MOVE 'ZZZ' TO #STARTVALUE                         
ELSE                                                
  MOVE 'A' TO #DIR                                  
  MOVE 'A' TO #STARTVALUE                           
END-IF                                              
*                                                   
<strong>READ (10) EMPL IN VARIABLE #DIR SEQUENCE
               BY NAME FROM #STARTVALUE</strong>
  DISPLAY *ISN NAME FIRST-NAME BIRTH (EM=YYYY-MM-DD)
<strong>END-READ</strong>                                      
END                                                </pre> 
          <div><a name="Example_6_read"></a></div> 
          
      <h3>Example 6 - DYNAMIC Option</h3> 
           
           <pre class="verbatim">DEFINE DATA LOCAL
1 #DIRECTION (A1) INIT &lt;'A'&gt;   /* 'A' = ASCENDING
1 #EMPVIEW VIEW OF EMPLOYEES
2 NAME
...
END-DEFINE
...
<strong>READ #EMPVIEW IN DYNAMIC #DIRECTION SEQUENCE BY NAME = 'SMITH'</strong>
   INPUT (AD=O) NAME
       / 'Press PF7 to scroll in DESCENDING sequence'
       / 'Press PF8 to scroll in ASCENDING  sequence'
   ..
   IF *PF-KEY = 'PF7' THEN MOVE 'D' TO #DIRECTION END-IF
   IF *PF-KEY = 'PF8' THEN MOVE 'A' TO #DIRECTION END-IF
<strong>END-READ</strong>
...</pre> 
          <div><a name="Example_7_read"></a></div> 
          
      <h3>Example 7 - STARTING WITH ISN Clause</h3> 
           
           <pre class="verbatim">** Example 'REASISND': READ  (with STARTING WITH ISN)                   
************************************************************************
DEFINE DATA LOCAL                                                       
1 EMPL VIEW OF EMPLOYEES                                                
  2 NAME                                                                
  2 FIRST-NAME                                                          
  2 BIRTH                                                               
*                                                                       
1 #DIR      (A1)                                                        
1 #STARTVAL (A20)                                                       
1 #STARTISN (N8)                                                        
END-DEFINE                                                              
*                                                                       
SET KEY PF3 PF7 PF8                                                     
*                                                                       
MOVE 'ADKINSON' TO #STARTVAL                                            
*                                                                       
<strong>READ (9) EMPL BY NAME = #STARTVAL</strong>                                  
  WRITE *ISN NAME FIRST-NAME BIRTH (EM=YYYY-MM-DD) *COUNTER             
  IF *COUNTER = 5 THEN                                      
    MOVE NAME TO #STARTVAL                                  
    MOVE *ISN TO #STARTISN                                  
  END-IF                                                    
<strong>END-READ</strong>                                                  
*                                                           
#DIR := 'A'                                                 
*                                                           
REPEAT                                                      
<strong> READ EMPL IN VARIABLE #DIR  BY NAME = #STARTVAL           
            STARTING WITH ISN = #STARTISN </strong>           
    MOVE NAME TO #STARTVAL                                  
    MOVE *ISN TO #STARTISN                                  
    INPUT NO ERASE  (IP=OFF AD=O)                           
         15/01 *ISN  NAME  FIRST-NAME  BIRTH (EM=YYYY-MM-DD)
           //  'Direction:' #DIR                            
           //  'Press PF3 to stop'                          
           /   '      PF7 to go step back'                  
           /   '      PF8 to go step forward'               
           /   '      ENTER to continue in that direction'
    /*                                                    
    IF *PF-KEY = 'PF7' AND #DIR = 'A'                     
      MOVE 'D' TO #DIR                                    
      ESCAPE BOTTOM                                       
    END-IF                                                
    IF *PF-KEY = 'PF8' AND #DIR = 'D'                     
      MOVE 'A' TO #DIR                                    
      ESCAPE BOTTOM                                       
    END-IF                                                
    IF *PF-KEY = 'PF3'                                    
      STOP                                                
    END-IF                                                
  <strong>END-READ</strong>                                          
  /*                                                      
  IF *COUNTER(0290) = 0                                   
    STOP                                                  
  END-IF                                                  
END-REPEAT                                                
END</pre> 
           
        
       <div class="noprint">
         <div class="nospy">
            <p><a href="read.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
            <table border="0" cellpadding="0" cellspacing="0" width="97%">
               <col width="15%">
               <col width="34%">
               <col width="48%">
               <tr>
                  <td class="footer"><img src="../graphics/blank.png" width="3" height="10">&nbsp;<a class="navig" target="_blank" href="http://www.softwareag.com">www.softwareag.com</a>&nbsp;
                  </td>
                  <td nowrap class="footer"><img src="../graphics/blank.png" width="3"><a class="navig" href="../general/legal.htm" target="_blank">Copyright &copy; Software AG 1992-2008. All rights reserved.&nbsp;</a></td>
                  <td class="bottomlinks" align="right" nowrap><img src="../graphics/blank.png" width="3"><a class="navig" target="_blank" href="../fts/search.htm" onclick="window.open('../fts/search.htm', 'fts', 'dependent,width=555,height=420,resizable'); return false">SEARCH</a>
                     &nbsp;&nbsp;<a class="navig" href="javascript:sized_window('../navig/navig.htm')" onclick="document.cookie='sagphdcc=../sm/read.htm;path=/'; window.open('../navig/navig.htm', 'nvgtr', 'dependent,width=450,height=270,resizable'); return false">CONTENTS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="http://documentation.softwareag.com/natural/nat635unx/pdf/sm/read.pdf">PDF PAGE</a>
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="../general/print.htm">PDF BOOKS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" href="../overview.htm">HOME</a>
                     &nbsp;&nbsp;<a class="navig" href="sm-over.htm">UP</a>
                     &nbsp;&nbsp;<a class="navig" href="property.htm">PREV</a>
                     &nbsp;&nbsp;<a class="navig" href="readwork.htm">NEXT</a></td>
               </tr>
            </table>
         </div>
      </div>
   </body>
</html>