
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   
      <meta name="generator" content="Sagdoc XSL Stylesheets">
      <link rel="stylesheet" type="text/css" href="../general/style2.css"><script language="JavaScript" src="../general/selbox.js"></script><script type="text/javascript" language="javascript">
         <!--
window.name = 'contents';
//--></script><title>PERFORM</title>
   </head>
   <body bgcolor="#FFFFFF" background="../graphics/bar.png" style="margin-left: 20px;">
      <div><a name="perform" id="16836"></a></div>
      <div class="noprint">
         <div class="nospytext">
            <table border="0" cellpadding="0" cellspacing="0" width="97%">
               <col width="15%">
               <col width="34%">
               <col width="48%">
               <tr>
                  <td colspan="2" class="topline"><a name="Top"></a>&nbsp;<img src="../graphics/natux_logo.png"></td>
                  <td class="topline" align="right"><img src="../graphics/sag_logo.png">&nbsp;
                  </td>
               </tr>
               <tr>
                  <td class="header" nowrap><img src="../graphics/blank.png" width="3" height="10"></td>
                  <td class="header"><img src="../graphics/blank.png" width="3">Version&nbsp;6.3.5 for UNIX
                  </td>
                  <td class="toplinks" align="right" nowrap><img src="../graphics/blank.png" width="3"><a class="navig" target="_blank" href="../fts/search.htm" onclick="window.open('../fts/search.htm', 'fts', 'dependent,width=555,height=420,resizable'); return false">SEARCH</a>
                     &nbsp;&nbsp;<a class="navig" href="javascript:sized_window('../navig/navig.htm')" onclick="document.cookie='sagphdcc=../sm/perform.htm;path=/'; window.open('../navig/navig.htm', 'nvgtr', 'dependent,width=450,height=270,resizable'); return false">CONTENTS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="http://documentation.softwareag.com/natural/nat635unx/pdf/sm/perform.pdf">PDF PAGE</a>
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="../general/print.htm">PDF BOOKS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" href="../overview.htm">HOME</a>
                     &nbsp;&nbsp;<a class="navig" href="sm-over.htm">UP</a>
                     &nbsp;&nbsp;<a class="navig" href="passw.htm">PREV</a>
                     &nbsp;&nbsp;<a class="navig" href="performb.htm">NEXT</a></td>
               </tr>
            </table>
         </div>
      </div>
      <div class="nospytext" style="margin-top:0.25in;">
         <div><span class="module">&nbsp;&#8212;&nbsp;&nbsp;Statements&nbsp;&nbsp;&#8212;</span></div>
      </div> 
        
      <div class="nospytext">
         <h1> PERFORM 
               <a name="x131"></a></h1>
      </div> 
         
          
          
      <table border="0" class="syntax" cellpadding="3"> 
               
               
               
               
              
         <tbody align="left" valign="top"> 
                  
            <tr> 
                      
               <td rowspan="4"> <code class="keyword">PERFORM</code>
                          <a href="perform.htm#subroutine_name">
                             <var>subroutine-name</var> </a> 
               </td> 
                      
               <td rowspan="4"> 
                  
                  <p><img src="../graphics/sbo4.gif" alt="" width="5" height="100"></p> 
               </td> 
                      
               <td>&nbsp;</td> 
                      
               <td rowspan="3"> 
                  
                  <p><img src="../graphics/sbo3.gif" alt="" width="5" height="61"></p> 
               </td> 
                      
               <td>&nbsp;</td> 
                      
               <td rowspan="3"> 
                  
                  <p><img src="../graphics/cbo3.gif" alt="" width="6" height="59"></p> 
               </td> 
                      
               <td align="center"> <a href="../parms/sp_ad.htm#sp_ad_ad_m">
                      <code class="keyword">M</code></a> 
               </td> 
                      
               <td rowspan="3"> 
                  
                  <p><img src="../graphics/cbc3.gif" alt="" width="6" height="59"></p> 
               </td> 
                      
               <td>&nbsp;</td> 
                      
               <td rowspan="3"> 
                  
                  <p><img src="../graphics/sbc3.gif" alt="" width="5" height="61"></p> 
               </td> 
                      
               <td rowspan="4">
                  <img src="../graphics/sbc4.gif" alt="" width="5" height="100">
                          <img src="../graphics/dot3.gif" alt="" width="12" height="4">
                          
               </td> 
                     
            </tr> 
                  
            <tr> 
                      
               <td> <a href="perform.htm#operand2_perform">
                      <var>operand2</var> </a> 
               </td> 
                      
               <td> (<a href="perform.htm#AD_perform"><code class="keyword">AD=</code>
                          </a> 
               </td> 
                      
               <td align="center"> <a href="../parms/sp_ad.htm#sp_ad_ad_o">
                      <code class="keyword">O</code></a></td> 
                      
               <td> ) </td> 
                     
            </tr> 
                  
            <tr> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td align="center"> <a href="../parms/sp_ad.htm#sp_ad_ad_a">
                      <code class="keyword">A</code></a></td> 
                      
               <td>&nbsp;</td> 
                     
            </tr> 
                  
            <tr> 
                      
               <td colspan="2"> <a href="perform.htm#nX_perform">
                      <var>n</var><code class="keyword">X</code> </a> 
               </td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                      
               <td>&nbsp;</td> 
                     
            </tr> 
                 
         </tbody> 
             
      </table> 
          
         
      <p>This document covers the following topics:</p>
         
      <ul>
         <li>
            <p class="initem"><a href="perform.htm#Function_perform">Function</a></p>
         </li>
         <li>
            <p class="initem"><a href="perform.htm#syntax_descr_perform">Syntax Description</a></p>
         </li>
         <li>
            <p class="initem"><a href="perform.htm#perform_exa">Examples</a></p>
         </li>
      </ul> 
         
      <p>For an explanation of the symbols used in the syntax diagram, see
             <a href="synsym.htm#Syntax_Symbols">Syntax
            Symbols</a>.
      </p> 
         
      <p>Related Statements: <a href="call.htm#call">CALL</a> |
             <a href="callfile.htm#callfile">CALL FILE</a> |
             <a href="callloop.htm#callloop">CALL LOOP</a> |
             <a href="callnat.htm#callnat">CALLNAT</a> | <a href="definesu.htm#definesu">DEFINE SUBROUTINE</a> | <a href="escape.htm#escape">ESCAPE</a> | <a href="fetch.htm#fetch">FETCH</a> 
      </p> 
         
      <p>Belongs to Function Group:
             <a href="stmt.htm#Invoking_Programs_and_Routines">Invoking Programs
            and Routines</a></p> 
        
      <hr> 
        
      <div><a name="Function_perform"></a></div> 
         
      <h2> Function </h2> 
          
          
      <p>The <code>PERFORM</code> statement is used to invoke a Natural
              <a href="perform.htm#subroutine">subroutine</a>.
      </p> 
          
         
      <div><a name="Nested_PERFORM_Statements"></a></div> 
          
      <h3> Nested PERFORM Statements </h3> 
           
           
      <p>The invoked subroutine may contain a <code>PERFORM</code> statement to
               invoke another subroutine (the number of nested levels is limited by the size
               of the required memory).
      </p> 
           
      <p>A subroutine may invoke itself (recursive subroutine). If database
               operations are contained within an external subroutine that is invoked
               recursively, Natural will ensure that the database operations are logically
               separated.
      </p> 
           
          
         
      <div><a name="parameter_perform"></a></div> 
          
      <h3> Parameter Transfer with Dynamic Variables </h3> 
           
           
      <p>See the statement <a href="callnat.htm#PT_DV_CALLNAT"><code>CALLNAT</code></a>.
      </p> 
           
          
        
        
      <div class="noprint">
         <p><a href="perform.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="syntax_descr_perform"></a></div> 
         
      <h2> Syntax Description </h2> 
          
          
      <p>Operand Definition Table:</p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
                
                
                
                
                
                
                
                
                 
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th>Operand</th> 
                       
               <th colspan="5" align="center">
                  <a href="synsym.htm#statem_poss_struct">Possible Structure</a> 
               </th> 
                       
               <th colspan="13" align="center">
                  <a href="synsym.htm#statem_poss_form">Possible Formats</a> 
               </th> 
                       
               <th align="center"> <a href="synsym.htm#statem_ref_perm">Referencing
                     Permitted</a> 
               </th> 
                       
               <th align="center"> <a href="synsym.htm#statem_dyn_def">Dynamic
                     Definition</a> 
               </th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <var>operand2</var> 
               </td> 
                       
               <td>C</td> 
                       
               <td>S</td> 
                       
               <td>A</td> 
                       
               <td>G</td> 
                       
               <td>&nbsp;</td> 
                       
               <td>A</td> 
                       
               <td>U</td> 
                       
               <td>N</td> 
                       
               <td>P</td> 
                       
               <td>I</td> 
                       
               <td>F</td> 
                       
               <td>B</td> 
                       
               <td>D</td> 
                       
               <td>T</td> 
                       
               <td>L</td> 
                       
               <td>C</td> 
                       
               <td align="center">G</td> 
                       
               <td align="center">O</td> 
                       
               <td align="center">yes</td> 
                       
               <td align="center">yes</td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <p>Syntax Element Description:</p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <th nowrap> <a name="subroutine_name"></a>
                   <var>subroutine-name</var> 
               </th> 
                       
               <td colspan="2"> 
                  
                  <div><strong class="floating-title"> Subroutine to Be Invoked: </strong></div> 
                           
                  <p>For a subroutine name (maximum 32 characters), the same naming
                      conventions apply as for user-defined variables.
                  </p> 
                           
                  <p>The subroutine name is independent of the name of the module in
                               which the subroutine is defined (it may but need not be the same).
                  </p> 
                           
                  <p>The subroutine to be invoked must be defined with a <code>DEFINE
                                  SUBROUTINE</code> statement. It may be an inline or external subroutine (see
                               <a href="definesu.htm#definesu"><code>DEFINE SUBROUTINE</code></a>
                               statement).
                  </p> 
                           
                  <p>Within one object, no more than 50 external subroutines may be
                               referenced.
                  </p> 
                           
                  <div><a name="subroutine"></a></div>
                  <div><strong class="floating-title"> Data Available in a
                                  Subroutine</strong></div> 
                           
                  <ul> 
                               
                     <li> 
                                    
                                   
                        <p class="initem"><strong> Inline Subroutines</strong><br> No explicit parameters can be passed from the invoking object to
                                       an inline subroutine. An inline subroutine has access to the currently
                                       established global data area as well as the local data area defined within the
                                       same object module.
                        </p> 
                                  
                     </li> 
                               
                     <li> 
                                    
                                   
                        <p class="initem"><strong> External Subroutines </strong><br>An external subroutine has access to the currently established
                                       global data area. Moreover parameters can be passed with the
                                       <code>PERFORM</code> statement from the invoking object to the external
                                       subroutine (see <var>operand2</var>); thus, you may reduce the
                                       size of the global data area.
                        </p> 
                                  
                     </li> 
                              
                  </ul> 
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th nowrap> <a name="operand2_perform"></a>
                   <var>operand2</var>  
               </th> 
                       
               <td colspan="2"> 
                  
                  <div><strong class="floating-title"> Passing Parameters to the External Subroutine:
                                  </strong></div> 
                           
                  <p>When an external subroutine is invoked with the
                               <code>PERFORM</code> statement, one or more parameters
                               (<var>operand2</var>) can be passed with the
                               <code>PERFORM</code> statement from the invoking object to the external
                               subroutine. For an inline subroutine, <var>operand2</var>
                               cannot be specified.
                  </p> 
                           
                  <p>If parameters are passed, the structure of the parameter list must
                               be defined in a <a href="defineda.htm#defineda"><code>DEFINE
                                     DATA</code></a> statement.
                  </p> 
                           
                  <p>By default, the parameters are passed "by reference",
                               that is, the data are transferred via address parameters, the parameter values
                               themselves are not moved. However, it is also possible to pass parameters
                               "by value", that is, pass the actual parameter values. To do so,
                               you define these fields in the <a href="defineda_pda.htm#defineda_pda"><code>DEFINE
                                     DATA PARAMETER</code></a> statement of the subroutine with the option
                               <code>BY VALUE</code> or <code>BY VALUE RESULT</code>.
                  </p> 
                           
                  <ul> 
                               
                     <li> 
                                   
                        <p class="initem">If parameters are passed "by reference" the
                                       following applies: The sequence, format and length of the parameters in the
                                       invoking object must match exactly the sequence, format and length of the
                                       <a href="defineda_pda.htm#defineda_pda"><code>DEFINE DATA PARAMETER</code></a>
                                       structure of the invoked subroutine. The names of the variables in the invoking
                                       object and the subroutine may be different.
                        </p> 
                                  
                     </li> 
                               
                     <li> 
                                   
                        <p class="initem">If parameters are passed "by value" the following
                                       applies: The sequence of the parameters in the invoking object must match
                                       exactly the sequence in the <a href="defineda_pda.htm#defineda_pda"><code>DEFINE DATA
                                             PARAMETER</code></a> structure of the invoked subroutine. Formats and
                                       lengths of the variables in the invoking object and the subroutine may be
                                       different; however, they have to be data transfer compatible. The names of the
                                       variables in the invoking object and the subroutine may be different. If
                                       parameter values that have been modified in the subroutine are to be passed
                                       back to the invoking object, you have to define these fields with <code>BY
                                          VALUE RESULT</code>. With <code>BY VALUE</code> (without <code>RESULT</code>)
                                       it is not possible to pass modified parameter values back to the invoking
                                       object (regardless of the <code>AD</code> specification; see also
                                       <a href="perform.htm#AD_perform">below</a>).
                        </p> 
                                  
                     </li> 
                              
                  </ul> 
                           
                  <p class="note"><strong>Note:</strong><br> With <code>BY VALUE</code>, an internal copy of the parameter
                               values is created. The subroutine accesses this copy and can modify it, but
                               this will not affect the original parameter values in the invoking object. With
                               <code>BY VALUE RESULT</code>, an internal copy is likewise created; however,
                               after termination of the subroutine, the original parameter values are
                               overwritten by the (modified) values of the copy.
                  </p> 
                           
                  <p>For both ways of passing parameters, the following applies:</p> 
                           
                  <ul> 
                               
                     <li> 
                                   
                        <p class="initem">In the parameter data area of the invoked subroutine, a
                                       redefinition of groups is only permitted within a <code>REDEFINE</code>
                                       block.
                        </p> 
                                  
                     </li> 
                               
                     <li> 
                                   
                        <p class="initem">If an array is passed, its number of dimensions and occurrences
                                       in the subroutine's parameter data area must be same as in the
                                       <code>PERFORM</code> parameter list.
                        </p> 
                                  
                     </li> 
                              
                  </ul> 
                           
                  <div><a name="note_operand2_perform"></a></div>
                  <p class="note"><strong>Note:</strong><br> If multiple occurrences of an array
                               that is defined as part of an indexed group are passed with the
                               <code>PERFORM</code> statement, the corresponding fields in the subroutine's
                               parameter data area must not be redefined, as this would lead to the wrong
                               addresses being passed.
                  </p> 
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th rowspan="5" nowrap><a name="AD_perform"></a>AD=
               </th> 
                       
               <td colspan="2"> 
                  
                  <div><strong class="floating-title">Defining Attributes:</strong></div> 
                           
                  <p>If <var>operand2</var> is a variable, you can mark
                               it in one of the following ways:
                  </p> 
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><a name="AD_O_perform"></a> AD=O
               </td> 
                       
               <td> 
                  
                  <p>Non-modifiable, see session parameter
                               <a href="../parms/sp_ad.htm#sp_ad_ad_o"><code>AD=O</code></a>.
                  </p>
                           
                           
                  <p class="note"><strong>Note:</strong><br> Internally, <code>AD=O</code> is processed in the
                               same way as <code>BY VALUE</code> (see
                               <a href="perform.htm#note_operand2_perform">Note</a> under
                               <var>operand2</var>).
                  </p>
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><a name="AD_M_perform"></a> AD=M
               </td> 
                       
               <td> 
                  
                  <p>Modifiable, see session parameter
                               <a href="../parms/sp_ad.htm#sp_ad_ad_m"><code>AD=M</code></a>.
                  </p>
                           
                           
                  <p>This is the default setting.</p>
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td><a name="AD_A_perform"></a> AD=A
               </td> 
                       
               <td>Input only, see session parameter
                  <a href="../parms/sp_ad.htm#sp_ad_ad_a"><code>AD=A</code></a>.
               </td>
                       
                      
            </tr> 
                   
            <tr> 
                       
               <td colspan="2">If
                  <var>operand2</var> is a constant, <code>AD</code>
                  cannot be explicitly specified. For constants, <code>AD=O</code>
                           always applies. 
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th nowrap> <a name="nX_perform"></a>
                   <var>n</var>X 
               </th> 
                       
               <td colspan="2"> 
                  
                  <div><strong class="floating-title"> Specifying Parameters to be Skipped:
                                  </strong></div> 
                           
                  <p>With the notation <code><var>n</var>X</code> you
                               can specify that the next <var>n</var> parameters are to be
                               skipped (for example, <code>1X</code> to skip the next parameter, or
                               <code>3X</code> to skip the next three parameters); this means that for the
                               next <var>n</var> parameters no values are passed to the
                               external subroutine.
                  </p> 
                           
                  <p>A parameter that is to be skipped must be defined with the keyword
                               <a href="defineda_pda.htm#OPTIONAL"><code>OPTIONAL</code></a> in the
                               subroutine's <a href="defineda_pda.htm#defineda_pda"><code>DEFINE DATA
                                     PARAMETER</code></a> statement. <code>OPTIONAL</code> means that a value
                               can - but need not - be passed from the invoking object to such a
                               parameter.
                  </p> 
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="perform.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="perform_exa"></a></div> 
         
      <h2> Examples </h2>
      <ul>
         <li>
            <p class="initem"><a href="perform.htm#Example_1_perform">Example 1 - PERFORM as Inline Subroutine</a></p>
         </li>
         <li>
            <p class="initem"><a href="perform.htm#Example_2_perform">Example 2 - PERFORM as External Subroutine</a></p>
         </li>
      </ul>
      <div><a name="Example_1_perform"></a></div> 
          
      <h3>Example 1 - PERFORM as Inline Subroutine</h3> 
           
           <pre class="verbatim">** Example 'PEREX1': PERFORM   (as inline subroutine)                   
************************************************************************
DEFINE DATA LOCAL                                                       
1 EMPLOY-VIEW VIEW OF EMPLOYEES                                         
  2 NAME                                                                
  2 ADDRESS-LINE  (A20/2)                                               
  2 PHONE                                                               
*                                                                       
1 #ARRAY    (A75/1:4)                                                   
1 REDEFINE #ARRAY                                                       
  2 #ALINE  (A25/1:4,1:3)                                               
1 #X        (N2) INIT &lt;1&gt;                                               
1 #Y        (N2) INIT &lt;1&gt;                                               
END-DEFINE                                                              
*                                                                       
LIMIT 5                                                                 
FIND EMPLOY-VIEW WITH CITY = 'BALTIMORE'                                
  MOVE NAME            TO #ALINE (#X,#Y)                                
  MOVE ADDRESS-LINE(1) TO #ALINE (#X+1,#Y)                              
  MOVE ADDRESS-LINE(2) TO #ALINE (#X+2,#Y)
  MOVE PHONE           TO #ALINE (#X+3,#Y)
  IF  #Y = 3                              
    RESET INITIAL #Y                      
    /*                                    
    <strong>PERFORM PRINT</strong>                         
    /*                                    
  ELSE                                    
    ADD 1 TO #Y                           
  END-IF                                  
  AT END OF DATA                          
    /*                                    
    <strong>PERFORM PRINT</strong>                         
    /*                                    
  END-ENDDATA                             
END-FIND                                  
*                                         
<strong>DEFINE SUBROUTINE PRINT                   
  WRITE NOTITLE (AD=OI) #ARRAY(*)         
  RESET #ARRAY(*) 
  SKIP 1          
END-SUBROUTINE </strong>   
*                 
END </pre> 
           <p>Output of Program <code>PEREX1</code>:
      </p> <pre class="system-output">JENSON                   LAWLER                   FORREST          
2120 HASSELL             4588 CANDLEBERRY AVE     37 TENNYSON DRIVE
 #206                    BALTIMORE                BALTIMORE        
998-5038                 629-0403                 881-3609         
                                                                   
ALEXANDER                NEEDHAM                                   
409 SENECA DRIVE         12609 BUILDERS LANE                       
BALTIMORE                BALTIMORE                                 
345-3690                 641-9789                                 
</pre> 
          <div><a name="Example_2_perform"></a></div> 
          
      <h3>Example 2 - PERFORM as External Subroutine</h3> 
           
           
      <p>Program containing <code>PERFORM</code> statement:
      </p> 
           <pre class="verbatim">** Example 'PEREX2': PERFORM (as external subroutine)                   
************************************************************************
DEFINE DATA LOCAL                                                       
1 EMPLOY-VIEW VIEW OF EMPLOYEES                                         
  2 NAME                                                                
  2 ADDRESS-LINE  (A20/2)                                               
  2 PHONE                                                               
*                                                                       
1 #ALINE   (A25/1:4,1:3)                                                
1 #X       (N2)            INIT &lt;1&gt;                                     
1 #Y       (N2)            INIT &lt;1&gt;                                     
END-DEFINE                                                              
*                                                                       
LIMIT 5                                                                 
*                                                                       
FIND EMPLOY-VIEW WITH CITY = 'BALTIMORE'                                
  MOVE NAME            TO #ALINE (#X,#Y)                                
  MOVE ADDRESS-LINE(1) TO #ALINE (#X+1,#Y)                              
  MOVE ADDRESS-LINE(2) TO #ALINE (#X+2,#Y)                              
  MOVE PHONE           TO #ALINE (#X+3,#Y)
  IF  #Y = 3                              
    RESET INITIAL #Y                      
    /*                                    
    <strong>PERFORM PEREX2E #ALINE(*,*)</strong>           
    /*                                    
  ELSE                                    
    ADD 1 TO #Y                           
  END-IF                                  
  AT END OF DATA                          
    /*                                    
    <strong>PERFORM PEREX2E #ALINE(*,*)</strong>           
    /*                                    
  END-ENDDATA                             
END-FIND                                  
*                                         
END                          
</pre> 
           <p>External subroutine <code>PEREX3</code> with parameters called by
               program <code>PEREX2</code>:
      </p> 
           <pre class="verbatim">** Example 'PEREX3': SUBROUTINE (external subroutine with parameters)   
************************************************************************
DEFINE DATA                                                             
PARAMETER                                                               
1 #ALINE  (A25/1:4,1:3)                                                 
END-DEFINE                                                              
*                                                                       
DEFINE SUBROUTINE <strong>PEREX2E</strong>
  WRITE NOTITLE (AD=OI) #ALINE(*,*)                                     
  RESET #ALINE(*,*)                                                     
  SKIP 1                                                                
END-SUBROUTINE                                                          
*                                                                       
END                                                                    </pre> 
           <p>Output of Program <code>PEREX2</code>:
      </p><pre class="system-output">JENSON                    LAWLER                    FORREST          
2120 HASSELL              4588 CANDLEBERRY AVE      37 TENNYSON DRIVE
 #206                     BALTIMORE                 BALTIMORE        
998-5038                  629-0403                  881-3609         
                                                                     
ALEXANDER                 NEEDHAM                                    
409 SENECA DRIVE          12609 BUILDERS LANE                        
BALTIMORE                 BALTIMORE                                  
345-3690                  641-9789                                  
</pre> 
           
        
       <div class="noprint">
         <div class="nospy">
            <p><a href="perform.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
            <table border="0" cellpadding="0" cellspacing="0" width="97%">
               <col width="15%">
               <col width="34%">
               <col width="48%">
               <tr>
                  <td class="footer"><img src="../graphics/blank.png" width="3" height="10">&nbsp;<a class="navig" target="_blank" href="http://www.softwareag.com">www.softwareag.com</a>&nbsp;
                  </td>
                  <td nowrap class="footer"><img src="../graphics/blank.png" width="3"><a class="navig" href="../general/legal.htm" target="_blank">Copyright &copy; Software AG 1992-2008. All rights reserved.&nbsp;</a></td>
                  <td class="bottomlinks" align="right" nowrap><img src="../graphics/blank.png" width="3"><a class="navig" target="_blank" href="../fts/search.htm" onclick="window.open('../fts/search.htm', 'fts', 'dependent,width=555,height=420,resizable'); return false">SEARCH</a>
                     &nbsp;&nbsp;<a class="navig" href="javascript:sized_window('../navig/navig.htm')" onclick="document.cookie='sagphdcc=../sm/perform.htm;path=/'; window.open('../navig/navig.htm', 'nvgtr', 'dependent,width=450,height=270,resizable'); return false">CONTENTS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="http://documentation.softwareag.com/natural/nat635unx/pdf/sm/perform.pdf">PDF PAGE</a>
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="../general/print.htm">PDF BOOKS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" href="../overview.htm">HOME</a>
                     &nbsp;&nbsp;<a class="navig" href="sm-over.htm">UP</a>
                     &nbsp;&nbsp;<a class="navig" href="passw.htm">PREV</a>
                     &nbsp;&nbsp;<a class="navig" href="performb.htm">NEXT</a></td>
               </tr>
            </table>
         </div>
      </div>
   </body>
</html>