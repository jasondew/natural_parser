
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   
      <meta name="generator" content="Sagdoc XSL Stylesheets">
      <link rel="stylesheet" type="text/css" href="../general/style2.css"><script language="JavaScript" src="../general/selbox.js"></script><script type="text/javascript" language="javascript">
         <!--
window.name = 'contents';
//--></script><title>Basic Syntactical Items</title>
   </head>
   <body bgcolor="#FFFFFF" background="../graphics/bar.png" style="margin-left: 20px;">
      <div><a name="basic"></a></div>
      <div class="noprint">
         <div class="nospytext">
            <table border="0" cellpadding="0" cellspacing="0" width="97%">
               <col width="15%">
               <col width="34%">
               <col width="48%">
               <tr>
                  <td colspan="2" class="topline"><a name="Top"></a>&nbsp;<img src="../graphics/natux_logo.png"></td>
                  <td class="topline" align="right"><img src="../graphics/sag_logo.png">&nbsp;
                  </td>
               </tr>
               <tr>
                  <td class="header" nowrap><img src="../graphics/blank.png" width="3" height="10"></td>
                  <td class="header"><img src="../graphics/blank.png" width="3">Version&nbsp;6.3.5 for UNIX
                  </td>
                  <td class="toplinks" align="right" nowrap><img src="../graphics/blank.png" width="3"><a class="navig" target="_blank" href="../fts/search.htm" onclick="window.open('../fts/search.htm', 'fts', 'dependent,width=555,height=420,resizable'); return false">SEARCH</a>
                     &nbsp;&nbsp;<a class="navig" href="javascript:sized_window('../navig/navig.htm')" onclick="document.cookie='sagphdcc=../sm/basic.htm;path=/'; window.open('../navig/navig.htm', 'nvgtr', 'dependent,width=450,height=270,resizable'); return false">CONTENTS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="http://documentation.softwareag.com/natural/nat635unx/pdf/sm/basic.pdf">PDF PAGE</a>
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="../general/print.htm">PDF BOOKS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" href="../overview.htm">HOME</a>
                     &nbsp;&nbsp;<a class="navig" href="sql-over.htm">UP</a>
                     &nbsp;&nbsp;<a class="navig" href="common.htm">PREV</a>
                     &nbsp;&nbsp;<a class="navig" href="natview.htm">NEXT</a></td>
               </tr>
            </table>
         </div>
      </div>
      <div class="nospytext" style="margin-top:0.25in;">
         <div><span class="module">&nbsp;&#8212;&nbsp;&nbsp;Statements&nbsp;&nbsp;&#8212;</span></div>
      </div> 
        
      <div class="nospytext">
         <h1> Basic Syntactical Items </h1>
      </div> 
         
         
      <p>This document describes basic syntactical items, which are not
             explained any further within the individual SQL statement descriptions.
      </p> 
         
      <p>This document covers the following topics:</p>
         
      <ul>
         <li>
            <p class="initem"><a href="basic.htm#Constants">Constants</a></p>
         </li>
         <li>
            <p class="initem"><a href="basic.htm#Names">Names</a></p>
         </li>
         <li>
            <p class="initem"><a href="basic.htm#Parameters_basic">Parameters</a></p>
         </li>
         <li>
            <p class="initem"><a href="basic.htm#nat_sql_format_conv">Natural Formats and SQL Data Types</a></p>
         </li>
      </ul> 
        
      <hr> 
        
      <div><a name="Constants"></a></div> 
         
      <h2> 
             <a name="x178"></a>Constants
      </h2> 
          
          
      <p>The constants used in the syntactical descriptions of the Natural SQL
              statements are:
      </p> 
          
      <ul> 
              
         <li> 
                  
            <p class="initem"> <a href="basic.htm#constant_basic">
                         <var>constant</var></a></p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem"> <a href="basic.htm#integer_basic">
                         <var>integer</var></a></p> 
                 
         </li> 
             
      </ul> 
          
      <p>These items are described below.</p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <th nowrap> <a name="constant_basic"></a>
                   <var>constant</var> 
               </th> 
                       
               <td> The item <var>constant</var> always refers to a
                  Natural constant. 
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th nowrap> <a name="integer_basic"></a>
                   <var>integer</var> 
               </th> 
                       
               <td> The item <var>integer</var> always represents
                  an integer constant. 
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <p class="note"><strong>Note:</strong><br> If the character for decimal point notation (session parameter
              <a href="../parms/dc.htm"><code>DC</code></a>) is set to
              a comma (,), any specified numeric constant must not be followed directly by a
              comma, but must be separated from it by a blank character; otherwise an error
              or wrong results occur.
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%">
         <colgroup>
            <col width="49%">
            <col width="49%">
         </colgroup> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th> Invalid Syntax: </th> 
                       
               <th> Valid Syntax: </th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td nowrap> 
                  <pre class="verbatim">VALUES (1,'A')    leads to a syntax error 
VALUES (1,2,3)    leads to wrong results</pre> </td> 
                       
               <td> 
                  <pre class="verbatim">VALUES (1 ,'A') 
VALUES (1 ,2 ,3)</pre> </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
        
        
      <div class="noprint">
         <p><a href="basic.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="Names"></a></div> 
         
      <h2> 
             <a name="x179"></a> Names
      </h2> 
          
          
      <p>The names used in the syntactical descriptions of the Natural SQL
              statements are:
      </p> 
          
      <ul> 
              
         <li> 
                  
            <p class="initem"> <a href="basic.htm#authorization-identifier">
                         <var>authorization-identifier</var></a></p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem"> <a href="basic.htm#ddm-name_basic">
                         <var>ddm-name</var></a></p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem"> <a href="basic.htm#view-name_basic">
                         <var>view-name</var></a></p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem"> <a href="basic.htm#column-name">
                         <var>column-name</var></a></p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem"> <a href="basic.htm#table-name">
                         <var>table-name</var></a></p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem"> <a href="basic.htm#correlation-name_basic">
                         <var>correlation-name</var></a></p> 
                 
         </li> 
             
      </ul> 
          
      <p>These items are described below.</p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <th nowrap>
                  <a name="authorization-identifier"></a>
                           <var>authorization-identifier</var> 
               </th> 
                       
               <td> The item <var>authorization-identifier</var>,
                  which is also called creator name, is used to qualify database tables and
                           views. See also <a href="basic.htm#ai_table_name">below</a>. 
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th nowrap> <a name="ddm-name_basic"></a>
                   <var>ddm-name</var> 
               </th> 
                       
               <td> The item <var>ddm-name</var> always refers to
                  the name of a Natural DDM as created with the Natural utility SYSDDM. 
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th nowrap> <a name="view-name_basic"></a>
                   <var>view-name</var> 
               </th> 
                       
               <td> The item <var>view-name</var> always refers to
                  the name of a Natural view as defined in the <a href="defineda.htm#defineda"><code>DEFINE DATA</code></a> statement. 
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th nowrap> <a name="column-name"></a>
                   <var>column-name</var> 
               </th> 
                       
               <td> The item <var>column-name</var> always refers
                  to the name of a physical database column. 
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th nowrap> <a name="table-name"></a>
                   <var>table-name</var> 
               </th> 
                       
               <td> 
                  
                  <p>Syntax:</p> 
                           <pre class="verbatim"><a href="basic.htm#ai_table_name"><var>authorization-identifier</var></a> <var>ddm-name</var></pre> 
                           <p>The item <var>table-name</var> in this section is
                     used to reference both SQL base tables and SQL viewed tables. A Natural DDM
                     must have been created for a table to be used. The name of such a DDM must be
                               the same as the corresponding database table name or view name.
                  </p> 
                           
                  <div><strong class="floating-title"><a name="ai_table_name"></a><var>authorization-identifier</var></strong></div>
                           
                           
                  <p>There are two ways of specifying the
                               <var>authorization-identifier</var> of a database table or
                               view.
                  </p> 
                           
                  <p>One way corresponds to the standard SQL syntax, in which the
                               <var>authorization-identifier</var> is separated from the table
                               name by a period. Using this form, the name of the DDM must be the same as the
                               name of the database table without the
                               <var>authorization-identifier</var>. 
                  </p> 
                           
                  <p>Example:</p> 
                           <pre class="verbatim">DEFINE DATA LOCAL 
01 PERS VIEW OF <strong>PERSONNEL</strong> 
   02 NAME 
   02 AGE 
END-DEFINE 
SELECT * 
  INTO VIEW PERS 
  FROM SQL.<strong>PERSONNEL</strong> 
...</pre> 
                           <p>Alternatively, you can define the
                               <var>authorization-identifier</var> as part of the DDM name.
                               The DDM name then consists of the
                               <var>authorization-identifier</var> and the database table name
                               separated by a hyphen (-). The hyphen between the
                               <var>authorization-identifier</var> and the table name is
                               converted internally into a period.
                  </p> 
                           
                  <p class="note"><strong>Note:</strong><br>This form of DDM name can also be used with a
                               <a href="find.htm#find"><code>FIND</code></a> or
                               <a href="read.htm#read"><code>READ</code></a> statement, because it
                               conforms to the DDM naming conventions applicable to these statements.
                  </p> 
                           
                  <p>Example:</p> 
                           <pre class="verbatim">DEFINE DATA LOCAL 
01 PERS VIEW OF <strong>SQL-PERSONNEL</strong> 
   02 NAME 
   02 AGE 
END-DEFINE 
SELECT * 
  INTO VIEW PERS 
  FROM <strong>SQL-PERSONNEL</strong> 
...</pre> 
                           <p>If the <var>authorization-identifier</var> has been
                               specified neither explicitly nor within the DDM name, it is determined by the
                               SQL database system.
                  </p> 
                           
                  <p>In addition to being used in <a href="select_sql.htm#select_sql"><code>SELECT</code></a> statements,
                               <var>table-names</var> can also be specified in
                               <a href="delete_sql.htm#delete_sql"><code>DELETE</code></a>,
                               <a href="insert_sql.htm#insert_sql"><code>INSERT</code></a> and
                               <a href="update_sql.htm#update_sql"><code>UPDATE</code></a> statements.
                  </p> 
                           
                  <div><strong class="floating-title">Examples:</strong></div> 
                           <pre class="verbatim">... 
DELETE FROM SQL.PERSONNEL 
  WHERE AGE IS NULL 
 ... 
    
... 
INSERT INTO SQL.PERSONNEL (NAME,AGE) 
  VALUES ('ADKINSON',35) 
... 
    
... 
UPDATE SQL.PERSONNEL 
SET SALARY = SALARY * 1.1 
WHERE AGE &gt; 30 
...</pre> </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th nowrap> <a name="correlation-name_basic"></a>
                   <var>correlation-name</var> 
               </th> 
                       
               <td> 
                  
                  <p>The item <var>correlation-name</var> represents an
                     alias name for a table-name. It can be used to qualify column names; it also
                     serves to implicitly qualify fields in a Natural view when used with the
                               <a href="select_sql.htm#INTO_select_sql"><code>INTO</code></a> clause of the
                               <a href="select_sql.htm#select_sql"><code>SELECT</code></a> statement.
                  </p> 
                           
                  <p>Example:</p> 
                           <pre class="verbatim">DEFINE DATA LOCAL 
01 PERS-NAME    (A20) 
01 EMPL-NAME    (A20) 
01 AGE          (I2) 
END-DEFINE 
... 
SELECT X.NAME , Y.NAME , X.AGE 
  INTO PERS-NAME , EMPL-NAME , AGE 
  FROM SQL-PERSONNEL X , SQL-EMPLOYEES Y 
  WHERE X.AGE = Y.AGE 
END-SELECT 
...</pre>Although in most cases the use of
                           <var>correlation-names</var> is not necessary, they may help to
                           make the statement clearer. 
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
         
        
      <div class="noprint">
         <p><a href="basic.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="Parameters_basic"></a></div> 
         
      <h2> 
             <a name="x180"></a> Parameters
      </h2> 
          
          
      <p> <a name="parameter_basic"></a><var>parameter</var></p> 
           
           
      <table border="0" class="syntax" cellpadding="3">  
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td> <a href="basic.htm#colon_basic">[<code class="keyword">:</code>]</a> <a href="basic.htm#host-variable">
                          <var>host-variable</var></a> [<a href="basic.htm#INDICATOR"><code class="keyword">INDICATOR</code></a>
                           <a href="basic.htm#colon_basic">[<code class="keyword">:</code>]</a><a href="basic.htm#host-variable">
                              <var>host-variable</var></a>] [<a href="basic.htm#LINDICATOR_basic"><code class="keyword">LINDICATOR</code></a>
                           <a href="basic.htm#colon_basic">[<code class="keyword">:</code>]</a>
                           <a href="basic.htm#host-variable">
                              <var>host-variable</var></a>] 
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <p>The syntax items are described below:</p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <th nowrap> <a name="host-variable"></a>
                   <var>host-variable</var> 
               </th> 
                       
               <td> 
                  
                  <p>A <var>host-variable</var> is a Natural
                     user-defined variable (no system variable) which is referenced in an SQL
                     statement. It can be either an individual field or defined as part of a Natural
                               view.
                  </p> 
                           
                  <p>When defined as a receiving field (for example, in the
                               <code>INTO</code> clause), a <var>host-variable</var>
                               identifies a variable to which a value is assigned by the database system.
                  </p> 
                           
                  <p>When defined as a sending field (for example, in the
                               <code>WHERE</code> clause), a <var>host-variable</var>
                               specifies a value to be passed from the program to the database system.
                  </p> 
                           
                  <p>See also <a href="basic.htm#nat_sql_format_conv">Natural
                                  Formats and SQL Data Types</a>.
                  </p> 
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th nowrap> <a name="colon_basic"></a>[:] 
               </th> 
                       
               <td> 
                  
                  <div><strong class="floating-title">Colon:</strong></div> 
                           
                  <p>To comply with SQL standards, a host-variable can also be prefixed
                     by a colon (:). When used with flexible SQL, host-variables must be qualified
                               by colons.
                  </p> 
                           
                  <p> Example:</p> 
                           <pre class="verbatim">SELECT NAME INTO :#NAME FROM PERSONNEL 
WHERE AGE = :VALUE</pre> 
                           <p>The colon is always required if the variable name is identical to
                               an SQL reserved word. In a context in which either a host-variable or a column
                               can be referenced, the use of a name without a colon is interpreted as a
                               reference to a column.
                  </p> 
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th nowrap> <a name="INDICATOR"></a>INDICATOR 
               </th> 
                       
               <td> 
                  
                  <div><strong class="floating-title">INDICATOR Clause:</strong></div> 
                           
                  <p>The <code>INDICATOR</code> clause is an optional feature to
                     distinguish between a "null" value (that is, no value at all) and
                               the actual values <code>0</code> or "blank".
                  </p> 
                           
                  <p>When specified with a receiving
                               <var>host-variable</var> (target field), the <code>INDICATOR
                                  <var>host-variable</var></code> (null indicator field) serves
                               to find out whether a column to be retrieved is "null".
                  </p> 
                           
                  <p> Example:</p> 
                           <pre class="verbatim">DEFINE DATA LOCAL 
1 NAME      (A20) 
1 NAMEIND   (I2) 
END-DEFINE 
SELECT * 
  INTO NAME INDICATOR NAMEIND 
...</pre> 
                           <p>In this example, <code>NAME</code> represents the receiving
                               <var>host-variable</var> and <code>NAMEIND</code> the null
                               indicator field.
                  </p> 
                           
                  <p>If a null indicator field has been specified and the column to be
                               retrieved is null, the value of the null indicator field is negative and the
                               target field is set to <code>0</code> or "blank" depending on its
                               data type. Otherwise, the value of the null indicator field is greater than or
                               equal to <code>0</code>.
                  </p> 
                           
                  <p>When specified with a sending
                               <var>host-variable</var> (source field), the null indicator
                               field is used to designate a null value for this field.
                  </p> 
                           
                  <p> Example:</p> 
                           <pre class="verbatim">DEFINE DATA LOCAL 
1 NAME      (A20) 
1 NAMEIND   (I2) 
UPDATE ... 
SET NAME = :NAME INDICATOR :NAMEIND 
WHERE ...</pre> 
                           <p>In this example, <code>:NAME</code> represents the sending
                               host-variable and <code>:NAMEIND</code> the null indicator field. By entering a
                               negative value as input for the null indicator field, a null value is assigned
                               to a database column.
                  </p> 
                           
                  <p>An <code>INDICATOR <var>host-variable</var></code>
                               is of format/length I2.
                  </p> 
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <th nowrap> <a name="LINDICATOR_basic"></a>LINDICATOR 
               </th> 
                       
               <td> 
                  
                  <div><strong class="floating-title">LINDICATOR Clause:</strong></div> 
                           
                  <p>The <code>LINDICATOR</code> clause is an optional feature which is
                     used to support columns of varying lengths, for example, <code>VARCHAR</code>
                               or <code>LONG VARCHAR</code> type. 
                  </p> 
                           
                  <p> When specified with a receiving
                               <var>host-variable</var> (target field), the <code>LINDICATOR
                                  <var>host-variable</var></code> (length indicator field)
                               contains the number of characters actually returned by the database into the
                               target field. The target field is always padded with blanks.
                  </p> 
                           
                  <p> If the <code>VARCHAR</code> or <code>LONG VARCHAR</code> column
                               contains more characters than fit in the target field, the length indicator
                               field is set to the length actually returned (that is, the length of the target
                               field) and the null indicator field (if specified) is set to the total length
                               of this column.
                  </p> 
                           
                  <p>Example</p> 
                           <pre class="verbatim">DEFINE DATA LOCAL 
1 ADDRESSLIND (I2) 
1 ADDRESS     (A50/1:6) 
END-DEFINE 
SELECT * 
  INTO :ADDRESS(*) LINDICATOR :ADDRESSLIND 
  ...</pre> 
                           <p>In this example, <code>:ADDRESS(*)</code> represents the target
                               field which receives the first 300 bytes (if available) of the addressed
                               <code>VARCHAR</code> or <code>LONG VARCHAR</code> column, and
                               <code>:ADDRESSLIND</code> represents the length indicator field which contains
                               the number of characters actually returned.
                  </p> 
                           
                  <p> When specified with a sending
                               <var>host-variable</var> (source field), the length indicator
                               field specifies the number of characters of the source field which are to be
                               passed to the database.
                  </p> 
                           
                  <p>Example:</p> 
                           <pre class="verbatim">DEFINE DATA LOCAL 
1 NAMELIND  (I2) 
1 NAME      (A20) 
1 AGE       (I2) 
END-DEFINE 
MOVE  4     TO NAMELIND 
MOVE 'ABC%' TO NAME 
SELECT AGE 
  INTO :AGE 
WHERE NAME LIKE :NAME LINDICATOR :NAMELIND 
  ...</pre> 
                           <p>A <code>LINDICATOR <var>host-variable</var></code>
                               is of format/length I2 or I4. For performance reasons, it should be specified
                               immediately before the corresponding target or source field; otherwise, the
                               field is copied to the temporary storage at runtime.
                  </p> 
                           
                  <p>If the <code>LINDICATOR</code> field is defined as an I2 field, the
                               SQL data type <code>VARCHAR</code> is used for sending or receiving the
                               corresponding column. IF the <code>LINDICATOR
                                  <var>host-variable</var></code> is specified as I4, a large
                               object data type (CLOB/BLOB) is used.
                  </p> 
                           
                  <p>If the field is defined as <code>DYNAMIC</code>, the column is read
                               in an internal loop up to its real length. The <code>LINDICATOR</code> field
                               and <code>*LENGTH</code> are set to this length. In case of a
                               fixed length field, the column is read up to the defined length. In both cases,
                               the field is written up to the value defined in the <code>LINDICATOR</code>
                               field.
                  </p> 
                           
                  <p>Let a fixed length field be defined with a <code>LINDICATOR</code>
                               field specified as I2. If the <code>VARCHAR</code> column contains more
                               characters than fit into this fixed length field, the length indicator field is
                               set to the length actually returned and the null indicator field (if specified)
                               is set to the total length of this column (retrieval). This is not possible for
                               fixed length fields &gt;= 32KB (length does not fit into null indicator
                               field).
                  </p> 
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
         
        
      <div class="noprint">
         <p><a href="basic.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div>
      <div><a name="nat_sql_format_conv"></a></div> 
         
      <h2> 
             <a name="x181"></a>Natural Formats and SQL Data Types
      </h2> 
          
          
      <p>The Natural format of a host-variable is converted to an SQL data type
              according to the following table:
      </p> 
           
           
      <table border="1" class="color" cellpadding="3" width="97%"> 
                
               
         <thead align="left" valign="top"> 
                   
            <tr> 
                       
               <th align="left"> Natural Format/Length </th> 
                       
               <th align="left"> SQL Data Type </th> 
                      
            </tr> 
                  
         </thead> 
               
         <tbody align="left" valign="top"> 
                   
            <tr> 
                       
               <td>A<var>n</var> 
               </td> 
                       
               <td>CHAR (<var>n</var>)
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>B2</td> 
                       
               <td>SMALLINT</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>B4</td> 
                       
               <td>INT</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>B<var>n</var>; <var>n</var> not
                  equal 2 or 4
               </td> 
                       
               <td>CHAR (<var>n</var>)
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>F4</td> 
                       
               <td>REAL</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>F8</td> 
                       
               <td>DOUBLE PRECISION</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>I2</td> 
                       
               <td>SMALLINT</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>I4</td> 
                       
               <td>INT</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>N<var>nn.m</var> 
               </td> 
                       
               <td>NUMERIC
                  (<var>nn</var>+<var>m,m</var>)
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>P<var>nn.m</var> 
               </td> 
                       
               <td>NUMERIC
                  (<var>nn</var>+<var>m,m</var>)
               </td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>T</td> 
                       
               <td>TIME</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>D</td> 
                       
               <td>DATE</td> 
                      
            </tr> 
                   
            <tr> 
                       
               <td>G<var>n</var>; for view fields only
               </td> 
                       
               <td>GRAPHIC (<var>n</var>)
               </td> 
                      
            </tr> 
                  
         </tbody> 
              
      </table> 
           
          
      <p>Natural does not check whether the converted SQL data type is compatible
              to the database column. Except for fields of format N, no data conversion is
              done.
      </p> 
          
      <p>In addition, the following extensions to standard Natural formats are
              available with Natural SQL:
      </p> 
          
      <ul> 
              
         <li> 
                  
            <p class="initem">A one-dimensional array of format A can be used to support
                      alphanumeric columns longer than 253 bytes. This array must be defined
                      beginning with index 1 and can only be referenced by using an asterisk (*) as
                      the index. The corresponding SQL data type is <code>CHAR
                  (<var>n</var>)</code>, where <var>n</var> is
                      the total number of bytes in the array.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">A special host variable indicated by the keyword
                      <code>LINDICATOR</code> can be used to support variable-length columns. The
                      corresponding SQL data type is <code>VARCHAR
                  (<var>n</var>)</code>; see also the
                      <a href="basic.htm#LINDICATOR_basic"><code>LINDICATOR</code></a>
                      clause.
            </p> 
                 
         </li> 
              
         <li> 
                  
            <p class="initem">The Natural formats date (D) and time (T) can be used with Entire
                      Access and will be converted into the corresponding database-dependent formats
                      (see the Entire Access documentation for details)
            </p> 
                 
         </li> 
               
             
      </ul> 
          
      <p>A sending field specified as one-dimensional array without a
              <code>LINDICATOR</code> field is converted into the SQL data type
              <code>VARCHAR</code>. The length is the total number of bytes in the array, not
              taking into account trailing blanks.
      </p> 
          
        
       
      <div class="noprint">
         <div class="nospy">
            <p><a href="basic.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
            <table border="0" cellpadding="0" cellspacing="0" width="97%">
               <col width="15%">
               <col width="34%">
               <col width="48%">
               <tr>
                  <td class="footer"><img src="../graphics/blank.png" width="3" height="10">&nbsp;<a class="navig" target="_blank" href="http://www.softwareag.com">www.softwareag.com</a>&nbsp;
                  </td>
                  <td nowrap class="footer"><img src="../graphics/blank.png" width="3"><a class="navig" href="../general/legal.htm" target="_blank">Copyright &copy; Software AG 1992-2008. All rights reserved.&nbsp;</a></td>
                  <td class="bottomlinks" align="right" nowrap><img src="../graphics/blank.png" width="3"><a class="navig" target="_blank" href="../fts/search.htm" onclick="window.open('../fts/search.htm', 'fts', 'dependent,width=555,height=420,resizable'); return false">SEARCH</a>
                     &nbsp;&nbsp;<a class="navig" href="javascript:sized_window('../navig/navig.htm')" onclick="document.cookie='sagphdcc=../sm/basic.htm;path=/'; window.open('../navig/navig.htm', 'nvgtr', 'dependent,width=450,height=270,resizable'); return false">CONTENTS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="http://documentation.softwareag.com/natural/nat635unx/pdf/sm/basic.pdf">PDF PAGE</a>
                     &nbsp;&nbsp;<a class="navig" target="_blank" href="../general/print.htm">PDF BOOKS</a>&nbsp;&nbsp;&nbsp;|
                     &nbsp;&nbsp;<a class="navig" href="../overview.htm">HOME</a>
                     &nbsp;&nbsp;<a class="navig" href="sql-over.htm">UP</a>
                     &nbsp;&nbsp;<a class="navig" href="common.htm">PREV</a>
                     &nbsp;&nbsp;<a class="navig" href="natview.htm">NEXT</a></td>
               </tr>
            </table>
         </div>
      </div>
   </body>
</html>