
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   
      <meta name="generator" content="Sagdoc XSL Stylesheets">
      <link rel="stylesheet" type="text/css" href="../general/style2.css"><script type="text/javascript" language="javascript">
         <!--
window.name = 'contents';
//--></script><title>Glossary</title>
   </head>
   <body bgcolor="#FFFFFF" background="../graphics/bar.png" style="margin-left: 20px;">
      <div><a name="glossary"></a></div>
      <div class="noprint">
         <div class="nospytext">
            <table border="0" cellpadding="0" cellspacing="0" width="97%">
               <col width="15%">
               <col width="34%">
               <col width="48%">
               <tr>
                  <td colspan="2" class="topline"><a name="Top"></a>&nbsp;<img src="../graphics/natux_logo.png"></td>
                  <td class="topline" align="right"><img src="../graphics/sag_logo.png">&nbsp;
                  </td>
               </tr>
               <tr>
                  <td class="header" nowrap><img src="../graphics/blank.png" width="3" height="10"></td>
                  <td class="header"><img src="../graphics/blank.png" width="3">Version&nbsp;6.3.5 for UNIX
                  </td>
                  <td class="toplinks" align="right" nowrap><img src="../graphics/blank.png" width="3"></td>
               </tr>
            </table>
         </div>
      </div>
      <div class="nospytext" style="margin-top:0.25in;"></div>
      <div class="nospytext">
         <h1>Glossary</h1>
      </div> 
        
        
      <p><strong>Acknowledgements, Trademarks,
               Disclaimer</strong></p> 
        
      <p>In addition to Natural-specific product terminology and certain general
            computing terms, this glossary also contains terms and descriptions from the
            International Business Machines Corporation (IBM). Excerpts from the following
            IBM-copyrighted publication are reprinted by permission of IBM and are marked
            with an asterisk (*):
      </p> 
        
      <p class="mini-list"> 
            <a href="http://www-306.ibm.com/software/globalization/terminology/index.html" target="_blank">Terminology</a>, Copyright &copy;
             International Business Machines Corporation.  
           
      </p> 
        
      <p>Furthermore, this glossary also contains terms and descriptions from the
            Unicode Consortium. Excerpts from the following copyrighted publication are
            reprinted by permission of Unicode, Inc.:
      </p> 
        
      <p class="mini-list"> 
            <a href="http://www.unicode.org/glossary/" target="_blank">Glossary of Unicode Terms</a>,
             Copyright &copy; Unicode, Inc. 
           
      </p> 
        
      <p>The name Software AG and all Software AG product names are either
            trademarks or registered trademarks of Software AG. All other company names,
            product names, operating system names and related terms mentioned in this
            glossary may be trademarks of their respective owners. 
      </p> 
        
      <p>The descriptions contained in this glossary are provided as a general
            orientation for the convenience of our users. Software AG assumes no
            responsibility for the accuracy or completeness of the information herein
            provided.
      </p> 
       
      <div class="noprint">
         <p class="linklist"> 
            [&nbsp;
            &nbsp;<a href="glossary.htm#A">A</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#B">B</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#C">C</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#D">D</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#E">E</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#F">F</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#G">G</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#H">H</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#I">I</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#J">J</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#K">K</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#L">L</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#M">M</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#N">N</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#O">O</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#P">P</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#R">R</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#S">S</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#T">T</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#U">U</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#V">V</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#W">W</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#X">X</a>&nbsp;&nbsp;|&nbsp;
            &nbsp;<a href="glossary.htm#Z">Z</a>&nbsp;&nbsp;]
         </p>
      </div>
      <hr> 
       <a name="A"></a><div><a name="a"></a></div> 
        
      <h2>A</h2> 
        
      <dl> 
             
             
         <dt><a name="abstract"><strong>Abstract</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Each object in Predict can have an abstract
                     providing short comments on the object. An abstract can have up to 16 lines of
                     up to 30 characters. In earlier versions of Predict, an abstract was referred
                     to as "Comments" or "Short comments". The name was
                     changed for reasons of compatibility with other Software AG products.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Activation_Policies"><strong>Activation Policies</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Activation policy is an attribute of a NaturalX class that is to be
                     registered as a DCOM class. It defines whether the class may share a Natural
                     session with other classes.
            </p> 
                 
            <p class="definition">NaturalX combines the different options supported by
                     <a href="glossary.htm#DCOM">DCOM</a> in the form of the following three
                     activation policies:
            </p> 
                 
            <ul> 
                     
               <li> 
                         
                  <p class="initem"> ExternalMultiple </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem"> ExternalSingle </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem"> InternalMultiple </p> 
                        
               </li> 
                    
            </ul> 
                 
            <p class="definition">The activation policy of a class can be set as part of the
                     <code>REGISTER</code> command, in the <code>DEFINE
                  CLASS</code> statement or with the profile parameter
                     <code>ACTPOLICY</code>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Active_Help"><strong>Active Help</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> If parameter values needed to execute a function are
                     missing, active help is given in the form of a selection window containing all
                     possible values. This applies to all input fields marked with an asterisk.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Active Reference Data</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> See <a href="glossary.htm#Xref_Data"><dfn>Xref
                           Data</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Active Retrieval</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Active retrieval functions retrieve information from
                     Xref data and from Predict documentation objects. Comparison of documentation
                     and implementation of a system is possible.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="actx_comp"><strong>ActiveX Component</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows:</em> Standardized Microsoft interface to external
                     programming components, for example, business logic or calculations. ActiveX
                     components have no user interface.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>ActiveX Control</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows:</em> A standardized programming component with a user
                     interface e.g. radio buttons or list boxes, which can be used in Natural
                     dialogs. Natural can get a selection list of the ActiveX controls available
                     from the registry. You can view the default settings in the Property pages
                     using the Component Browser.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Adabas"><strong>Adabas</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Software AG's high-performance, multi-threaded, adaptable database
                     management system for multiple platforms.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Address Space</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Area in which Natural runs.</p> 
                
         </dd> 
             
             
             
         <dt><strong>AIV = Application-Independent Variable</strong></dt> 
             
         <dd> 
                 
            <ol> 
                     
               <li> 
                         
                  <p class="initem"><em>Mainframe:</em> A Natural system command which lists all active
                             AIVs. .
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">A Natural variable used to assign values across programs.
                             See the section <a href="../pg/pg_defi_dv.htm">User-Defined Variables</a>
                             (in the <cite>Programming Guide</cite>) and the
                             <a href="../pg/pg_defi_dv.htm"><code>DEFINE
                           DATA</code></a> statement (in the <cite>Statements</cite>
                             documentation).
                  </p> 
                        
               </li> 
                    
            </ol> 
                
         </dd> 
             
             
             
         <dt><strong>Ajax = Asynchronous JavaScript and XML</strong></dt>
         <dd> 
                 
            <p class="definition">A method of building interactive browser-based applications that
                     process user requests immediately.
            </p> 
                 
            <p class="definition"> See also <a href="glossary.htm#njx"><dfn>Natural for
                           Ajax</dfn></a>.
            </p>
         </dd> 
             
             
             
         <dt><a name="ALF"><strong>ALF = Access Layer Format</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Represents a predefined, database system independent
                     format with which you can exchange data between Predict Case and Natural
                     Engineering Workbench. All the data you wish to transfer with the Predict
                     Coordinator must first be put in a transfer medium.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>AMODE = Addressing Mode</strong></dt> 
             
         <dd> 
                 
            <p class="definition">The number of bits (24 or 31) of&nbsp; a virtual address used during program
                     execution.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>API</strong></dt> 
             
         <dd> 
                 
            <p class="definition">See <a href="glossary.htm#api"><dfn>Application Programming
                           Interface</dfn></a> below.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="AppID"><strong>AppID</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">In the Windows system registry, each application is represented by
                     an&nbsp;AppID. The AppID is a globally unique ID, which can be found under the
                     registry key HKEY_CLASSES_ROOT\AppID. <a href="glossary.htm#DCOM">DCOM</a>
                     uses the AppID to group classes to applications. Also, for example, security
                     settings are defined on the basis of the AppID. Natural creates for each
                     NaturalX server ID one AppID in the registry.
            </p> 
                 
            <p class="definition">For further information, see the section <a href="glossary.htm#Server_ID"><dfn>Server ID</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="appl"><strong>Application</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A logical view of a collection of interconnected programming elements.
                     Together, they form a functional unit which covers the business logic for a
                     particular business problem. An application consists of a set of libraries and
                     their Natural objects and/or sub-applications (business objects). The contents
                     of a library (Natural objects, resources, etc.) can belong to different
                     applications. Information concerning an application (the application
                     description) is held in the development server file which is accessible from
                     all platforms.
            </p> 
                 
            <p class="definition">There are two types of application:</p> 
                 
            <ul> 
                     
               <li> 
                          
                         
                  <p class="initem"><strong> Base Applications</strong><br> Base applications consist of one application on one platform, for
                             example, a theater ticket booking system.
                  </p> 
                        
               </li> 
                     
               <li> 
                          
                         
                  <p class="initem"><strong> Compound Applications</strong><br>Compound applications consist of multiple base applications, for
                             example, a theater administration application combining applications for
                             booking tickets, billing customers and mailing customers with performance
                             information. The base applications can be on multiple platforms.
                  </p> 
                        
               </li> 
                    
            </ul> 
                
         </dd> 
             
             
             
         <dt><a name="appl_desc"><strong>Application Description</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A list of all the elements belonging to an application, stored in the
                     development server file. The database file (at present FDIC on the mainframe)
                     in which application information is physically stored. See
                     <a href="glossary.htm#dev_serv_file"><dfn>Development Server
                           File</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="appl_desc_lay"><strong>Application Description Layer</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">The code which handles access to the application description.</p> 
                
         </dd> 
             
             
             
         <dt><a name="api"><strong>Application Programming Interface (API)</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A programming object that allows the user to access and possibly modify
                     data or to use services that are specific to Natural, a subcomponent or a
                     subproduct. The purpose of an application programming interface is to retrieve
                     or modify information or use services that are not accessible by Natural
                     statements. Application programming interfaces can be invoked from Natural
                     programming objects using <code>CALLNAT</code> or
                     <code>CALL</code> statements, depending on the respective
                     application interface.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="appl_wiz"><strong>Application Wizard</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows:</em> A tool for defining what belongs to a certain
                     application. Dialog boxes guide the user through creating an application
                     description for an existing application.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="appl_work"><strong>Application Workspace</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows:</em> Used to view a visual representation of an
                     application in a tree view. The application workspace shows all elements
                     belonging to the current application.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="ASM"><strong>ASM = Authorized Services Manager</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Provides the following authorized operating system functions for use
                     within Natural:
            </p> 
                 
            <ul> 
                     
               <li> 
                         
                  <p class="initem">propagating Natural buffer pool objects;</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">writing system management facility (<a href="glossary.htm#SMF">SMF</a>) records;
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">holding Natural session information in the Session Information Pool
                             (<a href="glossary.htm#SIP">SIP</a>).
                  </p> 
                        
               </li> 
                    
            </ul> 
                 
            <p class="definition">ASM provides functions via PC routines and runs in its own address
                     space.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Association"><strong>Association</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Predict documentation objects can be linked using
                     associations. Different types of associations are used to link objects of
                     different types. Associations are unidirectional (child and parent
                     association).
            </p> 
                 
            <p class="definition">Additional association types can be defined by the data dictionary
                     administrator using the Metadata Administration functions of Predict.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Asynchronous Natural Session</strong></dt> 
             
         <dd> 
                 
            <p class="definition">An asynchronous Natural session is an "online" session
                     (i.e. running under a TP monitor) which is not associated with any terminal and
                     therefore cannot interact with a terminal user.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Asterisk Notation</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> The wildcard character
                     "*" (an asterisk) can be used to specify input
                     parameters that address groups of values. For example, if
                     "datab*" is entered as an ID, all IDs starting with
                     the characters "datab" are addressed.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Attribute</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Predict documentation objects have attributes
                     describing the object. 
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="aut_obj"><strong>Automation Object</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows:</em> A program which can be used via an automation
                     interface. For further information, see your Microsoft documentation.
            </p> 
                
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="B"></a><div><a name="b"></a></div> 
        
      <h2>B</h2> 
        
      <dl> 
             
             
         <dt><strong>Base Application</strong></dt> 
             
         <dd> 
                 
            <p class="definition">See <a href="glossary.htm#appl"><dfn>Application</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>BMP = Basic Multilingual Plane</strong></dt> 
             
         <dd> 
                 
            <p class="definition"></p> 
                
         </dd> 
             
             
             
         <dt><strong>BMP = Batch Message Processing</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <var>IMS/TM:</var> Programs running asynchronously in
                     batch mode under control of <a href="glossary.htm#IMS_TM">IMS/TM</a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>BOM = Byte Order Mark</strong></dt> 
             
         <dd> 
                 
            <p class="definition"></p> 
                
         </dd> 
             
             
             
         <dt><strong>Bootstrap Module</strong></dt> 
             
         <dd> 
                 
            <p class="definition">A module used to call a program. The bootstrap module provides the
                     environment needed to run the program.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="BLOB"><strong>BLOB</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A BLOB is a "Binary Large Object", in other words, a very
                     large variable.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="BT"><strong>BT = BACKOUT TRANSACTION</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A Natural statement issued to cancel a database transaction and restore
                     the condition of the data before starting the transaction. See also
                     <a href="glossary.htm#transaction"><dfn>Transaction</dfn></a>
                     and <code>END TRANSACTION</code> (<a href="glossary.htm#ET">ET</a>).
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Buffer Pool</strong></dt> 
             
         <dd> 
                 
            <p class="definition">In Natural, this is a storage area used by the Natural nucleus to
                     execute Natural objects (see also <a href="glossary.htm#object_types"><dfn>Object Types</dfn></a>). When a
                     Natural object is requested for execution, it is read from the system file and
                     placed in the buffer pool, where it can be used by several users
                     simultaneously.
            </p> 
                
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="C"></a><div><a name="c"></a></div> 
        
      <h2>C</h2> 
        
      <dl> 
             
             
         <dt><strong>Cache</strong></dt> 
             
         <dd> 
                 
            <p class="definition">A buffer area used to temporarily store copies of data most recently
                     retrieved from the main memory. This avoids unnecessary access to system files
                     and external databases/file systems thus reducing CPU time consumption and
                     speeding up response time.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>CATALOG</strong></dt>
         <dd> 
                 
            <p class="definition">In Natural, the term "catalog" refers to the
                     Natural system command <code>CATALOG</code>. This command
                     compiles (catalogs) source code and stores the generated object code as a
                     cataloged object in a Natural system file. 
            </p>
         </dd> 
             
             
             
         <dt><a name="Cat_Obj"><strong>Cataloged Object</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">In Natural, a cataloged object is the executable (compiled) form of a
                     Natural object. A cataloged object is stored as an object module in a Natural
                     system file.
            </p> 
                 
            <p class="definition"> <em>Mainframe:</em> An object that is cataloged on the mainframe is
                     executable on the mainframe only. On the mainframe, it is possible to optimize
                     a cataloged object using the <a href="glossary.htm#noc">Natural Optimizer
                        Compiler</a>.
            </p> 
                 
            <p class="definition"> <em>Windows/UNIX/OpenVMS:</em> As of Natural Version 5.1, cataloged
                     objects are portable across all Windows, UNIX and OpenVMS platforms supported
                     by Natural (not on the mainframe). It is also possible to specify the
                     <a href="glossary.htm#Endian_Mode">endian mode</a> for a cataloged object
                     if required.
            </p> 
                 
            <p class="definition"> <em>Synonyms:</em> The term "GP" or "generated
                     program" is also used synonymously to cataloged object. In Predict
                     Application Control, the term "loadable" is used.
            </p> 
                 
            <p class="definition">See also <a href="glossary.htm#Source_Obj"><dfn>Source
                           Object</dfn></a>, <a href="glossary.htm#Object"><dfn>Object</dfn></a> and
                     <a href="glossary.htm#object_types"><dfn>Object
                           Types</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="CF"><strong>CF = Coupling Facility</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>z/OS:</em> Hardware component used to control and coordinate
                     access to data shared by the operating systems participating in a
                     <a href="glossary.htm#sysplex">Sysplex</a> environment.&nbsp;The CF is used by
                     the Authorized Services Manager (<a href="glossary.htm#ASM">ASM</a>) and
                     the <a href="glossary.htm#Roll_Server">Roll Server</a> to communicate in a
                     Sysplex environment.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>CGI = Common Gateway Interface</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Used by Natural Web Interface to provide Internet services in
                     Natural.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Child</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Associations are used to document how Predict
                     objects are related to other Predict objects. An association is established by
                     linking objects to an object either as child or parent. For example, a field is
                     the child of a file; a file is the child of a database.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="CICS"><strong>CICS = Customer Information Control System</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>z/OS and z/VSE</em>: IBM's online transaction processing
                     system.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>CICSplex = CICS Complex</strong></dt> 
             
         <dd> 
                 
            <p class="definition">A set of interconnected <a href="glossary.htm#CICS">CICS</a>
                     regions acting as resource managers, and combining to provide a set of coherent
                     services for a customer's business needs.<a name="SPTGLE-ACF"></a>*
                     
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Class</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Natural classes encapsulate data structures (objects) with
                     corresponding functionality (methods). See also
                     <a href="glossary.htm#naturalxclass"><dfn>NaturalX
                           Class</dfn></a>.
            </p> 
                 
            <p class="definition">The internal structure of the objects of a class object is defined with
                     a data area (object data area). The methods of a class are implemented as
                     subprograms.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="class_buil"><strong>Class Builder</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows:</em> Supports the definition and implementation of
                     NaturalX and DCOM component classes as Natural classes. A Natural class can be
                     composed of various components: Natural objects (for example, an object data
                     area) or objects which exist only in the class source (for example, interface
                     components). The Class Builder represents each component of the class in the
                     form of a node. By selecting these nodes, the class and its components can be
                     managed in a context-sensitive manner.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Class_GUID"><strong>Class GUID</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">If a NaturalX class is to be registered as a <a href="glossary.htm#DCOM">DCOM</a> class, a globally unique ID (GUID) must be
                     defined for the class, to make sure it can be unambiguously identified in a
                     network. In Natural, a GUID is assigned to a class in the ID clause of the
                     <code>DEFINE CLASS</code> statement. A GUID is represented by an
                     alphanumeric constant which can be generated in the data area editor. The
                     Natural Studio Class Builder automatically assigns a new GUID to each new
                     class.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Class_Name"><strong>Class Name</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">The name defined in the <var>class-name</var> operand
                     in the <code>DEFINE CLASS</code> statement. This name is used in
                     the <code>CREATE OBJECT</code> statement to create objects of
                     that class. See also
                     <a href="../sm/definecl.htm"><code>DEFINE
                     CLASS</code></a> in the <cite>Statements</cite>
                     documentation.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Class_Module_Name"><strong>Class Module Name</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">The name of the Natural module in which a Natural class is defined.</p>
                 
                
         </dd> 
             
             
             
         <dt><a name="client_stub"><strong>Client Stub</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">See <a href="glossary.htm#rpc_stub"><dfn>RPC
                           Stub</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="CLOB"><strong>CLOB</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A CLOB is a "character large object".</p> 
                
         </dd> 
             
             
             
         <dt><a name="cluster"><strong>Cluster</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>VSAM:</em> A dataset defined to VSAM. A cluster can be a
                     key-sequenced dataset (<a href="glossary.htm#KSDS">KSDS</a>), an
                     entry-sequenced dataset (<a href="glossary.htm#ESDS">ESDS</a>), or a
                     relative-record dataset (<a href="glossary.htm#RRDS">RRDS</a>).*
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="CMS"><strong>CMS = Conversational Monitor System</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>VM:</em> A virtual machine operating system that provides general
                     interactive time sharing, problem solving, and program development
                     capabilities, and operates only under control of the <a href="glossary.htm#VM">VM</a> control program.*
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="code_point"><strong>Code Point</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Any value in the Unicode code space, i.e., U+000000 - U+10FFFF.</p> 
                
         </dd> 
             
             
             
         <dt><strong>Code Page</strong></dt> 
             
         <dd> 
                 
            <p class="definition">See also <a href="glossary.htm#unicode"><dfn>Unicode</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Code Unit</strong></dt> 
             
         <dd> 
                 
            <p class="definition">The minimal bit combination that can represent a unit of encoded text
                     for processing or interchange.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="COM"><strong>COM = Component Object Model</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Microsoft's framework for developing and supporting program component
                     objects. COM provides a set of interfaces allowing clients and servers to
                     communicate within the same computer. Components from different machines can be
                     combined using <a href="glossary.htm#DCOM">DCOM</a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="compiler"><strong>Compiler</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">The Natural compiler translates source programs into pseudo-code. See
                     also <a href="glossary.htm#noc"><dfn>Natural Optimizer
                           Compiler</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Com-plete"><strong>Com-plete</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Software AG's general-purpose, fully conversational online transaction
                     processing (OLTP) software.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Compound Application</strong></dt> 
             
         <dd> 
                 
            <p class="definition">See <a href="glossary.htm#appl"><dfn>Application</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="comp_brows"><strong>Component Browser</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows:</em> Used to view ActiveX components which are available
                     for developing NaturalX applications. It comprises the following features:
            </p> 
                 
            <ul> 
                     
               <li> 
                         
                  <p class="initem">Available ActiveX components and their dispatch and dual interfaces
                             are listed.
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">Data types are mapped to Natural formats.</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">The external components' help files are directly accessible.</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">Natural programming examples are automatically generated.</p> 
                        
               </li> 
                    
            </ul> 
                
         </dd> 
             
             
             
         <dt><strong>Conceptual File</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> File objects of type Conceptual are used for design
                     purposes in the early phases of application development.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Configuration Files</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows/UNIX/OpenVMS:</em> The base directory for FNAT/FUSER is
                     found by looking into the following configuration files:
            </p> 
                 
            <ul> 
                     
               <li> 
                          
                         
                  <p class="initem"><strong> Local Configuration File - Natural.INI</strong><br>The local configuration file contains buffer pool assignments and
                             installation assignments. It is located in the appropriate
                             <cite>etc</cite> directory for each installed Natural version.
                  </p> 
                        
               </li> 
                     
               <li> 
                          
                         
                  <p class="initem"><strong> Global Configuration File - NATCONF.CFG</strong><br>The global configuration file contains DBMS assignments, dictionary
                             server assignments, assignments of printer profiles, and system file
                             assignments.
                  </p> 
                        
               </li> 
                    
            </ul> 
                 
            <p class="definition">For further information, see
                     <a href="../config/cfg-confparm.htm#cfg-confparm">Overview of
                  Configuration File Parameters</a> in the
                     <cite>Configuration Utility</cite> documentation.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Conflict Management</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> First phase of the Coordinator Check Cycle. With
                     Predict Version 3.3 and above, all objects have an Internal ID. Conflict
                     Management means the resolution of conflicts resulting from this Internal ID. A
                     possible conflict could be two objects with the same object ID but different
                     Internal IDs.
            </p> 
                 
            <p class="definition">Conflicts resulting from the Internal ID must be resolved in the
                     Coordinator FDIC before data can be loaded or imported to the Main FDIC.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Con-form</strong></dt> 
             
         <dd> 
                 
            <p class="definition">A text formatter which is automatically installed with
                     <a href="glossary.htm#Con-nect">Con-nect</a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Con-nect"><strong>Con-nect</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Software AG's office communication system that provides a wide variety
                     of office support functions including electronic mail, text processing,
                     document&nbsp; and time management.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Connection</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <var>Predict:</var> A connection between an external
                     and a documentation object is established when either the external object has
                     been generated from the documentation object or the documentation object has
                     been incorporated from the external object. Most connected external and
                     documentation objects can be disconnected explicitly.
            </p> 
                 
            <p class="definition">The connection is realized on the Predict side with the implementation
                     pointer, an attribute of documentation objects.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Consistency Check</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Third phase of the Coordinator Check Cycle. Objects
                     to be transferred are checked for logical consistency, for example that a file
                     number only occurs once within a database. The same checks are performed as in
                     Maintenance functions.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Constants</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Natural supports the following types of constants:</p> 
                 
            <ul> 
                     
               <li> 
                         
                  <p class="initem">Numeric Constants</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">Alphanumeric Constants</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">Date and Time Constants</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">Hexadecimal Constants</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">Logical Constants</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">Floating Point Constants</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">Attribute Constants</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">Handle Constants</p> 
                        
               </li> 
                    
            </ul> 
                 
            <p class="definition">See <a href="../pg/pg_defi_udc.htm">User-Defined
                  Constants</a> in the <cite>Programming
                        Guide</cite>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="ccc"><strong>Coordinator Check Cycle</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> When objects are loaded or imported using the
                     Predict Coordinator, they have to pass a check cycle consisting of the
                     following phases: Conflict Management, Security and Consistency Check.
                     Conflicts in either of the phases must be resolved on the Main or Coordinator
                     FDIC before the Load or Import function can continue.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="cfdic"><strong>Coordinator FDIC</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> The Coordinator FDIC is a Predict file which is used
                     to store data temporarily when using the Coordinator functions Load or Import.
                     Conflicts must be resolved on this Coordinator FDIC before the load/import
                     operation can be continued. The data on the Coordinator FDIC is deleted after
                     the function has been successfully executed.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Coupled Field</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Fields that are copied from fields in standard files
                     or master files are called coupled fields. 
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Cross-Reference List</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> A listing produced by Predict function X in the
                     Retrieval and Active Retrieval menu showing all objects to which a given object
                     is linked by an association.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="CSA"><strong>CSA = Common System Area / Common Storage Area</strong></a></dt> 
             
         <dd> 
                 
            <ol> 
                     
               <li> 
                         
                  <p class="initem"><em>CICS:</em> A common system area is a major CICS storage control
                             block that contains areas and data required for the operation of CICS.* See
                             also <a href="glossary.htm#ECSA"><dfn>ECSA</dfn></a>.
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem"><em>z/OS:</em> A common storage area which is available to all
                             address spaces in z/OS.
                  </p> 
                        
               </li> 
                    
            </ol> 
                
         </dd> 
             
             
             
         <dt><strong>CSECT = Control Section</strong></dt> 
             
         <dd> 
                 
            <p class="definition">That part of a program specified by the programmer to be a relocatable
                     unit, all elements of which are to be loaded into adjoining main storage
                     locations.*
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>CSV = Comma-Separated Values</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Files with statistical tables are stored in CSV format to delimiter
                     columns for spreadsheet manipulation.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>CUI = Character User Interface</strong></dt> 
             
         <dd> 
                 
            <p class="definition"></p> 
                
         </dd> 
             
             
             
         <dt><strong>Current Objects</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Some retrieval types (for example: files with
                     children) report on both the attributes of objects that meet the specified
                     selection criteria and the attributes of objects that are related to these
                     objects. When specifying output options, the objects that meet the specified
                     selection criteria are called the current objects.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Current Virtual Machine / Current Network</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Network and virtual machine objects document the
                     hardware and operating system environment of an information processing system.
                     Predict stores a current virtual machine and a current network which is then
                     used
            </p> 
                 
            <ul> 
                     
               <li> 
                         
                  <p class="initem">as default parent for databases and virtual machine objects</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">as the target environment for Generate/ Incorporate/Compare functions
                             and some AOS functions called from the Predict Special functions menu.
                  </p> 
                        
               </li> 
                    
            </ul> 
                 
            <p class="definition">Current virtual machine and current network are specified in the
                     Predict Defaults. 
            </p> 
                
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="D"></a><div><a name="d"></a></div> 
        
      <h2>D</h2> 
        
      <dl> 
             
             
         <dt><strong>Database</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Predict documentation objects of type database
                     document a collection of physical and/or logical files. The way files are
                     collected to form an object of type database depends on the type of database
                     documented.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Dataspace</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Predict documentation objects of type dataspace
                     document DB2 tablespaces and SQL/DS DBspaces.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="dclcontrol"><strong>Data Control Language (DCL)</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">See <a href="glossary.htm#DCL"><dfn>DCL</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Data Definition Object</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> External objects created with generation functions,
                     for example definitions for the Adabas compression utility, COBOL copy code,
                     data definition modules (DDMs), DB2 databases, verification rules.
            </p> 
                  
                
         </dd> 
             
             
             
         <dt><a name="datdeflan"><strong>Data Definition Language</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">See <a href="glossary.htm#DDL"><dfn>DDL</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Data Definition Module (DDM)</strong></dt> 
             
         <dd> 
                 
            <p class="definition">See <a href="glossary.htm#DDM"><dfn>DDM</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Data Dictionary Object</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> See <a href="glossary.htm#Object"><dfn>Object</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Data_View"><strong> <strong>Data View</strong> </strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A data view references database fields defined in a
                     <a href="glossary.htm#DDM">data definition module</a> (DDM). A data view
                     can contain all or some of the field definitions in the DDM and is defined in a
                     <a href="../sm/defineda_view.htm"><code>DEFINE
                     DATA</code></a> statement or a data area.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>DB</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Abbreviation for "database".</p> 
                
         </dd> 
             
             
             
         <dt><strong>DBA</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Abbreviation for "database administrator".</p> 
                
         </dd> 
             
             
             
         <dt><a name="DBCS"><strong>DBCS = Double-Byte Character Set</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A character set where each character is represented by two bytes. This
                     set is typically used to represent symbols of languages (for example, Chinese
                     and Japanese) which need more codes than available with single-byte character
                     sets (<a href="glossary.htm#SBCS">SBCS</a>).
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>DBD = Database Description</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>DL/1:</em> A description of the physical characteristics of a
                     <a href="glossary.htm#DL_I">DL/I</a> database. It defines the structure,
                     segment keys, physical organization, names, access method, devices and other
                     details of the database.*
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>DBID = Database Identification</strong></dt> 
             
         <dd> 
                 
            <p class="definition">The database number.</p> 
                
         </dd> 
             
             
             
         <dt><a name="DB2"><strong>DB2 = DATABASE 2</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A relational database management system in which data is presented to
                     the user in the form of tables. It can be accessed by a CICS application
                     programs issuing SQL requests.*
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="DCL"><strong>DCL = Data Control Language / DIGITAL Command Language </strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>SQL:</em> Data control language handles data security aspects by
                     providing statements for granting and revoking privileges.
            </p> 
                 
            <p class="definition"> <em>OpenVMS:</em> DIGITAL Command Language (trademark of the
                     Hewlett-Packard Company) handles operating system instructions in OpenVMS
                     environments.
            </p>
         </dd> 
             
             
             
         <dt><a name="DCOM"><strong>DCOM = Distributed Component Object Model</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A Microsoft component technology which allows objects on different
                     computers to communicate through common protocols, including internet and
                     web-based protocols. DCOM extends <a href="glossary.htm#COM">COM</a> to a
                     distributed component software model which specifies how software components
                     interact in a distributed environment.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>DCSS = Discontiguous Shared Segment</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>CMS:</em> An area of virtual storage outside the address range of
                     a virtual machine. It can contain read-only data or reentrant code. It connects
                     discontiguous segments to a virtual machine's address space so programs can be
                     fetched.*
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="DDL"><strong>DDL = Data Definition Language</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Used to create, modify and delete SQL data structures.</p> 
                
         </dd> 
             
             
             
         <dt><a name="DDM"><strong>DDM = Data Definition Module</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A logical definition of a physical database file referenced by Natural
                     programming objects. DDMs contain information on the individual fields of the
                     file relevant for their use within programming objects.&nbsp; On the mainframe, DDMs
                     are stored in the system file FDIC. Under Windows, UNIX and OpenVMS, they are
                     stored in the system file FUSER in the relevant library.
                     For information on the DDM structure, see the section
                     <a href="../pg/pg_dbms_ada.htm#pg_dbms_ddm">Data Definition
                  Modules - DDMs</a> in the <cite>Accessing Data in a
                        Database</cite> part of the <cite>Programming
                        Guide</cite>.
            </p> 
                 
            <p class="definition">See the section <a href="../edis/ddm-over.htm">DDM
                  Services</a> in the <cite>Editors</cite>
                     documentation.
            </p> 
                  
                
         </dd> 
             
             
             
         <dt><strong>Debugger</strong></dt> 
             
         <dd> 
                 
            <p class="definition">See <a href="glossary.htm#natural_debugger"><dfn>Natural
                           Debugger</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="dev_serv_file"><strong>Development Server File</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Database file (at present FDIC on the mainframe) in which application
                     descriptions are physically stored. See <a href="glossary.htm#appl_desc"><dfn>Application
                           Description</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="dcldigital"><strong>DIGITAL Command Language (DCL)</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">See <a href="glossary.htm#DCL"><dfn>DCL</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Distributed Component Object Model (DCOM)</strong></dt> 
             
         <dd> 
                 
            <p class="definition">See <a href="glossary.htm#DCOM"><dfn>DCOM</dfn></a>.
            </p>
                 
                
         </dd> 
             
             
             
         <dt><a name="DL_I"><strong>DL/I = Data Language/One</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">An access method to manipulate hierarchical databases.</p> 
                
         </dd> 
             
             
             
         <dt><strong>DLL</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Abbreviation for "dynamic link library".</p> 
                
         </dd> 
             
             
             
         <dt><strong>DML = Data Manipulation Language</strong></dt> 
             
         <dd> 
                 
            <p class="definition">A language used to manipulate <a href="glossary.htm#SQL">SQL</a>
                     data structures.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>DSECT</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Abbreviation for "dummy control section".</p> 
                
         </dd> 
             
             
             
         <dt><strong>DTD = Document Type Definition</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Schema specification method for SGML and XML documents. DTDs are either
                     contained in the document or belong to its external subset and are then
                     referenced from within the document's document type declaration per URL. Known
                     DTDs are e.g. DocBook, CML, IBTWSH, and HTML. dtd2html generates HTML
                     documentation for SGML DTDs. For XML, DTDs will be replaced by the new XML
                     Schema specification method.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Dynamic Definition</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Any definition of Natural variables that is not part of a
                     <code>DEFINE DATA</code> clause.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="dynamic_param"><strong>Dynamic Parameter</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Assigned by specifying individual parameters and/or an alternative
                     parameter file when starting Natural. Valid for the current Natural
                     session.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Dynamic Variable</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Using variables with the attribute
                     <code>DYNAMIC</code>, large binary and alphanumeric data
                     structures may be processed in Natural without the need to define a space limit
                     at development time. Dynamic variables are defined without any length. Memory
                     is allocated at execution time either implicitly, when the dynamic variable is
                     used as a target operand or explicitly with an
                     <code>EXPAND</code> or <code>RESIZE</code>
                     statement. Dynamic variables can only be defined in a <code>DEFINE
                  DATA</code> statement. See
                     <a href="../pg/pg_defi_ldvfin.htm">Introduction to Dynamic
                  Variables and Fields</a> in the <cite>Programming
                        Guide</cite>.
            </p> 
                
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="E"></a><div><a name="e"></a></div> 
        
      <h2>E</h2> 
        
      <dl> 
             
             
         <dt><a name="ECSA"><strong>ECSA = Extended Common System Area</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>z/OS:</em> A major element of z/OS virtual storage above the 16MB
                     line. This area contains pageable system data areas that are addressable by all
                     active virtual storage access spaces. It duplicates the common system area
                     (<a href="glossary.htm#CSA">CSA</a>) which exists below the 16MB line.*
                     
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>EDIT Line</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> The bottom line in the input screen of the functions
                     Add, Copy and Modify. This line determines whether certain attributes are to be
                     created or modified. If Y is entered in input fields in the EDIT line, a
                     Predict editor is called.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="elementary_field"><strong>Elementary Field</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"><em>Adabas:</em> A single-valued field (scalar) as opposed to a
                     multi-valued field (<a href="glossary.htm#mu_field">multiple-value
                        field</a> or <a href="glossary.htm#PE_Group">periodic group</a>).
                     
            </p> 
                 
            <p class="definition"> <em>Predict:</em> See <a href="glossary.htm#Field"><dfn>Field</dfn></a>. In previous versions of
                     Predict, the Predict object type Field was called "Elementary
                     Field".
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="ELPA"><strong>ELPA = Extended Link Pack Area</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>z/OS:</em> A major element of z/OS virtual storage above the 16 MB
                     line. It duplicates the link pack area (<a href="glossary.htm#LPA">LPA</a>).*
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Endian_Mode"><strong>Endian Mode</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows/UNIX/OpenVMS:</em> Type of architecture for which the
                     compiler generates <a href="glossary.htm#gp">GPs</a>. There are two
                     modes:
            </p> 
                 
            <dl> 
                      
                      
               <dt><a name="d0e2327"><strong>big-endian</strong></a></dt> 
                      
               <dd> 
                          
                  <p class="definition">The high-order byte of the number is stored in memory at the lowest
                              address, and the low-order byte at the highest address (the big end comes
                              first).
                  </p> 
                         
               </dd> 
                      
                      
                      
               <dt><a name="d0e2339"><strong>little-endian</strong></a></dt> 
                      
               <dd> 
                          
                  <p class="definition">The low-order byte of the number is stored in memory at the lowest
                              address, and the high-order byte at the highest address (the little end comes
                              first).
                  </p> 
                         
               </dd> 
                      
                    
            </dl> 
                 
            <p class="definition">Determined by the <code>ENDIAN</code> session/profile
                     parameter. The <code>ENDIAN</code> parameter is used to increase the
                     execution performance of <a href="glossary.htm#pgp">portable GPs</a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Entire_Broker"><strong>EntireX Broker</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">EntireX Broker controls communication among the distributed application
                     components within your IT architecture. The Broker supports many types of
                     communication models: synchronous and asynchronous, client/server,
                     peer-to-peer, publish and subscribe. The follow-up technology is
                     <a href="glossary.htm#EntireX">EntireX</a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Entire Connection</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Software AG product for handling host-to-PC communication. Entire
                     Connection provides mainframe terminal emulation, a high-level application
                     program interface, unattended workstation operation, data conversion facilities
                     and related communication tasks.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Entire DB Engine</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Software AG's entity relationship database that is based on
                     <a href="glossary.htm#Adabas">Adabas</a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Entire Net-Work</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Software AG's middleware which provides a common communications service
                     for database applications, query tools, cooperative processing applications,
                     application development tools and other software.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Entire Operations</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Software AG's online control and scheduling system for the automatic
                     preparation, handling, monitoring and logging of batch processing in the
                     computer center.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Entire Output Management</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Software AG product for processing any type of print data in
                     heterogeneous client/server environments without changing the applications or
                     programs that created the data.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Entire Screen Builder</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Software AG product for handling web-to-host communication. Entire
                     Screen Builder provides a complete range of host terminal communications in a
                     client-server environment. Presentation clients are available for different
                     styles of presentation, ranging from traditional green screen terminal
                     emulation to "GUIfied" Windows dialogs.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Entire System Server</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Software AG's self-contained software package that provides operating
                     system services in a Natural environment. When installed on computers that are
                     linked by Entire Net-Work, Entire System Server supports distributed computing
                     environments that can encompass heterogeneous operating systems.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Entire Transaction Propagator</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Software AG product used to replicate database files. It allows
                     <a href="glossary.htm#Adabas">Adabas</a> users to have duplicate or
                     replicate database files in a single database or distributed network.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="EntireX"><strong>EntireX</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Software AG's middleware technology&nbsp; for open enterprise computing. It
                     provides a powerful infrastructure to develop distributed applications, the
                     components of which can be ported to a wide range of operating environments.
                     EntireX enables you to integrate legacy applications (e.g. on the mainframe)
                     and GUI-front-ends.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>EntireX Broker Stub</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Interface between the <a href="glossary.htm#natrpc">Natural
                        RPC</a> runtime and the EntireX Broker transport layer which exchanges
                     marshalled data between client and server.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="EntireX_DCOM"><strong>EntireX DCOM</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Software AG product used to develop <a href="glossary.htm#DCOM">DCOM</a> components in a heterogeneous networking
                     environment.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>EntireX Manager</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Replaced by <a href="glossary.htm#System_Man_Hub">System Management
                        Hub</a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Entry-Sequenced Dataset (ESDS)</strong></dt> 
             
         <dd> 
                 
            <p class="definition">See <a href="glossary.htm#ESDS"><dfn>ESDS</dfn></a>.
            </p>
                 
                
         </dd> 
             
             
             
         <dt><a name="ESDS"><strong>ESDS = Entry-Sequenced Dataset</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>VSAM:</em> A dataset whose records are physically in the same
                     order in which they were put in the dataset. It is processed by addressed
                     direct access or addressed sequential access and has no index. New records are
                     added at the end of the dataset.*
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="ET"><strong>ET = END TRANSACTION</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A Natural statement issued to confirm completion of a database
                     transaction. See also <a href="glossary.htm#transaction"><dfn>Transaction</dfn></a> and
                     <code>BACKOUT TRANSACTION</code> (<a href="glossary.htm#BT">BT</a>).
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Event-driven Programming</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows:</em> Event-driven programming allows an application to be
                     driven by input received through the graphical user interface. Thus, the order
                     in which code executes depends on which events occur, which in turn depends on
                     what the user does.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Export</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> The Coordinator function Export is used to export
                     Predict data in a form which allows data exchange with other systems. You can
                     also export text from attributes of a Predict object (for example extended
                     description or subquery of a File), or from the output of a display-oriented
                     Predict function (for example Retrieval or Active Retrieval), to an external
                     target (for example Natural, a Con-nect document or a PC ASCII file).
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="External_Class"><strong>External Class</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A NaturalX class can be a local, an internal or an external class. This
                     depends on the way the class was registered. An external class is a class that
                     has been registered as a <a href="glossary.htm#DCOM">DCOM</a> class with
                     the <code>REGISTER</code> command option <code>ES</code>
                     (ExternalSingle) or <code>EM</code> (ExternalMultiple). Objects of external
                     classes can be created and accessed by other processes.
            </p> 
                 
            <p class="definition">For further information, see <a href="glossary.htm#Local_Class"><dfn>Local Class</dfn></a> and
                     <a href="glossary.htm#Internal_Class"><dfn>Internal
                           Class</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>External Object</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Objects of applications (data processing systems)
                     that are documented in Predict with documentation objects. External objects can
                     be generated from documentation objects with Generation functions and
                     documentation objects can be created from external objects using Incorporate
                     functions. Comparison functions compare external and documentation objects.
            </p>
                 
                
         </dd> 
             
             
             
         <dt><strong>External Interface</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows:</em> An external interface is an interface which is
                     defined in an interface module, that is included by the class.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Extract</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> An Extract is a predefined object type in Predict
                     which fulfills two main functions:
            </p> 
                 
            <ul> 
                     
               <li> 
                         
                  <p class="initem">grouping objects logically,</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">creating a set of objects to be transferred with the Predict
                             Coordinator.
                  </p> 
                        
               </li> 
                    
            </ul> 
                
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="F"></a><div><a name="f"></a></div> 
        
      <h2>F</h2> 
        
      <dl> 
             
             
         <dt><a name="FDIC"><strong>FDIC</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <a href="glossary.htm#system_file">System file</a> containing
                     cross-reference information and DDMs. If Predict is installed at your site,
                     FDIC is the Predict dictionary file. If Predict is not installed at your site,
                     FDIC is identical to either FNAT or FUSER and on the mainframe contains DDMs
                     only. FDIC is specified with the
                     <a href="../parms/fdic.htm"><code>FDIC</code></a>
                     profile parameter as described in the <cite>Parameter
                        Reference</cite>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>FDICX</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>VSAM:</em> Alternate index path for VSAM base
                     <a href="glossary.htm#cluster">cluster</a> <a href="glossary.htm#FDIC">FDIC</a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="fdt"><strong>FDT = Field Definition Table</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Adabas:</em> The table of field definitions of an Adabas file as
                     stored and used by Adabas.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Field"><strong>Field</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Predict objects of type Field document the smallest
                     logical unit of reference within a <a href="glossary.htm#File">File</a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Field Definition Table (FDT)</strong></dt> 
             
         <dd> 
                 
            <p class="definition">See <a href="glossary.htm#fdt"><dfn>FDT</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="File"><strong>File</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> A Predict object of type File contains the
                     definition of a collection of fields.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>File Coupling</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Adabas:</em> File coupling is used to select records from one file
                     that are related (coupled) to records in another file. Files are coupled by
                     using Adabas descriptors. You can either couple files physically (hard
                     coupling) using ISN lists, or logically (soft coupling) by evaluating the
                     search result (<code>FIND</code> statement) dynamically at
                     runtime.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="File_Relation"><strong>File Relation</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> A Predict object of type File Relation documents a
                     logical or physical relationship between two Files which is established using
                     Fields in the Files. In earlier versions of Predict, File Relations were called
                     "Relationships". The name was changed for reasons of consistency
                     with other Software AG products.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="FNAT"><strong>FNAT</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Natural <a href="glossary.htm#system_file">system file</a> in
                     which Natural system objects and parameter profiles are stored.
                     Specified with the <a href="../parms/fnat.htm"><code>FNAT</code></a> profile
                     parameter as described in the <cite>Parameter
                        Reference</cite>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>FNR = File Number</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Usually the file number of a Natural <a href="glossary.htm#system_file">system file</a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Front-end</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows/UNIX/OpenVMS:</em> Prepares screen and printer output.
            </p>
                 
                 
            <p class="definition"> <em>Mainframe:</em> See <a href="glossary.htm#frontend_stub"><dfn>Front-end Stub</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="frontend_stub"><strong>Front-end Stub</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>z/OS:</em> A component of the Natural Server environment used by
                     the Natural DB2 Stored Procedures Server and the Natural Development Server.
                     The front-end stub interacts between the client/server protocol and
                     the Natural Server front-end.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="FSEC"><strong>FSEC</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Natural Security <a href="glossary.htm#system_file">system
                        file</a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>FSEQ</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Abbreviation for "file sequence".</p> 
                
         </dd> 
             
             
             
         <dt><a name="FSPOOL"><strong>FSPOOL</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Natural Advanced Facilities spool system file. See also
                     <a href="glossary.htm#system_file"><dfn>System
                           File</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="FUSER"><strong>FUSER</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Natural system file in which all user-generated objects are stored.
                     Specified with the <a href="../parms/fuser.htm"><code>FUSER</code></a> profile
                     parameter as described in the <cite>Parameter Reference</cite>.
                     See also <a href="glossary.htm#system_file"><dfn>System
                           File</dfn></a>.
            </p> 
                
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="G"></a><div><a name="g"></a></div> 
        
      <h2>G</h2> 
        
      <dl> 
             
             
         <dt><a name="GDA"><strong>GDA = Global Data Area</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A Natural programming object which contains data elements that can be
                     shared by multiple programming objects.
            </p> 
                 
            <p class="definition">For further details, see the section
                     <a href="../pg/pg_obj_darea.htm#Global_Data_Area">Global Data
                  Area</a> in the <cite>Programming Guide</cite>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Generation</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> External data definition objects can be generated
                     from Predict File objects with generation functions. 
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="gp"><strong>Generated Program (GP)</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">In Natural, the executable (cataloged) object generated by the
                     compiler.
            </p> 
                 
            <p class="definition"> <em>Mainframe:</em> An object that is cataloged on the mainframe is
                     executable on the mainframe only. On the mainframe, it is possible to optimize
                     a cataloged object using the <a href="glossary.htm#noc">Natural Optimizer
                        Compiler</a>.
            </p> 
                 
            <p class="definition"> <em>Windows/UNIX/OpenVMS:</em> As of Natural Version 5.1, generated
                     programs are portable across all Windows, UNIX and OpenVMS platforms supported
                     by Natural (not on the mainframe). It is also possible to specify the
                     <a href="glossary.htm#Endian_Mode">endian mode</a> for a generated program
                     if required.
            </p> 
                 
            <p class="definition"> <em>Synonyms:</em> The term "cataloged object" is often
                     used synonymously to GP. In Predict Application Control, the term
                     "loadable" is used.
            </p> 
                 
            <p class="definition">See also <a href="glossary.htm#Source_Obj"><dfn>Source
                           Object</dfn></a>, <a href="glossary.htm#Object"><dfn>Object</dfn></a> and
                     <a href="glossary.htm#object_types"><dfn>Object
                           Types</dfn></a>.
            </p>
         </dd> 
             
             
             
         <dt><strong>Generation Task</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> The generation of data definition objects can be
                     performed comfortably by including several generation tasks in an
                     implementation plan. A generation task is the call of a Predict generation
                     function. 
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Global Parameter</strong></dt> 
             
         <dd> 
                 
            <p class="definition">See <a href="glossary.htm#session_param"><dfn>Session
                           Parameter</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>GP</strong></dt> 
             
         <dd> 
                 
            <p class="definition">See <a href="glossary.htm#gp"><dfn>Generated
                           Program</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>GUI</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Abbreviation for "graphical user interface".</p> 
                
         </dd> 
             
             
             
         <dt><a name="GUID"><strong>GUID</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A GUID (globally unique identifier) is a constant that is guaranteed to
                     be unique worldwide in the COM/<a href="glossary.htm#DCOM">DCOM</a> model.
                     It is used to unambiguously identify classes and their interfaces in a network.
                     If a Natural class is to be registered as DCOM class, a GUID must be assigned
                     to the class and to each of its interfaces. In Natural, a GUID is represented
                     by an alphanumeric constant which can be generated in the data area editor. The
                     Natural Studio Class Builder automatically assigns a new GUID to each new
                     class.
            </p> 
                  
                
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="H"></a><div><a name="h"></a></div> 
        
      <h2>H</h2> 
        
      <dl> 
             
             
         <dt><strong>Hexadecimal Notation</strong></dt>
         <dd> 
                 
            <p class="definition">The following is an overview of the hexadecimal notations used in the
                     Natural documentation and also in the documents concerning the Natural add-on
                     products: 
            </p> 
                  
                  
            <table border="1" class="color" cellpadding="3" width="85%"> 
                      
               <thead align="left" valign="top"> 
                          
                  <tr> 
                              
                     <th>Prefix</th> 
                              
                     <th>Example</th> 
                              
                     <th>Explanation</th> 
                              
                     <th>Natural Documents</th> 
                             
                  </tr> 
                         
               </thead> 
                      
               <tbody align="left" valign="top"> 
                          
                  <tr> 
                              
                     <td><code>H</code></td> 
                              
                     <td><code>H'5A3'</code></td> 
                              
                     <td>This is the notation accepted by the Natural
                        programming language (NPL).
                     </td> 
                              
                     <td><cite>Programming Guide</cite>,
                                  <cite>Statements</cite> and other NPL-related reference
                                  documentation.
                     </td> 
                             
                  </tr> 
                          
                  <tr> 
                              
                     <td><code>X</code></td> 
                              
                     <td><code>X'5A3'</code></td> 
                              
                     <td>This is the most common format for hexadecimal
                        on IBM mainframes running operating systems such as z/OS, z/VSE, z/VM, OS/400,
                        or Siemens mainframes running the operating system BS2000/OSD, or other
                        mainframe systems. This notation is used in Assembler, PL/1, Cobol, JCL,
                        scripts, commands and other places.
                     </td> 
                              
                     <td>Natural for Mainframes documentation (e.g.
                        <cite>Installation</cite>, <cite>Operations</cite>,
                                  <cite>TP Monitor Interfaces</cite>).
                     </td> 
                             
                  </tr> 
                          
                  <tr> 
                              
                     <td><code>0x</code></td> 
                              
                     <td><code>0x5A3</code></td> 
                              
                     <td>This is the notation used by the C programming
                        language and its syntactical descendants.
                     </td> 
                              
                     <td>Natural for Open Systems (e.g.
                        <cite>Installation</cite>, <cite>Operations</cite>), Natural
                                  Development Server, Natural Web I/O Interface.
                     </td> 
                             
                  </tr> 
                          
                  <tr> 
                              
                     <td><code>UH</code></td> 
                              
                     <td><code>UH'00C4007000660065006C'</code></td> 
                              
                     <td>The prefix <code>UH</code> can be used for
                        defining Unicode constants in hexadecimal format.
                     </td> 
                              
                     <td><cite>Unicode and Code Page
                           Support</cite>
                        documentation, see U Constants in the section
                                  <a href="../unicode/uni-language.htm#uni-language-uformat">Natural Data
                                     Format U for Unicode-Based Data</a>.
                     </td> 
                             
                  </tr> 
                         
               </tbody> 
                     
            </table> 
                 
         </dd> 
             
             
             
         <dt><a name="HFS"><strong>HF = Hierarchical File System</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">UNIX file system available with z/OS UNIX services.</p> 
                
         </dd> 
             
             
             
         <dt><strong>HTML</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Abbreviation for "Hypertext Markup Language".</p> 
                
         </dd> 
             
             
             
         <dt><a name="http"><strong>HTTP</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Abbreviation for "Hypertext Transfer Protocol".</p> 
                
         </dd> 
             
             
             
         <dt><strong>HTTP Cookies</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Provide the server with a mechanism to store and retrieve state
                     information on the client application's system. This mechanism allows web-based
                     applications to store information about selected items, user preferences,
                     registration information, and other information that can be retrieved later.
                     Used in the <code>REQUEST DOCUMENT</code> statement. For further information, see
                     <a href="../sm/reqdocu.htm"><code>REQUEST DOCUMENT</code></a> in
                     the <cite>Statements</cite> documentation.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>HTTPS</strong></dt>
         <dd> 
                 
            <p class="definition">Abbreviation for "Hypertext Transfer Protocol Secure". It
                     constitutes an additional layer between HTTP and the TCP/IP protocol
                     stack.
            </p>
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="I"></a><div><a name="i"></a></div> 
        
      <h2>I</h2> 
        
      <dl> 
             
             
         <dt><a name="icu_def"><strong>ICU = International Components for Unicode</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">See also
                     <a href="http://www-306.ibm.com/software/globalization/icu/index.jsp" target="_blank">http://www-306.ibm.com/software/globalization/icu/index.jsp</a>.
            </p>
                 
                
         </dd> 
             
             
             
         <dt><strong>ID = Identifier</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> With one exception, Predict objects are uniquely
                     identified by two attributes: Object type and ID. Objects of different types
                     can therefore have the same ID.
            </p> 
                 
            <p class="definition">Field objects are uniquely identified by three attributes: Object type,
                     ID of the File to which they belong, and ID of the field itself. Field objects
                     in different Files can therefore have the same ID.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>IIS</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Abbreviation for "Internet Information Services"
                     (Microsoft).
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Import</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> The Coordinator function Import is used to import
                     data from a transfer medium to a Predict environment. You can also import text
                     from various external sources, such as Natural, a PC ASCII file or a Con-nect
                     document, to a text attribute of a Predict object, for example the extended
                     description of any Predict object, or the subquery of a File.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="IMS"><strong>IMS = Information Management System</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A database manager used by <a href="glossary.htm#CICS">CICS</a> to
                     allow access to data in <a href="glossary.htm#DL_I">DL/I</a> databases.
                     IMS provides for the arrangement of data in a hierarchical structure and a
                     common access approach in application programs that manipulate IMS databases.*
                     
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>IMS/DB = Information Management System/Database</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>z/OS:</em> A management system that provides access to
                     <a href="glossary.htm#DL_I">DL/I</a> databases to organize data in a
                     hierarchical order and to access programs that modify IMS/DB databases.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>IMS/DC = Information Management System / Data Communication</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Obsolete. Replaced by <a href="glossary.htm#IMS_TM">IMS/TM</a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="IMS_TM"><strong>IMS/TM = Information Management System / Transaction Manager</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>z/OS:</em> Component of the online transaction processing system
                     from IBM.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Incorporation</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Predict data dictionary objects can be created by
                     incorporating external objects (for example, an existing Natural data
                     definition module or Adabas field definition table).
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="inpl"><strong>INPL = Initial Natural Program Load</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Natural utility used to load or scan Natural modules or DDMs from
                     Software AG datasets (for example Natural INPL tapes) from work file 1. In
                     addition, it provides a Natural Security Recover function that enables you to
                     force an initialization of the Natural Security environment.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Instance"><strong>Instance</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">In the object-oriented programming model, data structures and functions
                     (so called "methods") are packaged together in objects. Each
                     object belongs to a class, which describes the internal structure of the object
                     and its interfaces, properties and methods. If an object belongs to a certain
                     class, it is also called an instance of that class.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Interface"><strong>Interface</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Interfaces are used by classes to provide clients with services. An
                     interface is a collection of methods and properties. A client accesses these
                     services by creating an object of the class and using the methods and
                     properties of its interfaces.
            </p> 
                 
            <p class="definition">You define an interface as follows:</p> 
                 
            <ul> 
                     
               <li> 
                         
                  <p class="initem">Define the <code>INTERFACE</code> clause to specify an interface
                             name.
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">Define the properties of the interface with <code>PROPERTY</code>
                             definitions.
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">Define the methods of the interface with <code>METHOD</code>
                             definitions.
                  </p> 
                        
               </li> 
                    
            </ul> 
                
         </dd> 
             
             
             
         <dt><a name="Interface_GUID"><strong>Interface GUID</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">If a NaturalX class is to be registered as a <a href="glossary.htm#DCOM">DCOM</a> class, a globally unique ID (GUID) must be
                     defined for each of its interfaces, to make sure the interfaces can be
                     unambiguously identified in a network. The GUID is assigned to an interface in
                     the <code>ID</code> clause of the <code>INTERFACE</code>
                     statement. In Natural, a GUID is represented by an alphanumeric constant, which
                     can be generated in the data area editor. The Natural Studio Class Builder
                     automatically assigns a new GUID to each new interface.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Interface_Inheritance"><strong>Interface Inheritance</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Interface inheritance means giving different classes the same
                     interfaces, but implementing the interfaces differently in the different
                     classes. This makes it possible to write client programs that only rely on
                     these interfaces and are able to work with any class that has these
                     interfaces.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Interface Module</strong></dt> 
             
         <dd> 
                 
            <p class="definition">A Natural copycode module which defines interfaces. The interface
                     module can be used in a class to define the contained interfaces. The class can
                     overwrite the method and property implementations, but all other settings of
                     the interface are used as defined in the interface module.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Internal_Class"><strong>Internal Class</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A NaturalX class can be a local, an internal or an external class. This
                     depends on the way the class was registered. An internal class is a class that
                     has been registered as a <a href="glossary.htm#DCOM">DCOM</a> class with
                     the <code>REGISTER</code> command option <code>IM</code>
                     (InternalMultiple). Objects of internal classes can not be created by other
                     processes, but they can be accessed by other processes. This requires that the
                     object has been passed to the client process for example as return value of a
                     method.
            </p> 
                 
            <p class="definition">For further information, see <a href="glossary.htm#Local_Class"><dfn>Local Class</dfn></a> and
                     <a href="glossary.htm#External_Class"><dfn>External
                           Class</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Internal Code</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Each Predict object type is internally identified by
                     an internal code. Internal codes are assigned by Predict and cannot be changed
                     by the user.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="intid"><strong>Internal ID</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> As of Predict Version 3.3, all objects have an
                     internal ID. This ID is allocated automatically when an object is added. It is
                     unique worldwide and remains with the object throughout its entire life
                     span.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Internal Interface</strong></dt> 
             
         <dd> 
                 
            <p class="definition">An interface which is defined directly in the class, or an interface of
                     an interface module, which is defined in the interface module.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>I/O Buffer = Input/Output Buffer</strong></dt> 
             
         <dd> 
                 
            <p class="definition">An area that contains the most frequently used data and data
                     relationships. It helps to minimize physical input/output activity, thus saving
                     computer time.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>IOCB</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Abbreviation for "input/output control block".</p> 
                
         </dd> 
             
             
             
         <dt><strong>IPL = Initial Program Load</strong></dt> 
             
         <dd> 
                 
            <p class="definition">The procedure which initializes the loading of an operating system.</p>
                 
                
         </dd> 
             
             
             
         <dt><strong>ISAPI = Internet Server Application Programming Interface</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Used by Natural Web Interface to provide internet services in
                     Natural.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>ISN = Internal Sequence Number</strong></dt> 
             
         <dd> 
                 
            <p class="definition">A unique identifier for variable-length records stored in an
                     <a href="glossary.htm#Adabas">Adabas</a> database file. Each ISN is
                     assigned a relative Adabas block number (RABN) in which the record is
                     physically stored.&nbsp;
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Isolated Database</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Database that cannot be accessed using Adabas
                     Star.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>IUPD = INPL Update</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Contains fixes for an <a href="glossary.htm#inpl">INPL</a>.
            </p> 
                
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="J"></a><div><a name="j"></a></div> 
        
      <h2>J</h2> 
        
      <dl> 
             
             
         <dt><a name="JCL"><strong>JCL = Job Control Language</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>z/OS and VSE/ESA operating systems:</em> Control language used to
                     describe a <a href="glossary.htm#job">job</a> and its requirements to an
                     operating system.*
            </p> 
                 
            <p class="definition">Jobs are needed for installing and maintaining Natural and executing
                     Natural in batch mode.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>JCS = Job Control Statement</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>VSE/ESA operating systems:</em> Statement of the
                     <a href="glossary.htm#job">job</a> control language (<a href="glossary.htm#JCL">JCL</a>).
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>JES = Job Entry Subsystem</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>z/OS:</em> An IBM licensed program that receives jobs into the
                     system and processes all output data produced by the jobs.*
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="job"><strong>Job</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A unit of work defined by a user that is to be accomplished by a
                     computer. Loosely, the term job is sometimes used to refer to a representation
                     of a job. This representation may include a set of computer programs, files,
                     and control statements to the operating system.*
            </p> 
                
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="K"></a><div><a name="k"></a></div> 
        
      <h2>K</h2> 
        
      <dl> 
             
             
         <dt><strong>Keyword</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Natural:</em> See
                     <a href="../pg/pg_keyw.htm">Natural Reserved
                  Keywords</a> in the <cite>Programming
                        Guide</cite>.
            </p> 
                 
            <p class="definition"> <em>Predict:</em> Objects of type keyword are used as an additional
                     means of reference to data dictionary objects. Up to 32 keywords may be
                     assigned to any given object.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="KSDS"><strong>KSDS = Key-Sequenced Dataset</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A VSAM file whose records are loaded in key sequence and controlled by
                     an index.*
            </p> 
                
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="L"></a><div><a name="l"></a></div> 
        
      <h2>L</h2> 
        
      <dl> 
             
             
         <dt><strong>Label</strong></dt> 
             
         <dd> 
                 
            <p class="definition">A Natural statement can be marked by placing a label in front of it. A
                     label is an arbitrary name. A statement which is marked with a label can be
                     referenced at another point in the program by specifying its label.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Large Variable</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows/UNIX/OpenVMS:</em> Large variables for alpha and binary
                     data are based on the well known Natural formats A and B. The limitations of
                     253 for format A and 126 for format B are no longer in effect. The new size
                     limit is 1 GB. These large static variables and fields are handled in the same
                     manner as traditional alpha and binary variables and fields with regard to
                     definition, redefinition, value space allocation, conversions, referencing in
                     statements, etc. All rules concerning alpha and binary formats apply to these
                     large formats.
            </p> 
                  
                
         </dd> 
             
             
             
         <dt><a name="LDA"><strong>LDA = Local Data Area</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A Natural programming object which contains data element definitions
                     that can be used by multiple programming objects. For
                     further information, see the section
                     <a href="../pg/pg_obj_darea.htm#Local_Data_Area">Local Data
                  Area</a> in the <cite>Programming
                        Guide</cite>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Library Structure</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Predict objects of type library structure contain
                     system objects documenting the Natural steplib structure.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Link</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Predict documentation objects can be linked using
                     associations (see <a href="glossary.htm#Association"><dfn>Association</dfn></a>).
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Load</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Loads Migrate data from the
                     <a href="glossary.htm#cfdic">Coordinator FDIC</a>. Data to be loaded must
                     pass through all three phases of the <a href="glossary.htm#ccc">Coordinator Check
                        Cycle</a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Local_Class"><strong>Local Class</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A NaturalX class can be a local, an internal or an external class. This
                     depends on the way the class was registered. A local class is a class that has
                     not been registered as a <a href="glossary.htm#DCOM">DCOM</a> class.
                     Therefore, objects of local classes can neither be created nor accessed by
                     other processes, but only by programs in the current Natural session.
            </p> 
                 
            <p class="definition">For further information, see <a href="glossary.htm#Internal_Class"><dfn>Internal Class</dfn></a> and
                     <a href="glossary.htm#External_Class"><dfn>External
                           Class</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Logical File</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> A logical file definition does not necessarily
                     contain information on the physical implementation of the file. A logical file
                     definition is basically the definition of the file structure.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="LPA"><strong>LPA = Link Pack Area</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>z/OS operating systems:</em> A major element of z/OS virtual
                     storage below the 16MB line. The storage areas that make up the LPA contain all
                     the common reentrant modules shared by the system. The LPA provides economy of
                     real storage by sharing one copy of the modules, protection because LPA code
                     cannot be overwritten even by key 0 programs,&nbsp; and reduced path length because
                     the modules can be branched to. The LPA is duplicated above the 16MB line as
                     the extended link pack area (<a href="glossary.htm#ELPA">ELPA</a>).* 
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="LU"><strong>LU = Logical Unit</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">The underlying network entity that provides access to the Systems
                     Network Architecture (<a href="glossary.htm#SNA">SNA</a>) network for the
                     user.
            </p> 
                
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="M"></a><div><a name="m"></a></div> 
        
      <h2>M</h2> 
        
      <dl> 
             
             
         <dt><strong>Main FDIC</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> The Main FDIC is the target environment of a Load or
                     Import operation using the Predict Coordinator.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Mainframe</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Refers to the operating system z/OS,&nbsp; VSE/ESA, VM/CMS and BS2000/OSD,
                     as well as all TP monitors supported by Natural under these operating
                     systems.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Map</strong></dt> 
             
         <dd> 
                 
            <p class="definition">A screen layout referenced in a program. A map provides formatting
                     instructions for screen layouts referenced in a program. It defines input and
                     output fields and assigns them program variables. Natural objects of the type
                     map are created with the map editor as described in the Natural
                     <cite>Editor</cite> documentation.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Mapping</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows Single Point of Development:</em> In a remote development
                     context, you can map a development server to your Windows session and then map
                     applications. 
                     
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Master Field</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Field in a master file.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Master_File"><strong>Master File</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> A file from which a view has been created. A master
                     file is at the intermediate level of the data hierarchy within Predict: its
                     fields can inherit attributes from standard fields, and attribute values in a
                     master field are rippled to lower-level views and userviews.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Member</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Natural or third generation language object for
                     which Xref data exists.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Message Processing Program (MPP)</strong></dt>
         <dd> 
                 
            <p class="definition">See <a href="glossary.htm#MPP"><dfn>MPP</dfn></a>.
            </p>
         </dd> 
             
             
             
         <dt><strong>Metadata Structure</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> The Predict data dictionary structure consists of
                     object types, their attributes and association types. This structure can be
                     enlarged by defining new object types and association types using Predict's
                     Metadata Administration functions. Predict's predefined object types cannot be
                     modified. 
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Method"><strong>Method</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Object-oriented programming:</em> A method is a function that an
                     object/instance of a class can perform when requested by a client.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="MPP"><strong>MPP = Message Processing Program</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">An IMS application program that is driven by transactions and has
                     access to online IMS databases and message queues.*
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Multiple-Master View</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> A view which can be derived from one or more master
                     files, for example ORACLE view.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="mu_field"><strong>Multiple-Value Field</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Adabas:</em> A field that can have multiple values (or
                     occurrences). The number of occurrences of each multiple-value field in a file
                     can be up to 65,534 values, or occurrences, in a single record. The maximum
                     number of occurrences depends on the Adabas version and the definition of the
                     <a href="glossary.htm#fdt">FDT</a>. In Natural, you access a
                     multiple-value field in Adabas by defining it as an array. 
            </p> 
                
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="N"></a><div><a name="n"></a></div> 
        
      <h2>N</h2> 
        
      <dl> 
             
             
         <dt><a name="natparm"><strong>NATPARM</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">The parameter file (Windows/UNIX/OpenVMS) / parameter module
                     (mainframe) which contains all the profile parameter settings for Natural.
                     Natural cannot run without this file. NATPARM initially contains the system
                     defaults supplied by Software AG. If you want to use Natural with parameter
                     values other than the system defaults, you can modify NATPARM and/or create
                     your own parameter files/modules.
            </p> 
                 
            <p class="definition"> <em>Mainframe:</em> NATPARM is a load module delivered in source form.
                     It must be assembled and linked to the nucleus and/or to the front-end module.
                     
            </p> 
                 
            <p class="definition"> <em>Windows/UNIX/OpenVMS:</em> NATPARM is a binary file which you can
                     edit using the <a href="glossary.htm#nat_config_util">Natural Configuration
                        Utility</a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Natural Advanced Facilities</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Natural Advanced Facilities consists of NATSPOOL, the spooling and
                     report management system which permits Natural program output to be spooled and
                     subsequently routed to physical printers.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Natural Command</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Natural commands are used to perform functions during a Natural
                     session.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Natural Command Processor (NCP)</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Consists of two components: maintenance and runtime.&nbsp; The
                     <a href="../utis/sysncp.htm">SYSNCP
                        utility</a>, as described in the
                     <cite>Tools and Utilities</cite>
                     documentation, is the maintenance part which comprises all facilities
                     used to define and control navigation within an application. The
                     <a href="../sm/processc.htm"><code>PROCESS
                     COMMAND</code></a> statement (see the
                     <cite>Statements</cite> documentation) is the runtime part
                     used to invoke Natural programs.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="nat_config_util"><strong>Natural Configuration Utility</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows/UNIX/OpenVMS</em>: You use the Natural Configuration
                     Utility to maintain the following:
            </p> 
                 
            <ul> 
                     
               <li> 
                         
                  <p class="initem">Global and local configuration files.</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">Natural parameter files.</p> 
                        
               </li> 
                    
            </ul> 
                 
            <p class="definition">For further information, see the
                     <a href="../config/cfg-over.htm">Configuration
                  Utility</a> documentation.
            </p>
         </dd> 
             
             
             
         <dt><a name="nat_const"><strong>Natural Construct</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">An application generator which provides a variety of highly flexible
                     application structure templates. It automates many aspects of Natural software
                     production and can be used by IT-experts and IT non-experts alike.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="nat_const_spectrum"><strong>Natural Construct Spectrum</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Provides access to mainframe Natural from Windows. Using Natural
                     Construct Spectrum and the software development kit (SDK), application
                     developers can create all the components of a client/server and web
                     application, including Natural object subprograms that perform maintenance and
                     browse functions, and GUI dialogs or web pages that communicate with these
                     Natural object subprograms. Communication between server and client components
                     of an application is performed by a combination of Entire Broker and Entire
                     Net-Work (or Entire Broker configured to use TCP/IP), as well as Construct
                     Spectrum's middleware components.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="natural_debugger"><strong>Natural Debugger</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Mainframe/Windows/UNIX:</em> The debugger enables you to:
            </p> 
                 
            <ul> 
                     
               <li> 
                         
                  <p class="initem">temporarily control or influence the program flow of a Natural
                             application by modifying variables,
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">check the program flow through a calls history,</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">detect logical application errors in a Natural program by checking
                             the contents of its variables using breakpoints or conditions for program
                             interruption;
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">permanently watch variables.</p> 
                        
               </li> 
                    
            </ul> 
                 
            <p class="definition">The debugger helps you to understand programs written by other people
                     more easily, develop your own applications more quickly and better understand
                     the logic of Natural if you are a first-time user.
            </p> 
                  
                 
            <p class="definition"> <em>OpenVMS:</em> A debugger is only available in a SPoD environment,
                     using Natural for Windows. You can then map to a remote Natural environment and
                     use the debugger which is integrated in Natural Studio. 
            </p>
         </dd> 
             
             
             
         <dt><a name="ndv"><strong>Natural Development Server</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Enables the Natural Studio development environment to be mapped onto a
                     remote Natural environment. You can then develop and test Natural applications
                     in remote environments without leaving the common work-area of Natural
                     Studio.
            </p> 
                 
            <p class="definition">See the Natural Development Server documentation for further
                     information.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Natural Engineer</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Mainframe/Windows:</em> Tool for checking Natural code,
                     maintaining it and ensuring its compliance to defined requirements. Enables you
                     to reengineer and maintain Natural applications into the future, applying
                     standards, maintaining flexibility and preparing for the adoption of new
                     technologies.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="njx"><strong>Natural for Ajax</strong></a></dt>
         <dd> 
                 
            <p class="definition">Using Natural for Ajax, you can create rich internet applications which
                     use the Ajax (Asynchronous JavaScript and XML) technology. This enables Natural
                     users on Windows, UNIX and mainframe
                     platforms to develop and use Natural applications with a browser-based user
                     interface, similar to GUI desktop applications.
            </p> 
                 
                 
            <p class="definition">For further information, see the
                     <a href="../njx/njx-over.htm">Natural for
                  Ajax</a> documentation.
            </p>
         </dd> 
             
             
             
         <dt><strong>Natural ISPF (Integrated Structured Programming Facility)</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Natural ISPF is Software AG's application development tool for
                     building, testing and maintaining applications throughout their life cycle.
            </p>
                 
                
         </dd> 
             
             
             
         <dt><strong>Natural Object Handler</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> Processes objects for distribution of applications. This is done by
                     unloading the objects in the source environment into work files and loading
                     them from work files into the target environment. The Natural Object Handler
                     consists of the utility SYSOBJH which is located in the library SYSOBJH, and
                     the direct command interface. For further
                     information, see the section <a href="../utis/sysobjh_gen_info.htm">General
                  Information</a> in the <cite>Object Handler</cite> part
                     of the <cite>Tools and Utilities</cite>
                     documentation.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="noc"><strong>Natural Optimizer Compiler</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Mainframe:</em> A Natural compiler which generates machine code
                     wherever possible (otherwise it generates pseudo code). 
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="natrpc"><strong>Natural RPC (Remote Procedure Call)</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Implements RPC techniques in a Natural environment. Natural RPC enables
                     Natural to call Natural subprograms, applications, procedures and object
                     methods on a remote computer through a network via EntireX Broker. The client
                     sends a request to the server which provides the service. Request transmission
                     is executed through client and server <a href="glossary.htm#stub">stubs</a>.
            </p> 
                 
            <p class="definition">The connections between client, server and services are configured for
                     each Natural client using the Natural utility <a href="glossary.htm#sysrpc">SYSRPC</a>.
            </p> 
                 
            <p class="definition">For further information, see the
                     <a href="../rpc/rpc-over.htm">Natural Remote Procedure Call
                  (RPC)</a> documentation.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Natural Runtime</strong></dt> 
             
         <dd> 
                 
            <ol> 
                     
               <li> 
                         
                  <p class="initem">The product Natural Runtime provides the environment necessary for
                             executing Natural applications.
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">The virtual machine which interprets Natural code.</p> 
                        
               </li> 
                    
            </ol> 
                
         </dd> 
             
             
             
         <dt><strong>Natural Security</strong></dt> 
             
         <dd> 
                 
            <p class="definition">A comprehensive security system which enables you to control, check or
                     prevent access to your Natural environment.
            </p> 
                 
            <p class="definition">For further information, see the
                     <a href="../nsc/nsc-over.htm">Natural
                  Security</a> documentation.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Natural_Session"><strong>Natural Session</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A Natural session is the user-dependent Natural runtime context
                     required for the Natural runtime system to execute Natural programs.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Natural Studio</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows:</em> Natural's GUI development environment. Natural
                     Studio integrates the previously separate editors and tools into one
                     easy-to-use work area.
            </p> 
                  
                
         </dd> 
             
             
             
         <dt><strong>Natural Web Interface</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <a href="../webtech/nwx_intro.htm">Natural Web
                        Interface</a> offers comfortable web enabling of existing Natural
                     applications. Natural Web Interface is a link between a Web Server (HTTP
                     server) and your Natural environment. This can be on a separate server machine
                     (such as a mainframe) or on the same machine as the HTTP server (e.g.
                     Netscape's Communication Server or Microsoft's IIS).
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Natural Web Adaptor Server Extensions</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Part of Natural Web Interface, the implementations of various server
                     interfaces such as CGI, ISAPI and NSAPI.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="NaturalX"><strong>NaturalX</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Used for writing object-based Natural applications. On Windows
                     platforms, it allows to create distributed Natural applications using
                     distributed object technology (currently DCOM).
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="naturalxclass"><strong>NaturalX Class</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Following the object-based programming approach, NaturalX classes
                     encapsulate data structures (objects) with corresponding functionality
                     (methods).
            </p> 
                 
            <p class="definition">The internal structure of the objects of a class object is defined with
                     a data area (object data area). The methods of a class are implemented as
                     subprograms.
            </p> 
                 
            <p class="definition">NaturalX classes can be made known to <a href="glossary.htm#DCOM">DCOM</a> using the Natural command
                     <code>REGISTER</code>, after which they are accessible in a
                     network.
            </p> 
                 
            <p class="definition">Classes can be <em>internal</em>, <em>external</em> or
                     <em>local</em>.
            </p> 
                 
            <p class="definition">For further information on classes, see the
                     sections
                     <a href="../pg/pg_natx_dev.htm#Defining_Classes_pg_natx_dev">Defining
                  Classes</a>
                     and <a href="../pg/pg_natx_dev.htm#Using_Classes_and_Objects">Using Classes
                  and Objects</a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="NaturalX_Client"><strong>NaturalX Client</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A NaturalX client is a process which creates or accesses NaturalX
                     objects.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="NaturalX_Server"><strong>NaturalX Server</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A NaturalX server is a process which manages one Natural session. The
                     Natural session managed by a NaturalX server is used to host COM objects.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Network</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Together with Predict objects of type virtual
                     machine, networks document the hardware and operating system environment of a
                     data processing system.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Node</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Predict objects of type node are used together with
                     objects of type server to document remote procedure calls.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Node Name</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Natural RPC:</em> The name of the node to which the remote CALLNAT
                     is sent. With EntireX Broker, the node name is the name of the EntireX Broker
                     as defined in the EntireX Broker attribute file in the field BROKER-ID. See
                     also <a href="glossary.htm#natrpc"><dfn>Natural
                           RPC</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>NSAPI = Netscape Application Programming Interface</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Used by Natural Web Interface to provide internet services in
                     Natural.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="nucleus"><strong>Nucleus</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A collection of service programs such as memory administration, string
                     handling, operating system interfaces, the <a href="glossary.htm#compiler">compiler</a> and the <a href="glossary.htm#runtime">runtime</a> environment&nbsp;which comprise the kernel of
                     Natural.
            </p> 
                 
            <p class="definition"> <em>Mainframe:</em> The Natural nucleus consists of two integral
                     parts, where one part runs independently of operating and TP-monitor systems,
                     and the other one does not. Both parts can be linked together to form one
                     nucleus. See also <a href="glossary.htm#shared_nucleus"><dfn>Shared
                           Nucleus</dfn></a>.
            </p> 
                 
            <p class="definition"> <em>Windows/UNIX/OpenVMS:</em> The nucleus is the only part of Natural
                     which is operating-system-dependent.
            </p> 
                
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="O"></a><div><a name="o"></a></div> 
        
      <h2>O</h2> 
        
      <dl> 
             
             
         <dt><a name="Object"><strong>Object</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Object-oriented programming:</em> In the object-oriented
                     programming model, data structures and functions (so-called
                     "methods") are packaged together in objects. Each object belongs
                     to a class that describes the internal structure of the object, its interfaces,
                     properties and methods.
            </p> 
                 
            <p class="definition"> <em>Predict:</em> Information in Predict is stored in the form of the
                     following objects: data dictionary object, documentation object, Predict
                     object. Data dictionary objects are also called Predict objects or
                     documentation objects. See also <a href="glossary.htm#object_types"><dfn>Object Types</dfn></a>.
            </p> 
                 
            <p class="definition"> <em>Natural:</em> See also <a href="glossary.htm#Cat_Obj"><dfn>Cataloged Object</dfn></a>,
                     <a href="glossary.htm#Source_Obj"><dfn>Source Object</dfn></a>
                     and <a href="glossary.htm#object_types"><dfn>Object
                           Types</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Object_Data_Area"><strong>Object Data Area - ODA</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">The object data area is the place where the current values of all
                     properties of an object are stored. It maintains the internal state of the
                     object. The structure of the object data area of all objects of one class is
                     specified in the <code>OBJECT USING</code> clause in the <code>DEFINE
                  CLASS</code> statement. An object data area is created with the data
                     area editor as a local data area.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Object_Data_Variable"><strong>Object Data Variable</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Object-oriented programming:</em> Each property needs a variable
                     in the object data area of the class to store its value - this is referred to
                     as the object data variable stored. Also other variables can be defined in the
                     object data area, which are not accessible by clients as properties, but just
                     used by the methods of the class.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>ODA = Object Data Area</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Object-oriented programming:</em> Where the current values of all
                     properties of an object are stored. Other variables which are not accessible by
                     clients as properties can also be defined in the object data area. These
                     variables are used by the methods of the object to maintain the internal state
                     of the object. The structure of the object data area of all objects of one
                     class is specified in the <code>OBJECT USING</code> clause in the
                     <code>DEFINE CLASS</code> statement. An object data area is
                     created with the data area editor as a local data area.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="object_locking"><strong>Object Locking</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows:</em> Prevents concurrent updating of programs in a remote
                     development environment.  
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="object_types"><strong>Object Types</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Natural:</em> The following are examples of Natural object types:
                     program, map, copycode, text, subprogram, helproutine, subroutine, class, data
                     areas (global, local, parameter), dialog and function. For further information, see the section
                     <a href="../pg/pg_obj-over.htm">Object
                  Types</a> in the <cite>Programming
                        Guide</cite>.
            </p> 
                 
            <p class="definition"> <em>Predict:</em> Information in Predict is stored in the form of the
                     following objects: data dictionary object, documentation object, Predict
                     object. Data dictionary objects are also called Predict objects or
                     documentation objects. Predict documentation objects are of a certain type, for
                     example database or program. Additional object types can be defined using the
                     Metadata Administration functions of Predict. Each object type has its own
                     type-specific attributes.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="objtypcod"><strong>Object Type Code</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"><em>Predict:</em> Each type of object within the Predict metastructure
                     is identified by a unique object type code. An object type code consists of two
                     letters (for example FI for file).
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="openUTM"><strong> <em>open</em>UTM = Open Universal Transaction Monitor</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>BS2000/OSD operating systems:</em> Teleprocessing access method
                     for online environments.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="operand"><strong>Operand</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">An operand can be one of the following:</p> 
                 
            <ul> 
                     
               <li> 
                         
                  <p class="initem">constant;</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">user-defined variable or user-defined function;</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">view field;</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">system variable or system function.</p> 
                        
               </li> 
                    
            </ul> 
                 
            <p class="definition">Operands are used in conjunction with the Natural statements.
                     For more information, see
                     <a href="../sm/synsym.htm#Operand_Definition_Table">Operand
                  Definition Table</a> in the <cite>Statements</cite>
                     documentation:.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Output Mode</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> The Output mode - together with the Retrieval Type -
                     determines how dictionary data is evaluated by Predict retrieval functions.
                     Note that not all output modes are available for all retrieval types.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Owner</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> An owner is basically a group of one ore more users.
                     An owner can represent an organizational unit, for example. Responsibilities
                     can be documented in Predict by assigning an owner to the owner list of a user
                     and the same owner to the owner list of an object.
            </p> 
                
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="P"></a><div><a name="p"></a></div> 
        
      <h2>P</h2> 
        
      <dl> 
             
             
         <dt><strong>Packagelist</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Predict objects of type packagelist document DB2
                     packages.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Parameter</strong></dt> 
             
         <dd> 
                 
            <p class="definition">See the following:</p> 
                 
            <ul> 
                     
               <li> 
                         
                  <p class="initem"> <a href="glossary.htm#dynamic_param"><dfn>Dynamic
                                   Parameter</dfn></a> 
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem"> <a href="glossary.htm#natparm"><dfn>NATPARM</dfn></a>
                             
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem"> <a href="glossary.htm#nat_config_util"><dfn>Natural Configuration
                                   Utility</dfn></a> 
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem"> <a href="glossary.htm#param_file"><dfn>Parameter
                                   File</dfn></a> 
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem"> <a href="glossary.htm#param_module"><dfn>Parameter
                                   Module</dfn></a> 
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem"> <a href="glossary.htm#printer_prof"><dfn>Printer
                                   Profile</dfn></a> 
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem"> <a href="glossary.htm#profile"><dfn>Profile</dfn></a>
                             
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem"> <a href="glossary.htm#profile_param"><dfn>Profile
                                   Parameter</dfn></a> 
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem"> <a href="glossary.htm#profile_param_hierarchy"><dfn>Profile
                                   Parameter Hierarchy</dfn></a> 
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem"> <a href="glossary.htm#sysparm"><dfn>SYSPARM
                                   Utility</dfn></a> 
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem"> <a href="glossary.htm#session_param"><dfn>Session
                                   Parameter</dfn></a> 
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem"> <a href="glossary.htm#static_param"><dfn>Static
                                   parameter</dfn></a> 
                  </p> 
                        
               </li> 
                    
            </ul> 
                 
            <p class="definition"> <em>Natural Remote Procedure Call:</em> All
                     <a href="glossary.htm#natrpc">Natural RPC</a> parameters are documented in
                     the environment-specific <cite>Operations</cite> documentation of
                     Natural. For mainframe Natural, these parameters are included in the NTRPC
                     macro (static definition) or are defined with the profile parameter RPC
                     (dynamic definition).
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="param_file"><strong>Parameter File</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Mainframe:</em> See <a href="glossary.htm#param_module"><dfn>Parameter Module</dfn></a>.
            </p> 
                 
            <p class="definition"> <em>Windows/UNIX/OpenVMS:</em> By default, the parameter
                     specifications in the parameter file <cite>NATPARM.SAG</cite> are used
                     to determine the characteristics of your Natural environment. Natural cannot
                     run without a parameter file. Initially the NATPARM parameter file contains the
                     default values supplied by Software AG. If you want to use Natural with
                     parameter values other than the system defaults, you can modify the default
                     parameter file <cite>NATPARM.SAG</cite> and/or create your own
                     parameter files using the <a href="glossary.htm#nat_config_util">Natural
                        Configuration Utility</a>. All parameter files must have names of 8
                     characters and the extension <cite>.SAG</cite>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="param_module"><strong>Parameter Module</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows/UNIX/OpenVMS:</em> See <a href="glossary.htm#param_file"><dfn>Parameter File</dfn></a>.
            </p> 
                 
            <p class="definition"> <em>Mainframe:</em> Contains all the profile parameter settings for
                     Natural used to determine the characteristics of your Natural environment.
                     Natural cannot run without a parameter module. The default parameter module
                     supplied by Software AG is NATPARM which is delivered in source form. Natural
                     parameter modules are load modules which must be assembled and linked. If you
                     want to use Natural with parameter values other than the system defaults, you
                     can modify NATPARM and/or create your own parameter modules.
            </p> 
                 
            <p class="definition">Natural parameters are defined in the standard parameter module which
                     is linked to the Natural nucleus. This module constitutes the bottom-most level
                     of the Natural parameter hierarchy. In addition to the Natural standard
                     parameter module, the Natural administrator can define any number of additional
                     parameter modules. Additional parameter modules are stored in a TP or
                     operating-system library and can be used as an alternative parameter module by
                     the parameter <code>PARM</code> when Natural is started.
                     
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Parent</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Associations are used to document how Predict
                     objects are related to other Predict objects. An association is established by
                     linking objects to an object either as child or parent. For example, a database
                     is the parent of a file, a file is the parent of a field.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="passive_cross_ref"><strong>Passive Cross-References</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows - XRef Evaluation:</em> The passive cross-reference
                     function shows which objects use the current object. For example, if you have a
                     copycode you might want to know in which parts of your application it is
                     included. Results are displayed in a tree view with the referenced
                     ("used") object at the top. There are some types of objects which
                     by default only have passive cross-references, such as copycodes, DDMs and
                     methods.
            </p> 
                 
            <p class="definition">For further information, see the Single Point of Development
                     documentation.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Passive Help</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Passive help provides descriptive information on
                     functions. Context-sensitive online help information can be displayed by
                     entering a question mark in the Retrieval Type/Function field of a menu, or
                     from the Help Main Menu.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="PCB"><strong>PCB = program communication block</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <a href="glossary.htm#DL_I">DL/I</a> or <a href="glossary.htm#IMS">IMS</a>&nbsp;control block that describes an application
                     program's interface to a DL/I or IMS database or, additionally, for message
                     processing and batch message processing programs, to the source and destination
                     of messages. See also <a href="glossary.htm#PSB"><dfn>PSB = Program
                           Specification Block</dfn></a>.*
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>PDA = Parameter Data Area</strong></dt> 
             
         <dd> 
                 
            <p class="definition">A Natural programming object used to define the data elements that are
                     passed as parameters to a subprogram, external subroutine or helproutine.
                     For further details, see the section
                     <a href="../pg/pg_obj_darea.htm#Parameter_Data_Area">Parameter
                  Data Area</a> in the <cite>Programming
                        Guide</cite>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="PE_Group"><strong>Periodic Group</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"><em>Adabas:</em> A periodic group field defines consecutive fields (a
                     series of <a href="glossary.htm#elementary_field">elementary fields</a>
                     and/or <a href="glossary.htm#mu_field">multiple-value fields</a>) in the
                     <a href="glossary.htm#fdt">FDT</a> that repeat together in a record. The
                     fields defined by a periodic group can be repeated up to 65,534 times per
                     record, depending on the Adabas version and the definition of the FDT. In
                     Natural, you access a periodic group in Adabas by defining all fields as
                     separate arrays, or by defining a group as an array.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Physical File</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> See <a href="glossary.htm#Master_File"><dfn>Master File</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Placeholder</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> When an object that is linked to another object is
                     loaded/imported, and the referenced object is not loaded/imported and does not
                     exist in the target environment, a placeholder is added in the target
                     environment for the referenced object. The purpose of this placeholder is to
                     reserve the object ID of the referenced object in the target environment so
                     that the link in the old environment can be recreated in the new environment at
                     a later time.
            </p> 
                 
            <p class="definition">A placeholder contains the following information:</p> 
                 
            <ul> 
                     
               <li> 
                         
                  <p class="initem">object ID</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">internal ID</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">subtype (if applicable)</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">transfer status placeholder</p> 
                        
               </li> 
                    
            </ul> 
                
         </dd> 
             
             
             
         <dt><strong>PLOG = Protection Log</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <a href="glossary.htm#Adabas"> <em>Adabas:</em></a> A file that
                     records before-and-after images of records and other elements when changes are
                     made to an Adabas database. Used to recover the database (up to the last
                     completed transaction or <a href="glossary.htm#ET">ET</a>) after
                     restart.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="plugin"><strong>Plug-in Manager</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows:</em> The Natural Studio user interface is extensible by
                     plug-ins. Plug-ins can be activated and deactivated with the Plug-in Manager.
                     Part of the Natural Studio functionality itself is delivered in the form of
                     plug-ins. A sample plug-in is delivered in source code in the library SYSEXPLG.
                     
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="pgp"><strong>Portable GPs</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows/UNIX/OpenVMS:</em> GPs which are cataloged with Natural
                     Version 5 are now portable across any Natural-supported UNIX, OpenVMS and
                     Windows platform. This means that GPs which are cataloged with Natural Version
                     5 are now executable with Natural Version 5 on these platforms without
                     recompilation. This feature simplifies the deployment of applications across
                     UNIX, OpenVMS and Windows platforms. Command processor GPs operate as before.
                     See also <a href="glossary.htm#gp"><dfn>Generated
                           Programs</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Predict</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Software AG's open, operational data dictionary for
                     fourth-generation-language development with Natural. It is a central repository
                     of application metadata and provides documentation and cross-reference
                     features. Predict lets you automatically generate code from definitions,
                     enhancing development and maintenance productivity.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Predict Coordinator</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Utility that enables data exchange between different
                     FDIC files and between Predict and Natural Engineering Workbench. The
                     Coordinator uses its own FDIC file called the Coordinator FDIC which serves as
                     temporary storage. The application that contains the Coordinator functions is
                     located in the Natural library SYSDICBE.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="printer_prof"><strong>Printer Profile</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows/UNIX/OpenVMS:</em> Profile information for printers is
                     specified in the global configuration file which initially contains the
                     printing defaults supplied by Software AG. The settings in the global
                     configuration file can be modified using the
                     <a href="glossary.htm#nat_config_util">Natural Configuration
                        Utility</a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="process"><strong>Process</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">An operating system process is an element of work that has its own
                     memory space, code, data, and other operating-system resources and which
                     consists of one or more threads.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Processing Rule</strong></dt> 
             
         <dd> 
                 
            <p class="definition">A processing procedure defined for a map field which checks the content
                     of the field and reacts depending on that content. The check can also include
                     several fields. Processing rules can be stored centrally in Predict (free
                     rules) and/or be permanently assigned to <a href="glossary.htm#DDM">DDM</a> fields (automatic rules).
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="profile"><strong>Profile</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Mainframe:</em> Using the utility SYSPARM, you can specify a
                     string of profile parameters and store it under a profile name. To use a
                     profile, start Natural with the dynamic parameter
                     <code>PROFILE=<var>profile-name</var></code>. The
                     string of parameters stored under that profile name is passed to Natural as
                     dynamic parameters. A profile in this context means a string of profile
                     parameters stored under a profile name.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="profile_param"><strong>Profile Parameter</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">All Natural parameters which are defined in NATPARM (not, for example,
                     driver or front-end parameters). The Natural profile parameters define various
                     characteristics of the Natural environment. Only Natural Administrators are
                     authorized to set all profile parameters.
            </p> 
                 
            <p class="definition">The values for these parameters are taken from the following three
                     sources:
            </p> 
                 
            <ul> 
                     
               <li> 
                         
                  <p class="initem">Runtime assignment of session parameters using the Natural
                             <code>SET GLOBALS</code> statement or the
                             <code>GLOBALS</code> system command (highest priority).
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">Dynamic assignments which are valid for the current Natural session.
                             These are made by specifying individual parameters and/or an alternative
                             parameter file when starting Natural.
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">Static assignments, which are specified in the Natural
                             module/parameter file NATPARM (lowest priority). On the mainframe, this is the
                             parameter module linked to the Natural nucleus. Under Windows, UNIX and
                             OpenVMS, this is the parameter file <cite>NATPARM.SAG</cite>.
                  </p> 
                        
               </li> 
                    
            </ul> 
                 
            <p class="definition">For further information, see the platform-specific
                     Natural <cite>Operations</cite> documentation.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="profile_param_hierarchy"><strong>Profile Parameter Hierarchy</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Natural profile parameters are set at different hierarchically
                     organized levels as illustrated in the table below (priority from high to
                     low).
            </p> 
                  
                  
            <table border="1" class="color" cellpadding="3" width="97%">
               <colgroup>
                  <col width="27%">
                  <col width="70%">
               </colgroup> 
                       
                      
               <tbody align="left" valign="top"> 
                          
                  <tr> 
                              
                     <th align="left">During session (highest priority)
                        
                     </th> 
                              
                     <td> 
                        
                        <p>Development environment settings. </p>
                                  
                                  
                        <p>Program/statement level settings. </p>
                                  
                                  
                        <p>Session parameter settings. </p>
                                  
                                  
                        <p>Natural Security definitions. </p>
                                  
                     </td> 
                             
                  </tr> 
                          
                  <tr> 
                              
                     <th align="left">Dynamic during session start</th>
                              
                              
                     <td> 
                        
                        <p>Dynamic parameter entry. </p>
                                  
                                  
                        <p>Predefined user parameter profiles. 
                                      
                        </p> 
                                  
                        <p>Predefined dynamic parameter sets. </p>
                                  
                     </td> 
                             
                  </tr> 
                          
                  <tr> 
                              
                     <th align="left">Static</th> 
                              
                     <td> 
                        
                        <p>Alternative parameter file/module. </p>
                                  
                                  
                        <p>Natural standard parameter file/module. </p>
                                  
                     </td> 
                             
                  </tr> 
                         
               </tbody> 
                     
            </table> 
                  
                 
            <p class="definition">See also <a href="../ops/ops-parms.htm">Profile Parameter
                  Usage</a> in the <cite>Operations</cite>
                     documentation.
            </p>
         </dd> 
             
             
             
         <dt><a name="ProgID"><strong>ProgID</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">The ProgID (programmatic identifier) of a <a href="glossary.htm#DCOM">DCOM</a> class is a meaningful name by which the class
                     is identified in client programs. For Natural classes, the name defined in the
                     <var>class-name</var> operand in the <code>DEFINE
                  CLASS</code> statement is written into the registry as a ProgID when the
                     class is registered as a DCOM class with the
                     <code>REGISTER</code> command.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Program</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> A Predict object of type program documents data
                     processing objects of different types and languages.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Progam-driven Application</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Applications in which programs control the portions of code that
                     execute - not an event. Execution starts with the first line of executable code
                     and follows a defined pathway through the application, calling additional
                     programs as instructed in the predetermined sequence.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Property"><strong>Property</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Attributes of an object that can be accessed by clients. In Natural
                     classes, property values of an object are stored in the object data area.
                     Therefore, an object data variable must be assigned to each property. For
                     further information, see <a href="glossary.htm#Object_Data_Variable"><dfn>Object Data
                           Variable</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Property Implementation</strong></dt> 
             
         <dd> 
                 
            <p class="definition">The object data variable that is assigned to a property. For further
                     information, see <a href="glossary.htm#Object_Data_Variable"><dfn>Object
                           Data Variable</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Protocol Access Layer</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Coding of access calls to and from the communication protocol (at
                     present TCP/IP) to and from client and server.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="PSB"><strong>PSB = Program Specification Block</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <a href="glossary.htm#DL_I">DL/I</a> or <a href="glossary.htm#IMS">IMS</a> control block that describes databases and
                     logical message destinations available for an application program. A PSB
                     consists of one or more program communication blocks (<a href="glossary.htm#PCB">PCB</a>s).*
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>PU = Physical Unit</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <a href="glossary.htm#SNA">SNA</a>: In Systems Network
                     Architecture (SNA), a physical unit identifies a network node that supports
                     communication sessions between logical units (<a href="glossary.htm#LU">LU</a>s).
            </p> 
                
         </dd> 
             
           
      </dl> 
        
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="R"></a><div><a name="r"></a></div> 
        
      <h2>R</h2> 
        
      <dl> 
             
             
         <dt><strong>RABN</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Abbreviation for "relative Adabas block number".</p> 
                
         </dd> 
             
             
             
         <dt><strong>RAD</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Abbreviation for "Rapid Application Development
                     Model".
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="RBA"><strong>RBA = Relative Byte Address</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>VSAM</em>: The displacement in bytes of a stored record or control
                     interval from the beginning of the storage space allocated to the dataset to
                     which it belongs.*
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="System_Registry"><strong>Registry</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A central repository on Windows platforms for configuration data -
                     database for configuration files. Physically, the registry is the two files
                     <cite>System.dat</cite> and <cite>User.dat</cite>. Logically,
                     the registry is the configuration data that you see in the Registry Editor. The
                     registry contains configuration information of all kinds for both hardware and
                     software. For example, the registry contains information about
                     <a href="glossary.htm#DCOM">DCOM</a> classes and their assignment to
                     servers. For further information, see your Microsoft documentation.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Registry_Key"><strong>Registry Key</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Registry keys are entries made in the Windows system registry of the
                     server when a class is registered. Registry keys are also added in the client
                     system registry when the client registration file is executed.
            </p> 
                 
            <p class="definition">For detailed background information about the registry keys and their
                     administration, please refer to the registry documentation of the appropriate
                     platform.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Related Objects</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Generic term for parent and child objects.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Relationship</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> See <a href="glossary.htm#File_Relation"><dfn>File Relation</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Report Listing</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <var>Predict:</var> Predict objects of type report
                     listing are used to log transfer operations with the Predict Coordinator and
                     conversion functions.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Reserved Word</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Part of the Natural programming language. Letter combinations not
                     available to users for their own use.
            </p> 
                 
            <p class="definition">See the section <a href="../pg/pg_keyw.htm">Natural Reserved Keywords
                  </a> in the <cite>Programming Guide</cite>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Restrictions</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Collection of keywords, owners and text strings used
                     as selection criteria when retrieving information on objects. Restrictions can
                     be stored in profiles or specified for temporary use.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Retrieval</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Subsystem which provides selective output of
                     information (objects, their attributes and associations) to the terminal or, in
                     batch mode, to the spool.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Retrieval Model</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> A retrieval model consists of two parts: a retrieval
                     structure and a definition of the contents and the layout for the reports that
                     are to be created
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Retrieval Operation</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <var>Predict:</var> When retrieving information from
                     the dictionary, a Retrieval type and an Output mode must be specified. These
                     settings together determine the type of Retrieval operation that is indicated
                     in the header of reports.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Retrieval Type</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> The Retrieval type determines the type of
                     information Predict to be retrieved from the dictionary. Retrieval types are
                     either type-independent, for example Objects with children, or type-specific,
                     for example Difference of files.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Rippling"><strong>Rippling</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> The automatic updating of all derived fields at
                     lower hierarchical levels when the corresponding field at a higher hierarchical
                     level is modified.
            </p> 
                 
            <p class="definition">The hierarchical levels are as follows:</p> 
                 
            <ul> 
                     
               <li> 
                         
                  <p class="initem">standard files</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">master files</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">userviews</p> 
                        
               </li> 
                    
            </ul> 
                  
                
         </dd> 
             
             
             
         <dt><a name="Roll_Server"><strong>Roll Server</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>z/OS:</em> Natural as a server runs in a separate region or within
                     the server subsystem region, for example for DB2 stored procedures. To run
                     Natural as a server, a service-specific server stub is required. This server
                     stub is supplied as part of the server product. It controls all service
                     requests and is the only interface to the Natural server front-end.
            </p> 
                  
                
         </dd> 
             
             
             
         <dt><strong>Routine</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Collective term for Natural object types which cannot be executed on
                     their own such as, helproutine, subprogram, subroutine.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="RPC"><strong>RPC = Remote Procedure Call</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A client/server communication technique that is applied to call
                     applications, procedures and object methods on a remote computer through a
                     network. The client sends a request to the server which provides the service.
                     Request transmission is executed through client and server
                     <a href="glossary.htm#stub">stubs</a>.
            </p> 
                 
            <p class="definition">See also <a href="../rpc/rpc-over.htm">Natural Remote Procedure Call
                  (RPC)</a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="rpc_stub"><strong>RPC Stub</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Natural RPC:</em> The client subprogram via which the server
                     subprogram is called. The RPC stub has the same name and contains the same
                     parameters as the corresponding server subprogram.
            </p> 
                 
            <p class="definition">The RPC stub accepts the <code>CALLNAT</code> requests on
                     the client side, marshalls the Natural <code>CALLNAT</code>
                     parameters and passes them to the RPC client runtime. The RPC client runtime
                     then passes the parameters to the client's EntireX Broker stub.
                     For further information, see the sections
                     <a href="../rpc/oper.htm#oper_Creating_Stub_Subprograms">Creating Stub
                  Programs</a> and
                     <a href="../rpc/oper.htm#oper_Working_with_Automatic_Natural_RPC_Execution">Working
                  with Automatic Natural RPC Execution</a> in the
                     <cite>Natural Remote Procedure Call (RPC)</cite>
                     documentation.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="RRDS"><strong>RRDS = Relative-record Dataset</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <a href="glossary.htm#VSAM"> <em>VSAM</em></a>: A dataset
                     organization, in which records are of fixed length and are accessed by their
                     relative record numbers (<a href="glossary.htm#RRN">RRN</a>).*
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="RRN"><strong>RRN = Relative Record Number</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <a href="glossary.htm#VSAM"> <em>VSAM</em></a>: A unique
                     identifier for each record stored in a relative record data set (<a href="glossary.htm#RRDS">RRDS</a>).
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>RSL = Record-sharing Level</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <a href="glossary.htm#VSAM"> <em>VSAM</em></a>: An option that
                     allows record-level sharing of VSAM data sets from multiple address spaces
                     across multiple systems.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="runtime"><strong>Runtime</strong></a></dt> 
             
         <dd> 
                 
            <ol> 
                     
               <li> 
                         
                  <p class="initem">The part of the Natural nucleus that executes a Natural program, as
                             opposed to the compiler.
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">The time during which a Natural program is executed.</p> 
                        
               </li> 
                    
            </ol> 
                
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="S"></a><div><a name="s"></a></div> 
        
      <h2>S</h2> 
        
      <dl> 
             
             
         <dt><strong>SAA = Systems Application Architecture</strong></dt> 
             
         <dd> 
                 
            <p class="definition">A set of common standards and procedures for working with IBM systems
                     and data. SAA enables different software, hardware and network environments to
                     coexist. It provides bases for designing and developing application programs
                     that are consistent across different systems.*
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="SBCS"><strong>SBCS = Single-Byte Character Set</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A character set where each character is represented by one byte, as
                     opposed to the double-byte character set (<a href="glossary.htm#DBCS">DBCS</a>).
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>SCP = System Control Program</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Mainframe:</em> The Natural SCP environment is part of the Natural
                     CICS Interface. A dump is taken for all SCP failures. 
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>SDI</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Abbreviation for "Single-Document Interface".</p> 
                
         </dd> 
             
             
             
         <dt><strong>Selection Criteria</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Predict retrieval functions can be applied to
                     individual objects or to groups of objects. Search criteria are specified to
                     select objects to which retrieval functions are to be applied.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Selection Window</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> See <a href="glossary.htm#Active_Help"><dfn>Active Help</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Server</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Predict objects of type server are used together
                     with objects of type node to document remote procedure calls.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="server_frontend"><strong>Server Front-end</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>z/OS:</em> A component of the Natural Server environment used by
                     the Natural DB2 Stored Procedures Server and the Natural Development Server.
                     . It is a functionally
                     extended batch driver (NATOS, NATTSO) which provides the front-end server with
                     additional functions such as initializing the server environment, session roll
                     in/out and the execution of Natural objects.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Server_ID"><strong>Server ID</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A server ID is a character string that identifies a NaturalX server.
                     The server ID is a Natural-owned key in the Windows system registry, keeping
                     together all classes that belong to a given NaturalX server. It is an arbitrary
                     alphanumeric string of 32 characters which does not contain blanks and which is
                     not case sensitive. The server ID is defined with the Natural parameter
                     <code>COMSERVERID=<var>serverid</var></code>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="server_name"><strong>Server Name</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Natural RPC:</em> The name of the server on which the
                     <code>CALLNAT</code> is to be executed.
            </p> 
                 
            <p class="definition">With EntireX Broker, the server name is the name defined in the field
                     SERVER in the EntireX Broker attribute file.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Server Task</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Natural RPC</em>: A server task is a Natural task which offers
                     services (subprograms). This is typically a batch task or asynchronous task. It
                     is identified by a <a href="glossary.htm#server_name">server name</a>.
            </p>
                 
                
         </dd> 
             
             
             
         <dt><a name="glossary_service_directory"><strong>Service Directory</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Natural RPC</em>: Contains information on which server provides
                     which services (subprograms). The service directory can either be locally
                     available on each client node or it can be located on a remote directory
                     server, referenced by the RDS session parameter. Generated with the SYSRPC
                     utility to implement the service directory.
            </p> 
                 
            <p class="definition">The service directory is implemented by the Natural subprogram NATCLTGS
                     which is generated by the SYSRPC utility.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Session</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Natural</em>: The user-dependent Natural runtime context required
                     for the Natural runtime system to execute Natural programs for one individual
                     user.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="session_param"><strong>Session Parameter</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Assigned with the system command <code>GLOBALS</code> (or
                     a <code>SET GLOBALS</code> statement) within the current Natural
                     session. They override static and dynamic assignments.
            </p> 
                 
            <p class="definition">Natural session parameters may be used with certain Natural statements
                     to control such factors as the size of a report and how fields are to be
                     displayed.
            </p> 
                 
            <p class="definition">At the installation of Natural, the Natural administrator sets these
                     parameters to default values which are then valid for all users of Natural.
            </p>
                 
                 
            <p class="definition">For further information, see the
                     <a href="../parms/parms-over.htm">Parameter
                  Reference</a>.
            </p> 
                 
            <p class="definition">To see which parameter values apply to your session, enter the system
                     command <a href="../syscom/globals.htm"><code>GLOBALS</code></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Session Variable</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> With many Predict functions, parameter values must
                     be specified. Predict stores parameter values temporarily in session variables.
                     Whenever possible, parameter values that have been omitted are taken from these
                     session variables. Which parameters values can be taken from session variables
                     depends on both the function and the parameter type.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="shared_nucleus"><strong>Shared Nucleus</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>z/OS&nbsp; and VSE/ESA operating systems</em>: The
                     environment-independent part of the Natural nucleus installed so that one copy
                     of the nucleus can be used by several TP-dependent Natural drivers and in batch
                     mode.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Single-master View</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> A view which is always derived from one master file
                     only, for example an Adabas userview.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="spod"><strong>Single Point of Development</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows:</em> The concept of platform-independent development
                     realized as of Natural 5 for Windows. Natural 5 focuses on the following:
            </p> 
                 
            <ul> 
                     
               <li> 
                         
                  <p class="initem">remote development of z/OS applications with Natural Studio;</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">advanced web and XML capabilities featuring an XML toolkit and direct
                             access from Natural to any resource in the internet.
                  </p> 
                        
               </li> 
                    
            </ul> 
                
         </dd> 
             
             
             
         <dt><a name="SIP"><strong>SIP = Session Information Pool</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Holds the Natural session information records and is used in connection
                     with the Authorized Services Manager (<a href="glossary.htm#ASM">ASM</a>).
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>SIR = Session Information Record (Natural) / Session Information
                    Retrieval (IBM)</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Natural:</em> The Natural CICS interface permanently holds
                     information about all active Natural sessions. A session information record
                     (SIR) is maintained for each session.
            </p> 
                 
            <p class="definition"> <em>IBM:</em> The function that allows an operator to enable or
                     disable session information retrieval for a particular gateway or for all
                     gateway sessions. When a gateway session ends, trace information about the most
                     recent sequence or FID0 numbers to cross the gateway is passed back to all
                     system services control points (SSCPs) that have enabled SIR for that session
                     or for all sessions. This information can also be passed back to the requesting
                     host.*
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>SIT = System Initialization Table</strong></dt> 
             
         <dd> 
                 
            <p class="definition">A <a href="glossary.htm#CICS">CICS</a> table that contains
                     information to initialize and control system functions, module suffixes for
                     selection of user-specified versions of CICS modules and tables, and
                     information used to control the initialization process. You can generate
                     several SITs, using the resource definition macro DFHSIT, and then use the SIT
                     system initialization parameter to select the one that best meets your current
                     requirements at initialization time.*
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>SMA = System Maintenance Aid</strong></dt> 
             
         <dd> 
                 
            <p class="definition">See <a href="glossary.htm#System_Maintenance_Aid"><dfn>System
                           Maintenance Aid</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="SMF"><strong>SMF = System Management Facility</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A standard feature of z/OS that collects and records a variety of
                     system and job-related information.*
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="SNA"><strong>SNA = Systems Network Architecture</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">The IBM architecture that defines the logical structure, formats,
                     protocols, and operational sequences for transmitting information units
                     through, and controlling the configuration and operation of, networks. The
                     layered structure of SNA allows the ultimate origins and destinations of
                     information (the users) to be independent of and unaffected by the specific SNA
                     network services and facilities that are used for information exchange.* 
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>SOAP = Simple Object Access Protocol</strong></dt> 
             
         <dd> 
                 
            <p class="definition">XML-based messaging convention which, in combination with the EntireX
                     XML Wrapper, enables any Natural application to be initiated by an XML document
                     sent via HTTP.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="sag_editor"><strong>Software AG Editor</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Mainframe:</em> You can use the Software AG Editor as an
                     alternative to the Natural program editor. You need to have Natural ISPF
                     installed and to set your editor profile appropriately (see the <cite>Editors</cite> documentation for
                     further information on editor profiles).
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Source Field</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Field that is used in the definition of a derived
                     field. Derived fields are super/ hyper/subfields/descriptors and phonetic
                     descriptors.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Source_Obj"><strong>Source Object</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">In Natural, a source object (or a saved object) contains Natural source
                     code. A source object is stored as an object module in a Natural system
                     file.
            </p> 
                 
            <p class="definition">See also <a href="glossary.htm#Cat_Obj"><dfn>Cataloged
                           Object</dfn></a>, <a href="glossary.htm#Object"><dfn>Object</dfn></a> and
                     <a href="glossary.htm#object_types"><dfn>Object Types</dfn></a>
                     
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>SPA = Scratch Pad Area</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <a href="glossary.htm#IMS_TM"> <em>IMS/TM:</em></a> A
                     terminal-specific area to temporarily store data processed during user
                     transactions. A program controls clearance of the area.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>SPoD</strong></dt> 
             
         <dd> 
                 
            <p class="definition">See <a href="glossary.htm#spod"><dfn>Single Point of
                           Development</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="SQL"><strong>SQL = Structured Query Language</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A programming language that is used to define and manipulate data in a
                     relational database.*
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>SSA = Segment Search Argument</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <a href="glossary.htm#IMS">IMS</a> or <a href="glossary.htm#DL_I">DL/I</a>: The part of a DL/I call that identifies a
                     segment or group of segments to be processed. SSAs may be simple segment names
                     or they may be qualified to include constraints on the values of fields within
                     the named segment types.*
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Standard Field</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> A field in a standard file. Standard files and
                     fields enforce standard use of fields in different files.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Standard File</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> A standard file documents the overall layout of all
                     data processed within an organization (data definitions and/or company
                     standards). Fields in standard files do not refer to an implemented data
                     structure directly: field definitions in a standard file are rippled to master
                     files of different types.
            </p> 
                 
            <p class="definition">See <a href="glossary.htm#Rippling"><dfn>Rippling</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Statements</strong></dt> 
             
         <dd> 
                 
            <p class="definition">See the <a href="../sm/sm-over.htm">Statements</a>
                     documentation.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="static_param"><strong>Static Parameter</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Mainframe:</em> Assigned by profile parameters specified in the
                     macro NTPRM and other macros of the Natural parameter module (NATPARM) which is
                     then assembled and linked with the Natural nucleus. All parameters not
                     specified are assigned to their default values.
            </p> 
                 
            <p class="definition"><em>Windows/UNIX/OpenVMS:</em> The parameter settings specified in
                     <cite>NATPARM.SAG</cite>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="steplib"><strong>Steplib</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A steplib is a Natural user library or system library that is
                     concatenated with the current user or system library. A steplib can be used as
                     a single storage location for multiple objects that are shared by different
                     applications. This avoids redundant storage of identical objects and helps
                     organize applications. In addition, if Natural Security is installed, a steplib
                     can be used to restrict access to particular objects.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Storagespace</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Predict objects of type storagespace document DB2
                     storagegroups.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>STOW</strong></dt>
         <dd> 
                 
            <p class="definition">In Natural, the term "stow" refers to the
                     Natural system command <code>STOW</code>. This command saves and,
                     at the same time, catalogs (compiles) source code as a source object and as a
                     cataloged object in a Natural system file. Both objects then have the same time
                     stamps. 
            </p>
         </dd> 
             
             
             
         <dt><a name="stub"><strong>Stub</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A socket program that establishes the link between the local
                     application program and the broker. See also <a href="glossary.htm#rpc_stub"><dfn>RPC Stub</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Subtype</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Object types can have subtypes. The object type
                     file, for example, has the subtypes Adabas file, Adabas userview, DB2 table,
                     DB2 view, etc. The subtypes of the object type file, for example, are also
                     called file types.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Super Natural</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Software AG's end-user tool for extracting and processing data from
                     mainframe or PC files. It offers menu-driven query specification, interactive
                     report layout specification, and flexible customization of end-user
                     profiles.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="SVC"><strong>SVC = Supervisor Call</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A request that serves as the interface into operating system functions,
                     such as allocating storage. The SVC protects the operating system from
                     inappropriate user entry. All operating system requests must be handled by
                     SVCs.*
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Syncpoint = Synchronization Point</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <a href="glossary.htm#CICS">CICS</a> and
                     <a href="glossary.htm#IMS_TM">IMS/TM</a>: A logical point in execution of
                     an application program where the changes made to the databases by the program
                     are consistent and complete and can be committed to the database. The output,
                     which has been held up to that point, is sent to its destination(s), the input
                     is removed from the message queues, and the database updates are made available
                     other applications.*
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="sysparm"><strong>SYSPARM Utility</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Mainframe:</em> Used for creating and maintaining parameter
                     profiles. You can specify a string of profile parameters once, store this
                     string under a profile name, and then invoke Natural with the dynamic parameter
                     <code>PROFILE=<var>profile-name</var></code>. The
                     string of parameters stored under that profile name is passed to Natural as
                     dynamic parameters.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="sysplex"><strong>Sysplex = System Complex</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>z/OS operating systems:</em> A coupling of several z/OS operating
                     system images to improve performance, balance workload and to guarantee system
                     availability.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="sysrpc"><strong>SYSRPC</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Utility for configuring the services, and server connections for each
                     Natural client using remote procedure calls. See
                     <a href="../utis/sysrpc-over.htm">SYSRPC
                  Utility</a> in the <cite>Tools and
                        Utilities</cite> documentation.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>System</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Predict objects of type system document a collection
                     of programs forming an application or a part of an application.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>System Command</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Natural system commands perform functions you need to create, maintain
                     or execute Natural programming objects. In addition, Natural system commands
                     are used to monitor and administer your Natural environment.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="system_file"><strong>System File</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">The Natural system files (FNAT, FUSER) contain information, data
                     programs, modules, etc., which are required for the Natural system to function.
                     Products like Predict, Natural Security, Natural Advanced Facilities and
                     Natural for VSAM require their own system files (FDIC, FSEC, FSPOOL,
                     FDICX).
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>System Function</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Preprogrammed functions offered by Natural. See the <a href="../func/func-over.htm">System Functions</a>
                     documentation.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>System Library</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Natural-internal library created in FNAT at installation, not available
                     for customer-modification. All Natural system library names start with the
                     letters "SYS" (with some exceptions on the
                     mainframe).
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>SYSTEM Library</strong></dt> 
             
         <dd> 
                 
            <p class="definition">The library which is searched if a Natural object is not found in
                     either the current library or in the steplibs. There is a SYSTEM library in
                     both FNAT and FUSER. See <a href="glossary.htm#steplib"><dfn>Steplib</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="System_Maintenance_Aid"><strong>System Maintenance Aid (SMA)</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Software AG product used to install and maintain Software AG mainframe
                     products.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="System_Man_Hub"><strong>System Management Hub</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Software AG's product and cross-platform product management framework.
                     Its architecture permits plug-in integration of existing products, separation
                     of implementation-specific management technologies and re-use as a
                     product-independent, cross-platform framework.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>System Program</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Programs that are not available as source code are
                     documented with Predict objects of type Program with subtype E (external
                     object) and language Z (system program). Whenever a system program is created
                     in Predict, Xref data is written for it.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="system_variable"><strong>System Variable</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">System variables are used to display system information. They may be
                     referenced at any point within a Natural program. See
                     the <a href="../vari/vari-over.htm">System
                  Variables</a> documentation.
            </p> 
                
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="T"></a><div><a name="t"></a></div> 
        
      <h2>T</h2> 
        
      <dl> 
             
             
         <dt><strong>TAC</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Abbreviation for "transaction code".</p> 
                
         </dd> 
             
             
             
         <dt><strong>Task</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Mainframe:</em> In a multiprogramming or multiprocessing
                     environment, one or more sequences of instructions treated by a control program
                     as an element of work to be accomplished by a computer.*
            </p> 
                 
            <p class="definition"> <em>Windows/UNIX/OpenVMS:</em> See <a href="glossary.htm#process"><dfn>Process</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="TCB"><strong>TCB = Task Control Block</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>z/OS and VSE/ESA:</em> A control block allocated by the operating
                     system which contains all information on tasks relevant for the system.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>TD = Transient Data</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <a href="glossary.htm#CICS"> <em>CICS:</em></a> Data temporarily
                     stored in a facility. A transient object is automatically deleted when it is no
                     longer used.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Terminal Command</strong></dt> 
             
         <dd> 
                 
            <p class="definition">You can define another special character as control character using the
                     session parameter <code>CF</code>. See the
                     <a href="../tcom/keys.htm">Terminal
                  Commands</a> documentation.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="th_sep"><strong>Thousands Separator</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">To structure the output of large integer values, it is common practice
                     to insert separators between every three digits of an integer to separate
                     groups of thousands. This separator is called a "thousands
                     separator".
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="dyn_th_sep"><strong>Dynamic Thousands Separator</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">In Natural, a "dynamic thousands separator" is a specific
                     character in the edit mask to indicate the position where the thousands
                     separators are inserted at runtime.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="th_sep_ch"><strong>Thousands Separator Character</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">The "thousands separator character" is the character to be
                     used as the thousands separator at runtime.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Thread</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Mainframe:</em> A storage space which contains all the data for a
                     particular Natural session.
            </p> 
                 
            <p class="definition"> <em>Windows/UNIX/OpenVMS:</em> The basic (memory) entity within an
                     application to which the operating system allocates CPU time. Threads allow
                     parallel computing in single and multiple processors. They execute
                     independently from each other.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>TIAM = Terminal Interactive Access Method</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>BS2000/OSD operating systems:</em> A teleprocessing access method
                     for online environments.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="TP"><strong>TP Monitor = Teleprocessing Monitor / Transaction Processing
                       Monitor</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>z/OS and VSE/ESA:</em> A control program for the administration
                     and management of online transaction processing (OLTP) applications. TP monitor
                     technology complements the operating system and serves as an intermediate tier
                     encapsulating access to resources. The user or application programmer is thus
                     shielded from technical details on the operating system level, for example
                     concerning database access.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Transfer Medium</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> When data is transferred using the Predict
                     Coordinator, the transfer medium used can be a PC work file, a Natural work
                     file or a file in a database. For the Coordinator functions Unload and Export,
                     the transfer medium is the target environment; for the Coordinator functions
                     Load and Import, the transfer medium is the source environment.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="transaction"><strong>Transaction</strong></a></dt> 
             
         <dd> 
                 
            <ol> 
                     
               <li> 
                         
                  <p class="initem">Input of application data submitted by a single user that initiates a
                             sequence of information exchange and execution of operational steps (input -
                             data processing - output). A transaction code is needed to initiate the
                             process.
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">Natural performs database updating operations based on transactions
                             (database transactions), which means that all database update requests are
                             processed in logical transaction units. A logical transaction is the smallest
                             unit of work (as defined by user) which must be performed in its entirety to
                             ensure that the information contained in the database is logically consistent.
                             The statements <code>END TRANSACTION</code> (<a href="glossary.htm#ET">ET</a>) and <code>BACKOUT TRANSACTION
                        </code>(<a href="glossary.htm#BT">BT</a>) cause the database to
                             unlock all records since the begin of the transaction.
                             See also <a href="../pg/pg_dbms_ada.htm">Database Access</a> in
                             the <cite>Programming Guide</cite>.
                  </p> 
                        
               </li> 
                    
            </ol> 
                
         </dd> 
             
             
             
         <dt><strong>Translator Database</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Database that contains the ADASTAR translation table
                     that is used to determine the physical file behind any logical file number when
                     using Adabas Star.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Tree View</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Visual representation of element hierarchy.</p> 
                
         </dd> 
             
             
             
         <dt><a name="Type_Information"><strong>Type Information</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">When a NaturalX class is registered as a <a href="glossary.htm#DCOM">DCOM</a> class, a type library is generated for the
                     class and connected to the class by a Windows system registry entry. Clients
                     can use the type information contained in the type library to check the
                     descriptions of the interfaces, methods and properties of the class either at
                     compile time or at runtime.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Type_Library"><strong>Type Library</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">When a NaturalX class is registered as a <a href="glossary.htm#DCOM">DCOM</a> class, a type library is generated for the
                     class and connected to the class by a Windows system registry entry. Clients
                     can use the type information contained in the type library to check the
                     descriptions of the interfaces, methods and properties of the class either at
                     compile time or at runtime.
            </p> 
                
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="U"></a><div><a name="u"></a></div> 
        
      <h2>U</h2> 
        
      <dl> 
             
             
         <dt><strong>UCB</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Abbreviation for "unit control block user". </p> 
                
         </dd> 
             
             
             
         <dt><a name="unicode"><strong>Unicode</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">For information on Unicode terms used in the Natural documentation,
                     refer to the glossary that is published for the current Unicode version on the
                     Unicode Home Page:
            </p> 
                 
            <ul> 
                     
               <li> 
                         
                  <p class="initem"> <a href="http://www.unicode.org/" target="_blank">http://www.unicode.org/</a> 
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">
                             <a href="http://www.unicode.org/versions/Unicode4.0.0/b1.pdf" target="_blank">http://www.unicode.org/versions/Unicode4.0.0/b1.pdf</a>
                             
                  </p> 
                        
               </li> 
                    
            </ul> 
                
         </dd> 
             
             
             
         <dt><strong>Unload</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> There are two methods of unloading Predict
                     objects:
            </p> 
                 
            <ul> 
                     
               <li> 
                         
                  <p class="initem">Using extracts. Using the menu functions, you can only unload objects
                             that are contained in an extract. Up to ten extracts can be specified for one
                             unload operation. 
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">Using unload commands. In the command line you can also specify
                             individual objects or ranges of objects. The scope of the function can be
                             limited by parameters. 
                  </p> 
                        
               </li> 
                    
            </ul> 
                
         </dd> 
             
             
             
         <dt><a name="uri"><strong>URI</strong></a></dt>
         <dd> 
                 
            <p class="definition">Abbreviation for "Uniform Resource Identifier". </p> 
                 
            <p class="definition">Example:</p> 
                 <pre class="verbatim">http://guest:guestpwd@si15.hq.sag:80/xml/mycar.xml</pre> 
                  
                  <table border="1" class="color" cellpadding="3" width="97%"> 
                      
               <tbody align="left" valign="top"> 
                          
                  <tr> 
                              
                     <td>Protocol</td> 
                              
                     <td>http</td> 
                             
                  </tr> 
                          
                  <tr> 
                              
                     <td>User ID</td> 
                              
                     <td>guest</td> 
                             
                  </tr> 
                          
                  <tr> 
                              
                     <td>Password</td> 
                              
                     <td>guestpwd</td> 
                             
                  </tr> 
                          
                  <tr> 
                              
                     <td>Port</td> 
                              
                     <td>80</td> 
                             
                  </tr> 
                          
                  <tr> 
                              
                     <td>Path</td> 
                              
                     <td>/xml</td> 
                             
                  </tr> 
                          
                  <tr> 
                              
                     <td>File</td> 
                              
                     <td>mycar.xml</td> 
                             
                  </tr> 
                         
               </tbody> 
                     
            </table> 
                 
         </dd> 
             
             
             
         <dt><strong>User</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Predict objects of type user document persons using
                     a system. A logical connection between users and documentation objects is
                     established by means of owners. See <a href="glossary.htm#object_types"><dfn>Object Types</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>URL</strong></dt>
         <dd> 
                 
            <p class="definition">Abbreviation for "Uniform Resource Locator", a subtype of
                     Uniform Resource Identifier (URI). In popular usage and in some technical
                     publications it is a synonym for URI.
            </p>
         </dd> 
             
             
             
         <dt><a name="user_defined_variable"><strong>User-Defined Variable</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A field which you define yourself in a program. It is used to store
                     values or intermediate results obtained at some point in program processing for
                     additional processing or display.
            </p> 
                 
            <p class="definition">You define a user-defined variable by specifying its name and its
                     format/length in the <code>DEFINE DATA</code> statement.
                     See the section <a href="../pg/pg_defi_dv.htm">User-Defined Variables</a>
                     in the <cite>Programming Guide</cite>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="user_exit"><strong>User Exit</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A user exit is a point in Natural, a subcomponent or a subproduct where
                     control is passed to a <a href="glossary.htm#user_exit_routine">user exit
                        routine</a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="user_exit_routine"><strong>User Exit Routine</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A user exit routine assumes control at a defined
                     <a href="glossary.htm#user_exit">user exit</a> to manipulate data or make
                     decisions. Usually, a sample user exit is delivered in source form. The
                     instructions contained in the user exit have to be written or adjusted by the
                     user. Most user exit routines take advantage of the Natural language; a small
                     subset has to be written in Assembler language on mainframe systems and C on
                     non-mainframe systems.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="Userview"><strong>Userview</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Userviews are logical views of master files defined
                     for use in the data declaration sections of programs. The number and sequence
                     of fields in a userview can differ from the master files and - within certain
                     compatibility rules - certain attributes of fields in userviews can differ from
                     the corresponding values at the physical/logical level.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>UTM = Universal Transaction Monitor</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Obsolete. Replaced by <a href="glossary.htm#openUTM"><em>open</em>UTM</a>.
            </p> 
                
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="V"></a><div><a name="v"></a></div> 
        
      <h2>V</h2> 
        
      <dl> 
             
             
         <dt><strong>Variable</strong></dt> 
             
         <dd> 
                 
            <p class="definition">See <a href="glossary.htm#system_variable"><dfn>System
                           Variable</dfn></a> and <a href="glossary.htm#user_defined_variable"><dfn>User-Defined
                           Variable</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Verification</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> A Predict object of type verification documents the
                     rules for the validation of field values. Natural processing rules can be
                     generated from Predict objects of type verification.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Version</strong></dt>
         <dd> 
                 
            <p class="definition">A product version is identified by the first two digits of the
                     versioning number. Software AG distinguishes between major and minor versions
                     according to the amount of functionality or technology added to the product.
                     All other digits indicate correction levels 
            </p> 
                 
            <p class="definition">In the product documentation, the notation
                     <var>vrs</var>, <var>vr</var> or simply
                     <var>v</var> is often used as placeholder for the current
                     product version, for example, in dataset or module names.
            </p> 
                  
                  
            <table border="1" class="color" cellpadding="3" width="97%"> 
                        
                      
               <tbody align="left" valign="top"> 
                          
                  <tr> 
                              
                     <th nowrap>Placeholder</th> 
                              
                     <th>Meaning</th> 
                              
                     <th>Definition</th> 
                             
                  </tr> 
                          
                  <tr> 
                              
                     <td><var>v</var></td> 
                              
                     <td>version</td> 
                              
                     <td> 
                        
                        <div><strong class="floating-title">Major Version</strong></div> 
                                  
                        <p>The first digit of the product version number indicates major
                           architecture and functionality implementation or enhancement that adds value to
                                      the product.
                        </p>
                     </td> 
                             
                  </tr> 
                          
                  <tr> 
                              
                     <td nowrap><var>r</var></td> 
                              
                     <td>release</td> 
                              
                     <td> 
                        
                        <div><strong class="floating-title">Minor Version</strong></div> 
                                  
                        <p>The second digit of the version number indicates new or enhanced
                           functionality that adds value to the product.
                        </p>
                     </td> 
                             
                  </tr> 
                          
                  <tr> 
                              
                     <td nowrap><var>s</var></td> 
                              
                     <td>system maintenance level</td> 
                              
                     <td> 
                        
                        <div><strong class="floating-title">Correction Level</strong></div> 
                                  
                        <p>Correction levels contain error corrections only, without new
                           functionality, including documentation of all modifications and repairs.
                        </p> 
                                  
                        <p>In case it is necessary to include functional changes into a
                           correction level, an exception handling process ensures that corresponding
                                      quality assurance activities are triggered. These functional changes are
                                      documented. The main target is to avoid impacts when you install such a
                                      correction level. 
                        </p> 
                                  
                        <p>The third number of a Natural version denotes the system
                                      maintenance level. 
                        </p> 
                                  
                        <p>On certain platforms supported by Natural, additional levels may
                                      exist, such as update package, patch level, service pack and hot fix.
                        </p>
                                  
                     </td> 
                             
                  </tr> 
                         
               </tbody> 
                     
            </table> 
                  
                
         </dd> 
             
             
             
         <dt><a name="view"><strong>View</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> See <a href="glossary.htm#Userview"><dfn>Userview</dfn></a>.
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>Virtual Machine</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Together with objects of type Network, Predict
                     objects of type Virtual Machine document the hardware and operating system
                     environment of a data processing system.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="VM"><strong>VM = Virtual Machine</strong></a></dt> 
             
         <dd> 
                 
            <ol> 
                     
               <li> 
                         
                  <p class="initem">A virtual data processing system that appears to be at the exclusive
                             disposal of a particular user, but whose functions are accomplished by sharing
                             the resources of a real data processing system.*
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">In <a href="glossary.htm#VM_ESA">z/VM</a>, the virtual
                             processors, virtual storage, virtual devices, and virtual channel subsystem
                             allocated to a single user. A virtual machine also includes any expanded
                             storage dedicated to it.*
                  </p> 
                        
               </li> 
                    
            </ol> 
                
         </dd> 
             
             
             
         <dt><strong>VM/CMS = Virtual Machine / Conversational Monitor System</strong></dt> 
             
         <dd> 
                 
            <p class="definition">An IBM system that integrates <a href="glossary.htm#CMS">CMS</a>
                     in <a href="glossary.htm#VM">VM</a> environments to accommodate a high
                     number of interactive users.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="VM_ESA"><strong>z/VM = Virtual Machine / Enterprise Systems Architecture</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">An IBM licensed program that manages the resources of a single computer
                     so that multiple computing systems appear to exist. Each virtual machine is the
                     functional equivalent of a real machine.*
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>VM/SP = Virtual Machine / System Product</strong></dt> 
             
         <dd> 
                 
            <p class="definition">The IBM operating system VM/SP supplies a virtual machine to each
                     logged-on user.*
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="VSAM"><strong>VSAM = Virtual Storage Access Method</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">An IBM access method to maintain records of different dataset
                     organizations: key-sequenced datasets (<a href="glossary.htm#KSDS">KSDS</a>), entry-sequenced datasets (<a href="glossary.htm#ESDS">ESDS</a>) or relative-record datasets (<a href="glossary.htm#RRDS">RRDS</a>).
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="VTAM"><strong>VTAM = Virtual Telecommunications Access Method</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">An application programming interface (API) for communicating with
                     Systems Network Architecture (<a href="glossary.htm#SNA">SNA</a>)
                     telecommunication devices and their users.
            </p> 
                
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="W"></a><div><a name="w"></a></div> 
        
      <h2>W</h2> 
        
      <dl> 
             
             
         <dt><strong>WTO = Write-to-Operator</strong></dt> 
             
         <dd> 
                 
            <p class="definition">An optional user-coded service that allows a message to be written to
                     the system console operator informing the operator of errors and unusual system
                     conditions that may need to be corrected.*
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="wff"><strong>Work File Format</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">Describes the structure of the data that is saved in the target file.
                     For example, the work file format ENTIRE CONNECTION writes two files:
                     <cite>.NCD</cite> and <cite>.NCF</cite>.
            </p> 
                 
            <p class="definition">For more information, see
                     <a href="../ops/ops-workfiles.htm#ops-work-formats">Work File
                  Formats</a> in the <cite>Operations</cite>
                     documentation.
            </p> 
                
         </dd> 
             
             
             
         <dt><a name="wft"><strong>Work File Type</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition">A file that is available to Natural, that writes a certain work file
                     format. For example, there are two different work files types that save data in
                     Entire Connection format. These file types are ENTIRE CONNECTION and
                     TRANSFER.
            </p> 
                 
            <p class="definition">For more information, see the profile parameter
                     <a href="../parms/work.htm"><code>WORK</code></a>.
            </p> 
                
         </dd> 
             
           
      </dl> 
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="X"></a><div><a name="x"></a></div> 
        
      <h2>X</h2> 
        
      <dl> 
             
             
         <dt><strong>X-Arrays</strong></dt> 
             
         <dd> 
                 
            <p class="definition">X-arrays, or eXtensible Arrays, are arrays of which one can alter the
                     number of occurrences at runtime. This can help you manage memory more
                     efficiently. For example, you can use a large number of array occurrences for a
                     short time and then reduce memory when the application is no longer using the
                     array. See <a href="../pg/pg_defi_xarry.htm">X-Arrays</a> in the
                     <cite>Programming Guide</cite> for more information. 
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>XCF = Cross-systems Coupling Facility</strong></dt> 
             
         <dd> 
                 
            <p class="definition">A facility of IBM's operating system z/OS that provides some initial
                     MVS services needed to support a multi-system environment while still
                     maintaining a single system image. Systems coupled using XCF are known as a
                     <a href="glossary.htm#sysplex">Sysplex</a>.*
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>XML</strong></dt> 
             
         <dd> 
                 
            <p class="definition">Abbreviation for "Extensible Markup Language".</p> 
                
         </dd> 
             
             
             
         <dt><strong>XML Toolkit</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows:</em> Enables developers to process XML documents within
                     Natural. The toolkit includes a wizard which generates Natural source code and
                     provides the following features:
            </p> 
                 
            <ul> 
                     
               <li> 
                         
                  <p class="initem">Mapping Natural data definitions to DTDs;</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">Serialization;</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">Mapping DTDs to Natural data definitions;</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">Parsing an XML file and assigning its contents to a Natural data
                             structure.
                  </p> 
                        
               </li> 
                    
            </ul> 
                
         </dd> 
             
             
             
         <dt><a name="Xref_Data"><strong>XRef Data = Active Cross-References</strong></a></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Predict:</em> Xref data is stored in Predict for implemented
                     objects; it is stored independent of documentation objects. Predict's active
                     retrieval functions retrieve information from Xref data and from Predict
                     documentation objects to determine
            </p> 
                 
            <ul> 
                     
               <li> 
                         
                  <p class="initem">whether objects documented in the dictionary are not yet
                             implemented,
                  </p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">whether implemented members are not yet documented or</p> 
                        
               </li> 
                     
               <li> 
                         
                  <p class="initem">whether documentation data differs from the implementation.</p> 
                        
               </li> 
                    
            </ul> 
                  
                 
            <p class="definition">XRef data records for Natural objects are created by Natural when a
                     Natural object is cataloged. Xref data is generated when a programming object
                     is cataloged and the <code>XREF</code> parameter has been specified
                     accordingly. 
            </p> 
                
         </dd> 
             
             
             
         <dt><strong>XRef Evaluation</strong></dt> 
             
         <dd> 
                 
            <p class="definition"> <em>Windows:</em> The XRef Evaluation Plug-In is used to navigate
                     through cross-reference information created during
                     <code>CAT</code> or <code>STOW</code> commands in
                     the development server file. The information is displayed in a tree view in
                     Natural Studio. Both types of references - active and passive (i.e. referencing
                     and referenced) can be displayed. Navigating through the hierarchies of active
                     and passive references is possible within the tree-view. See the Single Point
                     of Development documentation.
            </p> 
                
         </dd> 
             
           
      </dl> 
        
        
       
      <div class="noprint">
         <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
      </div><a name="Z"></a><div><a name="z"></a></div> 
        
      <h2>Z</h2> 
        
      <dl> 
             
             
         <dt><strong>Zap</strong></dt> 
             
         <dd> 
                 
            <p class="definition">A product error correction for changing the contents of an executable
                     module at a specified address. Known as a patch in IBM terminology.
            </p> 
                
         </dd> 
             
           
      </dl> 
        
      
      <div class="noprint">
         <div class="nospy">
            <p><a href="glossary.htm#Top"><img src="../graphics/uparrow.png" alt="Top of page" height="17" width="17" border="0"></a></p>
            <table border="0" cellpadding="0" cellspacing="0" width="97%">
               <col width="15%">
               <col width="34%">
               <col width="48%">
               <tr>
                  <td class="footer"><img src="../graphics/blank.png" width="3" height="10">&nbsp;<a class="navig" target="_blank" href="http://www.softwareag.com">www.softwareag.com</a>&nbsp;
                  </td>
                  <td nowrap class="footer"><img src="../graphics/blank.png" width="3"><a class="navig" href="../general/legal.htm" target="_blank">Copyright &copy; Software AG 1992-2008. All rights reserved.&nbsp;</a></td>
                  <td class="bottomlinks" align="right" nowrap><img src="../graphics/blank.png" width="3"></td>
               </tr>
            </table>
         </div>
      </div>
   </body>
</html>