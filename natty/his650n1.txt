0001 ************************************************************************ 
0002 ** SUBPROGRAM: HIS350N1  PGMERS: Johnson 
0003 ** DATE: June 10, 2004 
0004 ** 
0005 ** AES Enrollment Driver 
0006 ** 
0007 ************************************************************************ 
0008 ** Latest Modifications - Scheduled For Production 
0009 ** =============================================== 
0010 ** MM/DD/YY    NAME      SCAN FOR    PURPOSE 
0011 ** --------  --------  ------------  ----------------------------------- 
0012 ** 05/26/08  SAMS      mws20080526   corrected end date bug track 1062 
0013 ** 05/16/08  SAMS      20080516      corrected ols age calc for spouse 
0014 ** 03/20/08  sams      mws20080320   bug tracker 797 
0015 ** 03/05/08  nolff     ron20080305 
0016 ** 02/28/08  sams      MWS20080228   bug tracker  721 
0017 ** 02/27/08  sams      MWS20080227   ALLOW PREV DEPENDENT OF ACTIVE EMP 
0018 **                     TO BE ADDED AS A SUBSCRIBER 
0019 ** 02/26/08  sams      MWS20080226   ALLOW NEW ENROLL OF PT TO FT AND 
0020 **                                   FT TO PT TO WORK TO ALLOW ENTRY 
0021 **                                   OF COVERAGES FOR DEPENDENTS. 
0022 ** 02/26/08  sams      MWS20080226A  EIP bug tracker 723 
0023 ** 02/25/08  SAMS      MWS20080225   Commented out lines 712 thru 
0024 **                     736 to prevent requirements for student certs 
0025 **                     for all break in coverage situations. 
0026 ** 02/13/08  SAMS      mws20080213   bug tracker 705 
0027 ** 02/12/08  SAMS      mws20080212   bug tracker 704 
0028 ** 01/29/08  SAMS      mws20080129   bug tracker 671 
0029 ** 11/06/07  Dinsmore  gsd20071106c  Bug Tracker 656 
0030 ** 11/06/07  Dinsmore  gsd20071106b  Bug Tracker 655 
0031 ** 11/06/07  Dinsmore  gsd20071106a  Bug Tracker 654 
0032 ** 09/25/07  Dinsmore  gsd20070925b  Bug Tracker 617 
0033 ** 09/25/07  Dinsmore  gsd20070925a  Require SSN if over 1 year, not 2 
0034 ** 09/24/07  Dinsmore  gsd20070924a  Bug Tracker 601 
0035 ** 09/21/07  Dinsmore  gsd20070915   Bug Tracker 578 
0036 ***** MIGRATED TO PRODUCTION SEPTEMBER 17, 2007 ***** 
0037 ** 09/15/07  Dinsmore  gsd20070915   Improve performance 
0038 ** 09/13/07  Dinsmore  60020070913a  Bug tracker 511 
0039 ** 09/12/07  Dinsmore  gsd20070912a  Bug tracker 465 
0040 ** 09/11/07  Dinsmore  gsd20070911b  Bug tracker 506 
0041 ** 09/11/07  Dinsmore  gsd20070911a  Req Student Cert when changing from 
0042 **                                   Under 19 to Full-time Student 
0043 ** 09/10/07  Dinsmore  gsd20070910a  Bug Tracker 170 
0044 ** 09/07/07  Dinsmore  gsd20070907a  Req Creditable Coverage supp doc 
0045 ** 09/05/07  Dinsmore  gsd20070905a  If module(5) = 'SUBSCR', change 
0046 **                                   suspense-code to 'S' 
0047 ** 08/31/07  Dinsmore  gsd20070831b  Bug Tracker 170 
0048 ** 08/31/07  Dinsmore  gsd20070831a  Fix covered deps notification 
0049 ** 08/30/07  Dinsmore  gsd20070830b  Change Plan-Cat to Plan 
0050 ** 08/30/07  Dinsmore  gsd20070830a  Stop state emp dep from hlth & dntl 
0051 ** 08/20/07  Dinsmore  gsd20070820a  Increase OL from 30 to 50 
0052 ** 08/16/07  Dinsmore  gsd20070816a  Require supp doc for former spouses 
0053 ** 08/14/07  Dinsmore  gsd20070814a  No pre-ex for adopted children 
0054 ** 08/06/07  Dinsmore  gsd20070806   Remove periods from suffix 
0055 ** 07/31/07  Dinsmore  gsd20070731   Allow GET by BIN 
0056 ** 05/16/07  Dinsmore  gsd20070516a  EIP Bug Tracker Issue 20 
0057 **                                   1 mo break requires Student Cert 
0058 ** 03/21/07  Dinsmore  gsd20070321a  Allow for BEN-SEQ-NUM(*) 
0059 ** 02/13/07  Dinsmore  gsd20070213b  EIP Bug Tracker Issue 19 
0060 **         **commented out**         SLTD Waiver should not cancel 
0061 ** 02/09/07  Dinsmore  gsd20070209a  EIP Bug Tracker Issue 32 
0062 **                                   Add Stdnt Cert Supp Doc CE-HH/US 
0063 ** 02/02/07  Dinsmore  gsd20070202b  EIP Bug Tracker Issue 50 
0064 **                                   Remove Custody form 
0065 ** 02/02/07  Dinsmore  gsd20070202a  EIP Bug Tracker Issue 34 
0066 **                                   Remove Diff Last Name form 
0067 ** 12/01/06  Dinsmore  gsd20061201a  On Bene Chg, only do enrollee and 
0068 **                                   bene edits 
0069 ************************************************************************ 
0070 DEFINE DATA 
0071 PARAMETER USING his650A1  
0072 LOCAL USING HIS001L3 /* GENERAL-WORK-FIELDS 
0073 lOCAL USING HTB100L0 /* TABLE-MAST VIEW OF HIS-TABLE 
0074 LOCAL USING HIS100L0 /* SUBSCR-MAST VIEW OF HIS-SUBSCR-MASTER 
0075 LOCAL USING HIS120L0 /* DEPEND-MAST VIEW OF HIS-DEPEND-MASTER 
0076 LOCAL USING mws355a1 /* subscriber module  
0077 LOCAL USING HIS356A1 /* coverage module 
0078 LOCAL USING HIS357A1 /* dependent module 
0079 LOCAL USING HIS358A1 /* beneficiary module 
0080 LOCAL USING mws369A1 /* suspense object pda  
0081 LOCAL USING HTB808A1 /* RETREIVE PLAN BEG AND END DATES 
0082 LOCAL USING HIS369A2 /* suspense object pda-r 
0083 LOCAL USING HIS390a1 /* subscr-master hold 
0084 LOCAL USING mws350A2 /* enrollment date conversion  
0085 LOCAL USING HIS808A1 /* CALCULATE PRE-EX-DATE for Subscriber 
0086 LOCAL USING HIS808A2 /* NOE ENTRY DEPENDENT END DATE 
0087 LOCAL USING CDAOBJ2 
0088 LOCAL USING CDPDA-M 
0089 LOCAL 
0090 1 ACT-DEPEND-MAST VIEW OF HIS-DEPEND-MASTER 
0091   2 DEP-SEQ-NUM 
0092   2 DEP-SUBSCRIBER-SSN 
0093   2 DEP-HLTH-STATUS 
0094   2 DEP-HLTH-EFF-DATE 
0095   2 DEP-HLTH-END-DATE 
0096   2 DEP-DNTL-STATUS 
0097   2 DEP-DNTL-EFF-DATE 
0098   2 DEP-DNTL-END-DATE 
0099   2 DEP-DL-STATUS 
0100   2 DEP-DL-EFF-DATE 
0101   2 DEP-DL-END-DATE 
0102   2 DEP-OLS-STATUS 
0103   2 DEP-OLS-EFF-DATE 
0104   2 DEP-OLS-END-DATE 
0105 1 SUBSCR VIEW OF HIS-SUBSCR-MASTER 
0106   2 hlth-status                                 /* gsd20070907a 
0107   2 ol-status                                   /* gsd20070927a 
0108 1 SUBSCR-PLAN-CAT VIEW OF HIS-SUBSCR-MASTER 
0109   2 HLTH-PLAN-CATEGORY 
0110 1 ACT-SUBSCR-MAST  VIEW OF HIS-SUBSCR-MASTER 
0111   2 SUBSCRIBER-TYPE 
0112   2 EMPLOYER-GROUP-ID 
0113   2 HLTH-STATUS 
0114   2 DNTL-STATUS 
0115   2 DL-STATUS 
0116   2 SL-STATUS 
0117   2 LTD-STATUS 
0118   2 OL-STATUS 
0119   2 OL-END-DATE 
0120   2 OLS-STATUS 
0121   2 SLTD-STATUS 
0122 1 DEP VIEW OF HIS-DEPEND-MASTER 
0123   2 DEP-SUBSCRIBER-SSN 
0124   2 DEP-SSN 
0125   2 DEP-LAST-NAME 
0126   2 DEP-FIRST-NAME 
0127   2 DEP-DATE-OF-BIRTH 
0128   2 DEP-ELIGIBILITY 
0129   2 dep-hlth-status 
0130   2 dep-dntl-status 
0131   2 dep-dl-status 
0132   2 dep-ols-status 
0133   2 dep-hlth-eff-date 
0134   2 dep-dntl-eff-date 
0135   2 dep-dl-eff-date 
0136   2 dep-ols-eff-date 
0137 1 DEPEND VIEW OF HIS-DEPEND-MASTER 
0138   2 DEP-SUBSCRIBER-SSN 
0139   2 DEP-RELATION 
0140   2 DEP-DL-STATUS 
0141 1 dep-supp-doc VIEW OF HIS-DEPEND-MASTER 
0142   2 dep-subscriber-ssn 
0143   2 dep-relation 
0144 1 EBS-INTERNET-SECURITY VIEW OF EBS-INTERNET-SECURITY 
0145   2 ACC-GROUPS     (99) 
0146   2 ALL-SSN-ACCESS 
0147 1 HIS-SUSPENSE-TRANS VIEW OF HIS-SUSPENSE-TRANS-TEMP 
0148   2 SSN 
0149   2 TRANSACTION-CODE 
0150   2 SUSPENSE-CODE 
0151   2 trxn-type 
0152   2 employer-group-id 
0153 1 RET-ACC-VIEW  VIEW OF HIS-RET-ACC-MSTR 
0154   2 BEG-BALANCE           (N6.2/12) 
0155   2 PAYMENTS-RECVD        (N6.2/12) 
0156   2 DISBURSEMENTS         (N6.2/12) 
0157   2 ACCTING-ADJUST        (N6.2/12) 
0158   2 TOTAL-PREMIUMS-BILLED (N6.2/12) 
0159 1 SUBSCR-ADDR VIEW OF HIS-SUBSCR-MASTER /* for Address Changes 
0160   2 LAST-NAME 
0161   2 FIRST-NAME 
0162   2 MIDDLE-INITIAL 
0163   2 SUFFIX 
0164   2 STREET-1 
0165   2 STREET-2 
0166   2 CITY 
0167   2 STATE 
0168   2 ZIP 
0169   2 ZIP-PLUS-4 
0170   2 COUNTY-CODE 
0171   2 COUNTRY-NAME 
0172   2 TELEPHONE-NUMBER 
0173 1 SUBSCR-SP VIEW OF HIS-SUBSCR-MASTER /* for LTC Spouse 
0174   2 HLTH-STATUS 
0175   2 DNTL-STATUS 
0176   2 DL-STATUS 
0177   2 OL-STATUS 
0178   2 OLS-STATUS 
0179 1 subscr-bin view of his-subscr-master 
0180   2 ssn 
0181 * 
0182 1 #ON-FILE-INDICATORS 
0183   2 #NOT-ACTIVELY-EMPLOYED (L) 
0184   2 #ACT-ON-SUBSCR-HLTH    (L) 
0185   2 #ACT-ON-SUBSCR-DNTL    (L) 
0186   2 #ACT-ON-SUBSCR-DL      (L) 
0187   2 #ACT-ON-SUBSCR-OLS     (L) 
0188   2 #ACT-ON-SUBSCR-LTC     (L) 
0189   2 #DEP-ON-LTD            (L) 
0190   2 #ON-OL-WAIVER          (L) 
0191 1 #16TH-YR                 (A4) 
0192 1 REDEFINE #16TH-YR 
0193   2 #16TH-YRN              (N4) 
0194 1 #16TH-BD                 (A8) 
0195 1 #NUM1                    (N2) 
0196 1 #NUM2                    (N2) 
0197 1 #NUM3                    (N2) 
0198 1 #TABLE-KEY               (A11) 
0199 1 #J                       (I4) 
0200 1 #x                       (I4) 
0201 1 #w                       (I2) 
0202 1 #GRP-FOUND               (L) 
0203 1 #NOT-ON-FILE             (L)   INIT <FALSE> 
0204 1 #ON-SLTD-WAIVER          (L) 
0205 1 #ON-LTC-WAIVER           (L) 
0206 1 #ON-LTC-SP-WAIVER        (L) 
0207 1 #RET-BILL-DTE            (D) 
0208 1 #BILL-YEAR               (A4) 
0209 1 REDEFINE #BILL-YEAR 
0210   2 #BILL-YEAR-N           (N4) 
0211 1 #BILL-DATE               (D) 
0212 1 #1231-DATE               (A8) /* Dec 31 of Bill Year 
0213 1 #1231-LAST-YEAR          (A8) /* Dec 31 of Year Previous to Eff Date 
0214 1 REDEFINE #1231-LAST-YEAR 
0215   2 #1231-LAST-YEAR-N      (N8) 
0216   2 REDEFINE #1231-LAST-YEAR-N 
0217     3 #1231-LAST-YEAR-YYYY (N4) 
0218     3 #1231-LAST-YEAR-MMDD (N4) 
0219 1 #BILL-MO                 (A2) 
0220 1 #MO                      (N2) 
0221 1 #MO-NAME                 (A9) 
0222 1 #FISCAL-YEAR             (A9) 
0223 1 #RET-KEY                 (A13) 
0224 1 #ACC-AMT                 (N7.2) 
0225 1 #PLAN-CAT                (A3) 
0226 1 REDEFINE #PLAN-CAT 
0227   2 #PLAN                  (A2) 
0228   2 REDEFINE #PLAN 
0229     3 #PLAN-1              (A1) 
0230     3 #PLAN-2              (A1) 
0231   2 #CAT                   (A1) 
0232 1 #DNTL-CAT                (A1) 
0233 1 #DATE-CHECK              (N8) 
0234 1 REDEFINE #DATE-CHECK 
0235   2 #YYYY                  (N4) 
0236   2 #MM                    (N2) 
0237   2 #DD                    (N2) 
0238 1 REDEFINE #DATE-CHECK                          /* gsd20070806a 
0239   2 #DATE-CHECK-A          (A8) 
0240 1 #date-check-d            (d)                  /* gsd20070806a 
0241 1 #DEPEND-STATUS 
0242   2 #SP-AGE                (P8) 
0243   2 #SAME-SEX              (L)   INIT<FALSE> 
0244   2 #SPOUSE-EXISTS         (L)   INIT<FALSE> 
0245   2 #FOUND-SPOUSE-H        (L)   INIT<FALSE> 
0246   2 #FOUND-SPOUSE-D        (L)   INIT<FALSE> 
0247   2 #FOUND-SPOUSE-OLS      (L)   INIT<FALSE> 
0248   2 #FOUND-SPOUSE-LTC      (L)   INIT<FALSE> 
0249   2 #FOUND-DEP-H           (L)   INIT<FALSE> 
0250   2 #FOUND-DEP-D           (L)   INIT<FALSE> 
0251   2 #FOUND-DEP-DL          (L)   INIT<FALSE> 
0252   2 #SPOUSE-MEDICARE       (A11) 
0253 1 #COMP-AGE                (N8) 
0254 1 #OL-AGE-GRP              (A2) 
0255 1 #MAX-OL-COVER            (N6) 
0256 1 #MAX-OLS-COVER           (N6) 
0257 1 #SPOUSE-DOB-N            (N8) 
0258 1 #DEP-SUBSCR-TYPE         (A7) 
0259 1 #DEP-REC-FOUND           (A1) 
0260 1 #DEP-FOUND-ARRAY (L/15) 
0261 1 #DEP-HLTH-EFF-DATE-N     (N8) 
0262 1 REDEFINE #DEP-HLTH-EFF-DATE-N 
0263   2 #DEP-HLTH-EFF-DATE     (A8) 
0264 1 #DEP-HLTH-END-DATE-N     (N8) 
0265 1 REDEFINE #DEP-HLTH-END-DATE-N 
0266   2 #DEP-HLTH-END-DATE     (A8) 
0267 1 #DEP-DNTL-EFF-DATE-N     (N8) 
0268 1 REDEFINE #DEP-DNTL-EFF-DATE-N 
0269   2 #DEP-DNTL-EFF-DATE     (A8) 
0270 1 #DEP-DNTL-END-DATE-N     (N8) 
0271 1 REDEFINE #DEP-DNTL-END-DATE-N 
0272   2 #DEP-DNTL-END-DATE     (A8) 
0273 1 #DEP-DL-EFF-DATE-N       (N8) 
0274 1 REDEFINE #DEP-DL-EFF-DATE-N 
0275   2 #DEP-DL-EFF-DATE       (A8) 
0276 1 #DEP-DL-END-DATE-N       (N8) 
0277 1 REDEFINE #DEP-DL-END-DATE-N 
0278   2 #DEP-DL-END-DATE       (A8) 
0279 1 #DEP-OLS-EFF-DATE-N      (N8) 
0280 1 REDEFINE #DEP-OLS-EFF-DATE-N 
0281   2 #DEP-OLS-EFF-DATE      (A8) 
0282 1 #DEP-OLS-END-DATE-N      (N8) 
0283 1 REDEFINE #DEP-OLS-END-DATE-N 
0284   2 #DEP-OLS-END-DATE      (A8) 
0285 1 #BEN-IDX                 (N2) INIT <1> 
0286 1 #WORKING-FIELDS 
0287   2 #BEN-BL-PRIM-COUNT     (N4) 
0288   2 #BEN-BL-PRIM-PERCENT   (N4) 
0289   2 #BEN-OL-PRIM-COUNT     (N4) 
0290   2 #BEN-OL-PRIM-PERCENT   (N4) 
0291   2 #COMPUTE-BL-PRIM       (L)  INIT<FALSE> 
0292   2 #COMPUTE-OL-PRIM       (L) 
0293   2 #COMPUTE-LTC-PRIM      (L) 
0294   2 #COMP-BL-PRIM-COUNT    (N4) 
0295   2 #COMP-BL-PRIM-PERCENT  (N3) 
0296   2 #COMP-OL-PRIM-COUNT    (N4) 
0297   2 #COMP-OL-PRIM-PERCENT  (N3) 
0298   2 #COMP-LTC-PRIM-COUNT   (N4) 
0299   2 #COMP-LTC-PRIM-PERCENT (N3) 
0300   2 #BEN-BL-CON-COUNT      (N4) 
0301   2 #BEN-BL-CON-PERCENT    (N4) 
0302   2 #BEN-OL-CON-COUNT      (N4) 
0303   2 #BEN-OL-CON-PERCENT    (N4) 
0304   2 #COMPUTE-BL-CON        (L) 
0305   2 #COMPUTE-OL-CON        (L) 
0306   2 #COMPUTE-LTC-CON       (L) 
0307   2 #COMP-BL-CON-COUNT     (N4) 
0308   2 #COMP-BL-CON-PERCENT   (N3) 
0309   2 #COMP-OL-CON-COUNT     (N4) 
0310   2 #COMP-OL-CON-PERCENT   (N3) 
0311   2 #COMP-LTC-CON-COUNT    (N4) 
0312   2 #COMP-LTC-CON-PERCENT  (N3) 
0313   2 #BEN-BL-PRIM-ENTERED   (L) 
0314   2 #BEN-BL-CON-ENTERED    (L) 
0315   2 #BEN-OL-PRIM-ENTERED   (L) 
0316   2 #BEN-OL-CON-ENTERED    (L) 
0317 1 #DATE-TRANSFER-A         (A8) 
0318 1 REDEFINE #DATE-TRANSFER-A 
0319   2 #DATE-TRANSFER-N       (N8) 
0320 1 #LAST-SEQ-NUM            (N2) 
0321 * 
0322 /* enrollment suspense fields 
0323 1 #NEW-SUSP-CODE           (A1) 
0324 1 #NEW-TRXN-CODE           (A2) 
0325 * 
0326 1 ERROR-HANDLING-FIELDS 
0327   2 #E-MSG                 (A100)  
0328   2 #E-FLD                 (A50) 
0329   2 #E-NDX                 (I4) 
0330 1 #W-MSG                   (A250) 
0331 * 
0332 /* New fields 
0333 1 #DT (D) 
0334 1 #6-MO-BRK        (L)  INIT <FALSE> /* 6 month for subscriber 
0335 1 #6-MO-BRK-DEP    (L)  INIT <FALSE> /* 6 month break 0or dependent 
0336 1 #ACADEMIC        (L)  INIT <FALSE> /* 
0337 1 #ALL-TERM        (L)  INIT <FALSE> 
0338 1 #ALPHA-CHECK     (A1) /* check first character of transaction-code 
0339 1 #BEG-D           (D)  /* prior-service-beg-date D format 
0340 1 #BREAK-IN-COV    (L)  INIT <FALSE> /* 
0341 1 #BREAK-IN-LTC    (L)  INIT <FALSE> /* 
0342 1 #CALC-DATE-N     (N8) /* 
0343 1 #CODE            (A10) 
0344 1 #COMP-D          (D)  /* compare-date for age checking 
0345 1 #COMP-DATE       (N8) 
0346 1 REDEFINE #COMP-DATE 
0347   2 #COMP-YYYY     (N4) 
0348   2 #COMP-MM       (N2) 
0349   2 #COMP-DD       (N2) 
0350 1 #COMP-LTC-SP-TOTAL-UNITS (N4) /* compare total ltc spouse units 
0351 1 #ORIG-LTC-SP-TOTAL-UNITS (N4) /* original total ltc spouse units 
0352 1 #COMP-LTC-TOTAL-UNITS    (N4) /* compare total ltc units 
0353 1 #ORIG-LTC-TOTAL-UNITS    (N4) /* original total ltc units 
0354 1 #DATES-MATCH     (L)  INIT <FALSE> /* 
0355 1 #DENY-DEP-DL     (L)  INIT<FALSE> 
0356 1 #DENY-DEP-LTC    (L)  INIT<FALSE> 
0357 1 #DENY-DEP-OLS    (L)  INIT<FALSE> 
0358 1 #DEP-AGE         (N3) /* age of dependent 
0359 1 #DEP-DOB-D       (D)  /* dependent date of birth 
0360 1 #DEP-DATE-OF-BIRTH-N (N8) 
0361 1 #DEP-ELIGIBILITY     (A2) 
0362 1 #DEP-NEW-ADD-PENDING (L) 
0363 1 #DEP-RELATION        (A4) 
0364 1 #orig-DEP-ELIGIBILITY     (A2)                /* gsd20070913a 
0365 1 #student-cert-req      (l)                    /* gsd20070913a 
0366 1 #DISPLAY-DATE1   (A10) 
0367 1 #DISPLAY-DATE2   (A10) 
0368 1 #DPH-DOB-A       (A8) 
0369 1 #DPH-DOB-D       (D) 
0370 1 #DPH-DOB-MMDD-A  (A4) 
0371 1 REDEFINE #DPH-DOB-MMDD-A 
0372   2 #DPH-DOB-MMDD-N(N4) 
0373 1 #SUB-DOB-A       (A8) 
0374 1 #SUB-DOB-D       (D) 
0375 1 #SUB-DOB-MMDD-A  (A4) 
0376 1 REDEFINE #SUB-DOB-MMDD-A 
0377   2 #SUB-DOB-MMDD-N(N4) 
0378 1 #DOC             (N2) 
0379 1 #DOC-COUNT       (N2) 
0380 1 #DOC-TYPE        (A2) 
0381 1 #EFF-A           (A8) /* effective date 
0382 1 REDEFINE #EFF-A 
0383   2 #EFF-YYYY-A    (A4) 
0384   2 REDEFINE #EFF-YYYY-A 
0385     3 #EFF-YYYY-N  (N4) 
0386   2 #EFF-MMDD-A    (A4) 
0387   2 REDEFINE #EFF-MMDD-A 
0388     3 #EFF-MM-N    (N2) 
0389     3 #EFF-DD-A    (A2) 
0390 1 REDEFINE #EFF-A 
0391   2 #EFF-N         (N8) /* effective date 
0392 1 #EFF-D           (D)  /* effective date 
0393 1 #EFF-DATES-MATCH (L)  INIT <FALSE> /* effective dates match 
0394 1 #END-D           (D)  /* prior-service-end-date D format 
0395 1 #ESCAPE          (L)  INIT <FALSE> 
0396 1 #G               (N2) /* index for date format changes 
0397 1 #GENDER          (A6) /* gender 
0398 1 #HIRE-DATE       (N8) 
0399 1 REDEFINE #HIRE-DATE 
0400   2 #HIRE-YYYY     (N4) 
0401   2 #HIRE-MM       (N2) 
0402   2 #HIRE-DD       (N2) 
0403 1 #HIRE-SPAN       (I2) /* # of days since hire 
0404 1 #HOLD-EFF-DATE-N (N8) /* hold effective date so it doesn't get lost 
0405 1 #HOLD-EMP-GROUP  (A7) /* hold employer-group-id so it doesn't get lost 
0406 1 #MAX-SEQ-NUM1             (N2) 
0407 1 #MAX-SEQ-NUM2             (N2) 
0408 1 #MAX-USED                 (N2) 
0409 1 #MATCH                    (L) INIT <FALSE> 
0410 1 #LAST-DEP-EFF-DATE-D      (D)  /* most recent dep effective date 
0411 1 #LAST-DEP-EFF-DATE        (N8) /* most recent dep effective date 
0412 1 REDEFINE #LAST-DEP-EFF-DATE 
0413   2 #LAST-DEP-EFF-DATE-A    (A8) 
0414 1 #LAST-EFF-DATE            (D)  /* most recent subscr effective date 
0415 1 #LAST-EFF-DATE-A          (A8) /* most recent subscr effective date 
0416 1 REDEFINE #LAST-EFF-DATE-A 
0417   2 #LAST-EFF-DATE-YYYY     (A4) 
0418   2 REDEFINE #LAST-EFF-DATE-YYYY 
0419     3 #LAST-EFF-DATE-YYYY-N (N4) 
0420   2 #LAST-EFF-DATE-MMDD     (A4) 
0421   2 REDEFINE #LAST-EFF-DATE-MMDD 
0422     3 #LAST-EFF-DATE-MM     (N2) 
0423     3 #LAST-EFF-DATE-DD     (A2) 
0424 1 REDEFINE #LAST-EFF-DATE-A 
0425   2 #LAST-EFF-DATE-N        (N8) 
0426 1 #LEN                      (N2) 
0427 1 #HLTH-SELECTED            (L)  INIT<FALSE> 
0428 1 #OL-SELECTED              (L)  INIT<FALSE> 
0429 1 #NEW-PLAN-CAT             (A3) 
0430 1 REDEFINE #NEW-PLAN-CAT 
0431   2 #NEW-PLAN               (A2) 
0432   2 REDEFINE #NEW-PLAN 
0433     3 #NEW-PLAN-1           (A1) 
0434     3 #NEW-PLAN-2           (A1) 
0435   2 #NEW-CAT                (A1) 
0436 1 #DECEASED                 (L)  /* dependent is deceased 
0437 1 #NOT-YET-BORN             (L)  /* dependent was not born before today 
0438 1 #PHONE                    (A10) 
0439 1 #PHONE-TYPE               (A5) 
0440 1 #SKIP                     (L)  INIT <FALSE> 
0441 1 #SPOUSE-SSN               (A9) 
0442 1 #TERMINATED               (L)  INIT <FALSE> /* 
0443 1 #SAME                     (L)  INIT <FALSE> 
0444 1 #TYPE                     (A23) 
0445 1 #WORK-A                   (A8) /* work area for a-format dates 
0446 1 REDEFINE #WORK-A 
0447   2 #WORK-N                 (N8) /* work area for n-format dates 
0448 1 #WORK-D                   (D)  /* work area for d-format dates 
0449 1 #NEW-DATE                 (A8) 
0450 1 REDEFINE #NEW-DATE 
0451   2 #NEW-YYYY               (A4) 
0452   2 #NEW-MMDD               (A4) 
0453 1 #ORIG-MMDD                (A4) 
0454 1 #HOLD-VAL                 (N6) 
0455 1 #COVER-TYPE               (A24) 
0456 1 #DISPLAY-NUM              (A7) 
0457 1 #DISPLAY-VALUE            (A34) 
0458 1 #Q                        (N2) 
0459 1 #NON-QUAL                 (L) INIT <FALSE> /* Non-qualifying event 
0460 1 #QUAL                     (L) INIT <FALSE> /* Qualifying event 
0461 1 #SPEC-ELIG                (L) INIT <FALSE> /* Special Eligibility 
0462 1 #OL-INCREASE              (N2) /* Maximum increase to Opt Life 
0463 1 #CURR-DATE                (N8) 
0464 1 REDEFINE #CURR-DATE 
0465   2 #CURR-YYYY              (N4) 
0466   2 #CURR-MMDD              (A4) 
0467 1 #VALIDATE-EFF-DATE-N      (N8) 
0468 1 REDEFINE #VALIDATE-EFF-DATE-N 
0469   2 #VALIDATE-EFF-YYYY      (N4) 
0470   2 #VALIDATE-EFF-MM        (N2) 
0471   2 #VALIDATE-EFF-DD        (N2) 
0472 1 #HOLD-DEP-SSN             (A9) 
0473 1 #HOLD-SUSPENSE-INFO 
0474   2 SUSPENSE-TIMESTMP       (B8) 
0475   2 SUSPENSE-HELD-ID        (A12) 
0476   2 DATA-FROM-SUSPENSE      (L) 
0477   2 SUSPENSE-MESSAGE        (A100) 
0478   2 SUSPENSE-REASON         (A2/1:75) 
0479   2 SUSPENSE-OTHER-DESC     (A40/1:10) 
0480 *                        /* Fields associated with HIS380N3 
0481 1 #DATE-FLD-N               (N8) CONST <0> 
0482 1 #DATE-FLD-A               (A8) CONST <' '> 
0483 1 #DATE-FLD-D               (D)   /* 
0484 1 #DATE-FLD-NM              (A45) /* Date field name for messaging 
0485 1 #BLANK-INDEX              (N2) 
0486 1 #SEQ-MATCH                (L)   INIT<FALSE> 
0487 * 
0488 1 #edit-for-update          (l)  init<FALSE> 
0489 1 #PT1 (N2) 
0490 1 #PT2 (A80) 
0491 1 #age1 (n2)                                    /* gsd20070207a 
0492 1 #age2 (n2)                                    /* gsd20070207a 
0493 1 #SUFFIX(A3)                                   /* gsd20070806 
0494 1 REDEFINE #SUFFIX 
0495   2 #SUFF-NAME (A1/3) 
0496 1 #p           (n1) 
0497 1 #no-transfer (l)                              /* gsd20070910a 
0498 1 #sp-med-num (a11) 
0499 1 #dep-med-num (a11) 
0500 END-DEFINE 
0501 * FORMAT (1) LS=133 PS=65 
0502 * DEFINE PRINTER (1) 
0503 * ASSIGN #PT1 = 1 
0504 * ASSIGN #PT2 = '-onb -din440001' 
0505 * CALLNAT 'HTB111N2' #PT1 #PT2 
0506 *********************************************************************** 
0507 * Error Handling 
0508 *********************************************************************** 
0509 /* 'Program' will always display HIS350N1, which may not be true, but 
0510 /* 'Error Line:' and 'Error Number:' are correct for whichever module 
0511 /* actually has the error 
0512 ON ERROR 
0513   #E-MSG := 'Error - Contact System Administrator with this info:' 
0514   PERFORM ADD-ERROR 
0515   COMPRESS 'Date:' *DATU 'Time:' *TIME INTO #E-MSG 
0516   PERFORM ADD-ERROR 
0517   COMPRESS 'Program:' *PROGRAM '~ Error Line:' *ERROR-LINE 
0518     '~ Error Number:' *ERROR-NR INTO #E-MSG 
0519   PERFORM ADD-ERROR 
0520   ESCAPE ROUTINE 
0521 END-ERROR /* (0512) 
0522 * 
0523 RESET HIS350A1.ERROR-INFO HIS350A1.MESSAGE HIS350A1.SUSPENSE-MESSAGE 
0524   HIS350A1.HAS-WARNING HIS350A1.WARNING-MESSAGE(*) 
0525   HIS350A1.CRITICAL-ERROR 
0526 * 
0527 INCLUDE mws350C1 /* translate alpha fields to upper case  
0528 * 
0529 CALLNAT 'KTB804NN' /* GET CURRENT BILL DATE FOR "ACTIVES" 
0530   #PROCESS-ERROR #BILL-DATE 
0531 * 
0532 IF HIS350A1.ACTION = 'GET' /* SLJ 
0533     AND HIS350A1.DATA-FROM-SUSPENSE 
0534   RESET HIS350A1.DATA-FROM-SUSPENSE 
0535 END-IF 
0536 * 
0537 **if his350a1.change-reason = 'SL' /* gsd20070213b start 
0538 **    and his350a1.change-reason-ext = 'CS' 
0539 **  #e-msg := 'Subscriber is in waiver status.  Unable to cancel.' 
0540 **  perform add-error 
0541 **end-if /* gsd20070213b end 
0542 * 
0543 DECIDE ON FIRST VALUE OF HIS350A1.ACTION 
0544   VALUE 'GET' 
0545     if his350a1.ssn = ' '                       /* gsd20070731 start 
0546         and his350a1.bin ne ' ' 
0547       perform get-ssn 
0548     end-if                                      /* gsd20070731 end 
0549     PERFORM CHECK-SUBSCRIBER-STATUS 
0550     PERFORM SET-EMPLOYMENT-STATUS 
0551     PERFORM SET-EMPLOYMENT-STATUS-OPTIONS 
0552     IF HIS350A1.HAS-ERROR 
0553         OR HIS350A1.SSN-NOT-ON-FILE 
0554         OR HIS350A1.DATA-FROM-SUSPENSE 
0555       ESCAPE ROUTINE 
0556     END-IF 
0557     PERFORM MODULE-ACTIONS 
0558     IF HIS350A1.TRXN-TYPE = 'EN' 
0559         AND (#NOT-ON-FILE 
0560         OR HIS350A1.ON-DEPEND-FILE) 
0561       HIS350A1.SUBSCRIBER-TYPE := 'AR' 
0562     END-IF 
0563 /* if trnx-type=EN, check for suspense record.  If found, 
0564 /* overlay the existing data retrieved from the modules. 
0565     PERFORM CHECK-FOR-SUSPENSE-RECORD 
0566     IF HIS350A1.TRXN-TYPE = 'EN' 
0567         AND NOT HIS350A1.DATA-FROM-SUSPENSE 
0568       RESET HIS350A1.SALARY HIS350A1.DATE-HIRED-N HIS350A1.SLTD-SALARY 
0569     END-IF 
0570 * 
0571   VALUE 'EDIT' 
0572     IF HIS350A1.DATE-HIRED-N = 0 
0573       and his350a1.subscriber-type = 'AR'  
0574       #E-MSG := 'Date of Hire is required before you can continue' 
0575       #E-FLD := 'DATE-HIRED-N' 
0576       PERFORM ADD-ERROR 
0577       ESCAPE ROUTINE immediate 
0578     end-if 
0579     IF HIS350A1.MODULE(*) = 'DEMOGRAPHIC' 
0580       PERFORM COMPUTE-EFF-DATE 
0581     END-IF 
0582     if HIS350A1.change-reason = 'AE' or = 'OE'          /*mws20080825  
0583        and his350a1.user-id = 'BINUSER'       /*mws20080825  
0584        and his350a1.subscriber-type ne 'AR'  
0585        if his350a1.subscriber-type ne 'AR'  
0586           reset his350a1.employment-status  
0587        end-if  
0588        ignore                              /*mws20080825  
0589     else                                  /*mws20080825 
0590        HIS350A1.SUBSCRIBER-TYPE := 'AR' 
0591     end-if                                /*mws20080825 
0592     PERFORM MODULE-ACTIONS 
0593     if HIS350A1.MODULE(1) = 'DEMOGRAPHIC' 
0594         and HIS350A1.MODULE(2) = 'DEPENDENT' 
0595         and HIS350A1.MODULE(3) = 'COVERAGE' 
0596         and HIS350A1.MODULE(4) = 'BENEFICIARY' 
0597       reset HIS350A1.SUPPORTING-DOC-TYPE(*) 
0598       IF HIS350A1.CHANGE-REASON <> ' ' 
0599         PERFORM SUPPORTING-DOC /* does change reason warrant supp doc 
0600       END-IF 
0601       for #i 1 15 
0602         if his350a1.dep-seq-num(#i) = 0         /* gsd20070915 start 
0603           escape bottom 
0604         end-if                                  /* gsd20070915 end 
0605         IF HIS350A1.DEP-NEW-ADD-PENDING(#I) /* what if eligibility changes 
0606             or (HIS350A1.TRXN-TYPE = 'EN' 
0607             and HIS350A1.subscr-transfer = ' ' /* ) 
0608             or (HIS350A1.DEP-RELATION(*) = mask(.'1B')  /* gsd20070816a  
0609                 and his350a1.change-reason ne 'AE')  
0610             and (his350a1.dep-hlth-pending-st(#I) = 'A1' 
0611             or his350a1.dep-hlth-status(#I) = 'A1' 
0612             or his350a1.dep-dntl-pending-st(#I) = 'A1' 
0613             or his350a1.dep-dntl-status(#I) = 'A1' 
0614             or his350a1.dep-dl-pending-st(#I) = 'A1' 
0615             or his350a1.dep-dl-status(#I) = 'A1' 
0616             or his350a1.dep-ols-pending-st(#I) = 'A1' 
0617             or his350a1.dep-ols-status(#I) = 'A1')) 
0618           #DEP-RELATION := HIS350A1.DEP-RELATION(#I) 
0619           #DEP-ELIGIBILITY := HIS350A1.DEP-eligibility(#I) 
0620           #student-cert-req := FALSE /* gsdtest 
0621           find (1) dep with dep-subscriber-ssn = his350a1.ssn /* gsd20070913a start 
0622               where dep.dep-ssn = his350a1.dep-ssn(#i) 
0623             if no 
0624               #student-cert-req := TRUE 
0625               escape bottom 
0626             end-norec 
0627             if dep.DEP-eligibility = mask('2'.) 
0628               #student-cert-req := FALSE 
0629             else 
0630               #student-cert-req := TRUE 
0631             end-if 
0632             #orig-DEP-ELIGIBILITY := dep.DEP-eligibility 
0633           end-find                              /* gsd20070913a end 
0634           PERFORM CHECK-SUPP-DOC /* does elig/relation warrant supp doc 
0635         END-IF /* (0602) 
0636         if his350a1.DEP-ELIGIBILITY(#i) = MASK('2'.) 
0637 **        find (1) dep with dep-ssn = his350a1.dep-ssn(#i) /* gsd20070915 start 
0638 **            where dep-subscriber-ssn = his350a1.ssn 
0639           find (1) dep with dep-subscriber-ssn = his350a1.ssn 
0640               where dep.dep-ssn = his350a1.dep-ssn(#i) /* gsd20070915 end 
0641 /* gsd20070516a start 
0642 *           #eff-n := his350a1.effective-date-n 
0643 *           move edited #eff-a to #eff-d(em=yyyymmdd) 
0644             if (his350a1.dep-hlth-pending-st(#i) = 'A1' 
0645                 or his350a1.dep-dntl-pending-st(#i) = 'A1' 
0646                 or his350a1.dep-dl-pending-st(#i) = 'A1' 
0647                 or his350a1.dep-ols-pending-st(#i) = 'A1')  
0648                 and (his350a1.dep-hlth-status(#i) ne 'A1' 
0649                 and his350a1.dep-dntl-status(#i) ne 'A1' 
0650                 and his350a1.dep-dl-status(#i) ne 'A1' 
0651                 and his350a1.dep-ols-status(#i) ne 'A1')  
0652               reset #last-dep-eff-date-d 
0653               #doc-type := 'SC'                 /* gsd20070912a start 
0654               perform add-supporting-doc        /* gsd20070912a end 
0655               decide for every condition 
0656                 when dep.dep-hlth-eff-date gt #last-dep-eff-date-d 
0657                   #last-dep-eff-date-d := dep.dep-hlth-eff-date 
0658                 when dep.dep-dntl-eff-date gt #last-dep-eff-date-d 
0659                   #last-dep-eff-date-d := dep.dep-dntl-eff-date 
0660                 when dep.dep-dl-eff-date gt #last-dep-eff-date-d 
0661                   #last-dep-eff-date-d := dep.dep-dl-eff-date 
0662                 when dep.dep-ols-eff-date gt #last-dep-eff-date-d 
0663                   #last-dep-eff-date-d := dep.dep-ols-eff-date 
0664                 when any 
0665                   #break-in-cov := FALSE 
0666                   move edited #last-dep-eff-date-d(em=yyyymmdd) 
0667                     to #last-eff-date-a 
0668                   #eff-n := his350a1.effective-date-n 
0669                   perform check-for-break 
0670                   if #BREAK-IN-COV = TRUE /* gsd20070508a start 
0671                     #DEP-RELATION := HIS350A1.DEP-RELATION(#I) 
0672                     #DEP-ELIGIBILITY := HIS350A1.DEP-eligibility(#I) 
0673                     perform check-supp-doc 
0674                   end-if /* gsd20070508a end 
0675                 when none ignore 
0676               end-decide /* (0649) 
0677             end-if /* gsd20070516a end 
0678           end-find 
0679         end-if /* (0636)                       /* gsd moved from below 
0680         if his350a1.DEP-ELIGIBILITY(#i) = MASK('2'.) /* gsd20070911a sta 
0681             and dep.DEP-ELIGIBILITY = mask('1'.) 
0682           #DOC-TYPE := 'SC' 
0683           PERFORM ADD-SUPPORTING-DOC 
0684         end-if                                       /* gsd20070911a end 
0685 */ MWS20080225 
0686 **      if dep.DEP-ELIGIBILITY = mask('1'.)     /* gsd20070820a start 
0687 **          or #break-in-cov /* break in coverage /* gsd20070516a 
0688 *       if #break-in-cov /* break in coverage   /* gsd20070820a end 
0689 **          and not(dep.DEP-ELIGIBILITY = mask('2'.)) /* gsd20070913a 
0690 **          and dep.DEP-ELIGIBILITY = mask('2'.) /* gsdtest 
0691 *         IF HIS350A1.HLTH-PLAN-CATEGORY = MASK('HT'.) /* TriCare 
0692 *           #DOC-TYPE := 'FT' 
0693 *           examine his350a1.supporting-doc-type(*) for 'FN' 
0694 *             giving index #doc 
0695 *           if #doc > 0 
0696 *             his350a1.supporting-doc-type(#doc) := 'FT' 
0697 *           else 
0698 *             PERFORM ADD-SUPPORTING-DOC 
0699 *           end-if 
0700 *         END-IF /* (0663) 
0701 *         IF NOT(HIS350A1.HLTH-PLAN-CATEGORY = MASK('HT'.)) /* Not TriCare 
0702 *           #DOC-TYPE := 'FN' 
0703 *           examine his350a1.supporting-doc-type(*) for 'FT' 
0704 *             giving index #doc 
0705 *           if #doc > 0 
0706 *             his350a1.supporting-doc-type(#doc) := 'FN' 
0707 *           else 
0708 *             PERFORM ADD-SUPPORTING-DOC 
0709 *           end-if 
0710 *         END-IF /* (0701) 
0711 *       end-if /* (0662) 
0712 *       end-if /* (0636) 
0713       end-for /* (0601) #i 
0714 * 
0715       if his350a1.prior-srvc-beg-date-n ne 0 /* gsd20070907a start 
0716           or his350a1.dep-prior-srvc-beg-date-n(*) ne 0 
0717         find (1) subscr with ssn = his350a1.ssn 
0718         end-find 
0719         if his350a1.hlth-status = 'A1' 
0720             and subscr.hlth-status ne 'A1' 
0721             and his350a1.prior-srvc-beg-date-n ne 0 
0722           #doc-type := 'CC' 
0723           perform add-supporting-doc 
0724         else 
0725           for #i 1 15 
0726             if his350a1.dep-prior-srvc-beg-date-n(#i) ne 0 
0727                 and his350a1.dep-hlth-pending-st(#i) = 'A1' 
0728               #doc-type := 'CC' 
0729               perform add-supporting-doc 
0730               escape bottom 
0731             end-if 
0732           end-for 
0733         end-if 
0734       end-if /* gsd20070907a end 
0735     END-IF /* (0590) 
0736 * 
0737   VALUE 'UPDATE' /* Apply Button 
0738     PERFORM SET-PART-TIME-IND /*set part-time-ind from employment-stat  us 
0739     HIS350A1.ACTION := 'EDIT' /* start code to handle update by JR 
0740     #edit-for-update := TRUE 
0741     PERFORM COMPUTE-EFF-DATE 
0742 **  HIS350A1.SUBSCRIBER-TYPE := 'AR'       /*mws20080825 
0743     IF HIS350A1.USER-ID = 'BINUSER'        /*mws20080825 
0744     and his350a1.change-reason = 'AE'          /*mws20080825 
0745     and his350a1.subscriber-type ne 'AR' 
0746       if his350a1.subscriber-type ne 'AR'  
0747         reset his350a1.employment-status 
0748       end-if 
0749         ignore                             /*mws20080825 
0750     else  
0751         HIS350A1.SUBSCRIBER-TYPE := 'AR'  /*mws20080825  
0752     end-if                                 /*mws20080825 
0753     PERFORM MODULE-ACTIONS 
0754     HIS350A1.ACTION := 'UPDATE' 
0755     #edit-for-update := FALSE 
0756     IF NOT HIS350A1.HAS-ERROR /* start code to handle update by JR 
0757       IF HIS350A1.TRXN-TYPE = 'EN' 
0758 /* Since we are not updating data directly, the enrollment trxn 
0759 /*   will be stored as a pending suspense transaction. 
0760 /* If the data originally came from suspense, it is probably 
0761 /*   suspense-code = 4, since this is part of the key, we need to 
0762 /*   delete this record then store a suspense-code = 6. Even if 
0763 /*   it equaled 6, we will delete & store the record again. 
0764         IF #NOT-ON-FILE 
0765           #NEW-TRXN-CODE := 'A1' 
0766         END-IF 
0767         IF HIS350A1.ON-DEPEND-FILE 
0768           #NEW-TRXN-CODE := 'A3' 
0769         END-IF 
0770         IF HIS350A1.SUBSCR-BEFORE 
0771           #NEW-TRXN-CODE := 'A2' 
0772         END-IF 
0773         if his350a1.user-id NE 'BINUSER'   /*MWS20080825 
0774         and his350a1.subscriber-type = 'AR' /*MWS20080825  
0775            IF HIS350A1.ADVANCE-KEYED 
0776              #NEW-SUSP-CODE := 'A' 
0777            ELSE 
0778              #NEW-SUSP-CODE := 'G' 
0779            END-IF 
0780 **      ELSE #NEW-SUSP-CODE := 'O'         /*MWS20080825  
0781         END-IF    /*mws20081007 stop setting susp = 0  
0782 ***     if his350a1.module(5) = 'SUBSCR'            /* gsd20070905a start  
0783 **        #NEW-SUSP-CODE := 'S'  
0784 **      end-if                                      /* gsd20070905a end  
0785 **      if his350a1.module(5) NE ' '  
0786 **        #NEW-SUSP-CODE := his350a1.module(5)  
0787 **      end-if  
0788 /* Reset SLTD Salary if no SLTD info was entered 
0789         IF HIS350A1.SLTD-SALARY GT 0 
0790             AND HIS350A1.SLTD-STATUS = MASK('T'.) OR = ' ' 
0791             AND HIS350A1.SLTD-COVER-LEVEL = ' ' 
0792           RESET HIS350A1.SLTD-SALARY 
0793         END-IF 
0794         FSM1. FIND SUBSCR-MAST WITH SSN = HIS350A1.SSN 
0795           IF NO RECORDS FOUND 
0796             #6-MO-BRK := FALSE 
0797             ESCAPE BOTTOM(FSM1.) 
0798           END-NOREC 
0799           PERFORM CHECK-TERMINATION-STATUS 
0800           IF *DATX - 180 > #LAST-EFF-DATE 
0801               AND #LAST-EFF-DATE NE 0 
0802             #6-MO-BRK := TRUE /* terminated for over 6 mos - no data ret urn 
0803           END-IF 
0804         END-FIND /* (0794) fsm1. 
0805         PERFORM SETUP-STORE-SUSPENSE 
0806       ELSE /* (0757) 'CH' HIS350A1.TRXN-TYPE 
0807         PERFORM COMPUTE-EFF-DATE 
0808   FSM5. 
0809   FIND SUBSCR-MAST WITH SSN = HIS350A1.SSN 
0810     move by name subscr-mast to his390a1 
0811   END-FIND /* (0809) fsm5. subscr-mast 
0812 /* The Modules 355n1 thru 358n1 are set up to update & store 
0813 /* data correctly (UPDATE action will actually update and not 
0814 /* suspend like this process does).  Instead of changing the 
0815 /* modules, this routine will store the suspense record as a 
0816 /* completed, pending transaction. 
0817         DECIDE FOR FIRST CONDITION 
0818           WHEN HIS350A1.MODULE(*) = 'DEMOGRAPHIC' 
0819             #NEW-TRXN-CODE := 'C1' 
0820           WHEN HIS350A1.MODULE(*) = 'BENEFICIARY' 
0821             #NEW-TRXN-CODE := 'C2' 
0822           WHEN HIS350A1.MODULE(*) = 'COVERAGE' 
0823             #NEW-TRXN-CODE := 'C3' 
0824           WHEN HIS350A1.MODULE(*) = 'DEPENDENT' 
0825             #NEW-TRXN-CODE := 'C5' 
0826           WHEN NONE /* 'REVIEW' 
0827             #NEW-TRXN-CODE := 'C1' 
0828         END-DECIDE /* (0807) 
0829         if his350a1.user-id NE 'BINUSER'   /*MWS20080825 
0830         and his350a1.subscriber-type = 'AR' /*MWS20080825  
0831            IF HIS350A1.ADVANCE-KEYED 
0832              #NEW-SUSP-CODE := 'A' 
0833            ELSE 
0834              #NEW-SUSP-CODE := 'G' 
0835            END-IF 
0836         END-IF        /*mws20081007 stop setting susp = 0  
0837 **      if his350a1.module(5) = 'SUBSCR'            /* gsd20070905a start  
0838 **        #NEW-SUSP-CODE := 'S'  
0839 **      end-if                                      /* gsd20070905a end  
0840 **      if his350a1.module(5) NE ' '  
0841 **        #NEW-SUSP-CODE := his350a1.module(5)  
0842 **      end-if  
0843 /* this is now a completed transaction, reset susp reasons 
0844         RESET HIS350A1.SUSP-OTHER-DESC(*) HIS350A1.SUSPENSE-REASON(*) 
0845         PERFORM SETUP-STORE-SUSPENSE 
0846       END-IF /* (0756) HIS350A1.TRXN-TYPE 
0847     END-IF /* (0757) NOT his350a1.has-error 
0848 * 
0849   VALUE 'SUSPEND' 
0850 /* save the entire transaction to suspense 
0851     PERFORM SET-PART-TIME-IND /* set part-time-ind from employment-stat 
0852 /* This data came from suspense, it could be a susp-code 4 or 6. 
0853 /* The record will be deleted and restored as a 4 
0854     #NEW-SUSP-CODE := 'X' 
0855     #NEW-TRXN-CODE := 'A1' 
0856 /* Reset SLTD Salary if no SLTD info was entered 
0857     IF HIS350A1.SLTD-SALARY GT 0 
0858         AND HIS350A1.SLTD-STATUS = MASK('T'.) OR = ' ' 
0859         AND HIS350A1.SLTD-COVER-LEVEL = ' ' 
0860       RESET HIS350A1.SLTD-SALARY 
0861     END-IF 
0862     PERFORM SETUP-STORE-SUSPENSE 
0863   NONE VALUE IGNORE 
0864 END-DECIDE /* (0543) 
0865 /* Groups beginning with '7' cannot have rates 
0866 IF NOT (HIS350A1.EMPLOYER-GROUP-ID = MASK('7'......)) 
0867   CALLNAT 'mws350n4' /* Calculate Rates  
0868     HIS350A1 
0869 END-IF 
0870 IF HIS350A1.ACTION = 'SUSPEND' OR = 'UPDATE' 
0871     AND NOT HIS350A1.HAS-ERROR 
0872   END TRANSACTION 
0873 END-IF 
0874 ************************************************************************ 
0875 DEFINE SUBROUTINE MODULE-ACTIONS 
0876 ************************************************************************ 
0877 DECIDE FOR EVERY CONDITION 
0878   WHEN HIS350A1.MODULE(*) = 'DEMOGRAPHIC' 
0879     PERFORM DEMOGRAPHIC-MODULE 
0880   WHEN HIS350A1.MODULE(*) = 'COVERAGE' 
0881       OR HIS350A1.MODULE(*) = 'DEPENDENT' 
0882     IF HIS350A1.ACTION = 'EDIT' 
0883       IF HIS350A1.TRXN-TYPE = 'CH' 
0884           AND HIS350A1.EFFECTIVE-DATE-N = 0 
0885         #E-MSG := 'Must enter effective date of change' 
0886         #E-FLD := 'EFFECTIVE-DATE-N' 
0887         PERFORM ADD-ERROR 
0888         ESCAPE ROUTINE 
0889       END-IF 
0890     END-IF /* (0882) 
0891   WHEN HIS350A1.MODULE(*) = 'COVERAGE' 
0892     PERFORM COVERAGE-MODULE 
0893   WHEN HIS350A1.MODULE(*) = 'DEPENDENT' 
0894     PERFORM DEPENDENT-MODULE 
0895   WHEN HIS350A1.MODULE(*) = 'BENEFICIARY' 
0896     PERFORM BENEFICIARY-MODULE 
0897   WHEN NONE IGNORE 
0898 END-DECIDE /* (0877) 
0899 END-SUBROUTINE /* (0875) MODULE-ACTIONS 
0900 ************************************************************************ 
0901 DEFINE SUBROUTINE DEMOGRAPHIC-MODULE 
0902 ************************************************************************ 
0903 RESET his355a1  
0904 MOVE BY NAME HIS350A1 TO his355a1  
0905 #HOLD-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N /* eff date gets lost ??? 
0906 #HOLD-EMP-GROUP := HIS350A1.EMPLOYER-GROUP-ID /* grp gets lost ??? 
0907 * 
0908 CALLNAT 'HIS355N1' /* AES Demographic Driver 
0909   his355a1  
0910 IF his355a1.HAS-ERROR /* Handle errors from subroutine  
0911   FOR #I 1 his355a1.ERROR-COUNT  
0912     #E-MSG := his355a1.ERROR-MESSAGE(#I)  
0913     #E-FLD := his355a1.ERROR-FIELDS(#I)  
0914     PERFORM ADD-ERROR 
0915   END-FOR /* #I 
0916 END-IF 
0917 * 
0918 IF #6-MO-BRK /* Return values below, but reset others for rekeying 
0919   HIS350A1.SSN := his355a1.SSN  
0920   HIS350A1.LAST-NAME := his355a1.LAST-NAME  
0921   HIS350A1.FIRST-NAME := his355a1.FIRST-NAME  
0922   HIS350A1.MIDDLE-INITIAL := his355a1.MIDDLE-INITIAL  
0923   HIS350A1.SUFFIX := his355a1.SUFFIX  
0924   HIS350A1.DATE-OF-BIRTH-N := his355a1.DATE-OF-BIRTH-N  
0925   HIS350A1.SEX := his355a1.SEX  
0926   his350a1.bin := his355a1.bin  /*mws 20080729  
0927 ELSE /* (0918) Return all values 
0928   MOVE BY NAME his355a1.DEMOGRAPHIC-INFO TO HIS350A1  
0929   MOVE BY NAME his355a1.SUSPENSE-INFO TO HIS350A1  
0930   MOVE BY NAME his355a1.MESSAGE-INFO TO HIS350A1  
0931   IF #HOLD-EFF-DATE-N NE 0 
0932     HIS350A1.EFFECTIVE-DATE-N := #HOLD-EFF-DATE-N  /* get lost eff date 
0933   END-IF 
0934   IF #HOLD-EMP-GROUP NE ' ' 
0935     HIS350A1.EMPLOYER-GROUP-ID := #HOLD-EMP-GROUP /* get lost grp 
0936   END-IF 
0937   reset his350a1.lwop-beg-date-n  
0938         his350a1.lwop-end-date-n  
0939         his350a1.tobacco-cert-date-n                                    
0940         his350a1.visn-eff-date-n  
0941         his350a1.visn-end-date-n  
0942         his350a1.dep-visn-eff-date-n(*)  
0943         his350a1.dep-visn-end-date-n(*)  
0944 END-IF /* (0918) 
0945 * 
0946 * 
0947 IF HIS350A1.ACTION = 'EDIT' 
0948   PERFORM SET-PART-TIME-IND /*set part-time-ind from employment-stat    us 
0949   PERFORM CHECK-TABLE-FILE 
0950   #suffix := his350a1.suffix                    /* gsd20070806 start 
0951   FOR #I 1 TO 3 
0952     IF #SUFF-NAME(#I) = '.' 
0953       #SUFF-NAME(#I) := ' ' 
0954     END-IF 
0955   END-FOR 
0956   his350a1.suffix := #suffix                    /* gsd20070806 end 
0957   IF SUBSCR-MAST.STREET-1 = SCAN 'C/O OIS JC' 
0958       AND HIS350A1.STREET-1 NE 'C/O OIS JC' 
0959     #E-MSG := 'This address cannot be changed - Contact EIP to update' 
0960     #E-FLD := 'STREET-1' 
0961     PERFORM ADD-ERROR 
0962   END-IF 
0963 /* Validate State values 
0964   DECIDE ON FIRST VALUE OF HIS350A1.COUNTRY-NAME 
0965     VALUE ' ' 
0966       IF HIS350A1.STATE = 'SC' 
0967         #PHONE := HIS350A1.TELEPHONE-NUMBER 
0968         #PHONE-TYPE := 'Phone' 
0969       END-IF /* (0969) 
0970     VALUE 'CANADA' 
0971       IF NOT (HIS350A1.STATE = 'AB' OR = 'BC' OR = 'MB' OR = 'NB' 
0972           OR = 'NL' OR = 'NT' OR = 'NS' OR = 'NU' OR = 'PE' OR = 'QC' 
0973           OR = 'SK' OR = 'YT') 
0974         #E-MSG := 'You must select a Canadian province from the state ' 
0975           -'list' 
0976         #E-FLD := 'STATE' 
0977         PERFORM ADD-ERROR 
0978       END-IF /* (0971) 
0979     NONE 
0980       IF HIS350A1.STATE NE ' ' 
0981         #E-MSG := 'State must be blank when country is neither United ' 
0982           -'States nor Canada' 
0983         #E-FLD := 'STATE' 
0984         PERFORM ADD-ERROR 
0985       END-IF /* (0980) 
0986   END-DECIDE /* (0964) 
0987   #PHONE := HIS350A1.WORKPHONE-NUMBER 
0988   #PHONE-TYPE := 'Work' 
0989 END-IF /* (0946) 
0990 /* DOB and Hire Date validations 
0991 IF HIS350A1.DATE-HIRED-N > 0 
0992     AND HIS350A1.DATE-OF-BIRTH-N > 0 
0993   #AGE := (*DATN - HIS350A1.DATE-OF-BIRTH-N) / 10000 
0994   #DATE-WORK := HIS350A1.DATE-HIRED-N 
0995   MOVE EDITED #DATE-WORK TO #HIRE-D(EM=YYYYMMDD) 
0996   #DATE-WORK := HIS350A1.DATE-OF-BIRTH-N 
0997   MOVE EDITED #DATE-WORK TO #DOB-D (EM=YYYYMMDD) 
0998   MOVE EDITED #DOB-D (EM=MMDDYYYY) TO #DATE-WORK 
0999   #16TH-YRN := VAL(#YR-WORK) + 16 
1000   COMPRESS #MO-WORK #DA-WORK #16TH-YRN INTO #16TH-BD LEAVING NO 
1001   MOVE EDITED #16TH-BD TO #DOB-D(EM=MMDDYYYY) 
1002   IF #HIRE-D LT #DOB-D 
1003     #E-MSG := 'Hire date must be greater than the 16th birthday' 
1004     #E-FLD := 'DATE-HIRED-N' 
1005     PERFORM ADD-ERROR 
1006   END-IF 
1007 END-IF /* (0989) 
1008 IF NOT(HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P')  
1009   if his350a1.subscriber-type = 'AR'  
1010   RESET HIS350A1.DEP-DL-STATUS(*) HIS350A1.DEP-DL-EFF-DATE-N(*) 
1011     HIS350A1.DEP-DL-END-DATE-N(*)  
1012     HIS350A1.DEP-OLS-STATUS(*) HIS350A1.DEP-OLS-EFF-DATE-N(*) 
1013     HIS350A1.DEP-OLS-END-DATE-N(*) 
1014     HIS350A1.sl-status HIS350A1.sl-EFF-DATE-N 
1015     HIS350A1.ltd-status HIS350A1.ltd-EFF-DATE-N 
1016     HIS350A1.dl-status HIS350A1.dl-EFF-DATE-N 
1017     HIS350A1.dl-plan-category 
1018     HIS350A1.ols-status HIS350A1.ols-EFF-DATE-N 
1019     HIS350A1.ols-age-group HIS350A1.ols-cover-level 
1020     HIS350A1.ol-status HIS350A1.ol-EFF-DATE-N 
1021     HIS350A1.ol-age-group HIS350A1.ol-plan-cover-level 
1022     HIS350A1.sltd-status HIS350A1.sltd-EFF-DATE-N 
1023     HIS350A1.sltd-age-group HIS350A1.sltd-cover-level 
1024     end-if  
1025 END-IF 
1026 IF HIS350A1.TRXN-TYPE = 'EN' 
1027   IF HIS350A1.SALARY GT 147692 
1028     HIS350A1.SLTD-SALARY := 147692 
1029   ELSE 
1030     HIS350A1.SLTD-SALARY := HIS350A1.SALARY 
1031   END-IF 
1032   IF HIS350A1.EFFECTIVE-DATE-N <> 0 
1033     #DATE-WORK := HIS350A1.DATE-HIRED-N 
1034     MOVE EDITED #DATE-WORK TO #HIRE-D(EM=YYYYMMDD) 
1035     #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
1036     MOVE EDITED #DATE-WORK TO #COMP-D(EM=YYYYMMDD) 
1037     PERFORM VALIDATE-MANUAL-EFF-DATE 
1038   END-IF 
1039   CALLNAT 'KTB805NN' /* GET CURRENT BILL DATE FOR "RETIREE" 
1040     #PROGRAM #PROCESS-ERROR #RET-BILL-DTE 
1041   MOVE EDITED #RET-BILL-DTE (EM=MM) TO #BILL-MO 
1042   IF #BILL-MO = '01' OR =  '1 ' 
1043     #MO := 12 
1044   ELSE 
1045     #MO := VAL(#BILL-MO) - 1 
1046   END-IF 
1047 * 
1048   CALLNAT 'KIS801NN' /* CONVERT TO FISCAL MONTH 
1049     #MO #MO-NAME 
1050   CALLNAT 'KIS800NN' /* FISCAL YEAR ROUTINE 
1051     #FISCAL-YEAR 
1052 * 
1053   COMPRESS #FISCAL-YEAR HIS350A1.SSN INTO #RET-KEY LEAVING NO 
1054   FRAV1. FIND RET-ACC-VIEW WITH SP-RET-SSN-KEY = #RET-KEY 
1055     IF NO 
1056       ESCAPE BOTTOM(FRAV1.) 
1057     END-NOREC 
1058     #ACC-AMT := BEG-BALANCE(#MO) + PAYMENTS-RECVD(#MO) 
1059       + DISBURSEMENTS(#MO) + ACCTING-ADJUST(#MO) 
1060       + TOTAL-PREMIUMS-BILLED(#MO) 
1061     IF #ACC-AMT NE 0 
1062       #E-MSG := 'Suscriber has a balance on retiree accounting master' 
1063       #E-FLD := 'HIRE-DATE-N' 
1064       PERFORM ADD-ERROR 
1065     END-IF 
1066   END-FIND /* (1053) FRAV1. RET-ACC-VIEW 
1067 END-IF /* (1026) 
1068 END-SUBROUTINE /* (0901) DEMOGRAPHIC-MODULE 
1069 ************************************************************************ 
1070 DEFINE SUBROUTINE COVERAGE-MODULE 
1071 ************************************************************************ 
1072 IF HIS350A1.ACTION = 'GET' 
1073     AND NOT #6-MO-BRK 
1074   IF HIS350A1.SUBSCR-BEFORE 
1075     MOVE BY NAME HIS350A1 TO HIS356A1 
1076     CALLNAT 'HIS356N1' /* AES Coverage Driver 
1077       HIS356A1 
1078     IF HIS356A1.HAS-ERROR /* Handle errors from subroutine 
1079       FOR #I 1 his355a1.ERROR-COUNT  
1080         #E-MSG := HIS356A1.ERROR-MESSAGE(#I) 
1081         #E-FLD := HIS356A1.ERROR-FIELDS(#I) 
1082         PERFORM ADD-ERROR 
1083       END-FOR /* #I 
1084     END-IF 
1085     MOVE BY NAME HIS356A1.COVERAGE-INFO TO HIS350A1 
1086     MOVE BY NAME HIS356A1.SUSPENSE-INFO TO HIS350A1 
1087     MOVE BY NAME HIS356A1.MESSAGE-INFO TO HIS350A1 
1088   END-IF 
1089 END-IF /* (1078) 
1090 IF HIS350A1.ACTION = 'EDIT' 
1091  and not(his350a1.change-reason = 'AR' or = 'BE') /* gsd20061201a 
1092 ** 
1093   if his350a1.change-reason = 'OE' /* gsd20070820b start 
1094       and HIS350A1.HLTH-PLAN-CATEGORY = MASK('HT'.) /* TriCare 
1095       and his350a1.hlth-status = 'A1' 
1096     #e-msg := 'You must change your current health plan provider'  
1097     perform add-error 
1098   end-if /* gsd20070820b end 
1099   if his350a1.change-reason = 'AE' /* rn20080901  
1100       and HIS350A1.HLTH-PLAN-CATEGORY = MASK('HX'.) /* TriCare  
1101       and his350a1.hlth-status = 'A1'  
1102     #e-msg := 'You must change your current health plan provider'  
1103     perform add-error  
1104   end-if /* rn20080901  
1105 /* If enrollee was a spouse with LTC, copy LTC history to currrent LTC 
1106 * 
1107   PERFORM CHECK-FOR-DECEASED /* make sure not activating deceased deps 
1108   IF HIS350A1.EFFECTIVE-DATE-N > 0 
1109       AND NOT HIS350A1.EFFECTIVE-DATE-N = 15820000 THRU 26990000 
1110     #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
1111     MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
1112     MOVE EDITED #WORK-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
1113     COMPRESS 'Effective Date (' #DISPLAY-DATE1 
1114       ') is not a valid date' INTO #E-MSG 
1115     #E-FLD := 'EFFECTIVE-DATE-N' 
1116     PERFORM ADD-ERROR 
1117     ESCAPE ROUTINE 
1118   END-IF /* (1103) 
1119 /* Calculate subscriber's age 
1120   IF HIS350A1.DATE-OF-BIRTH-N > 0 
1121     #DATE-WORK := HIS350A1.DATE-OF-BIRTH-N 
1122     IF HIS350A1.EFFECTIVE-DATE-N > 0 
1123       #DATE-WORK2 := HIS350A1.EFFECTIVE-DATE-N 
1124     ELSE 
1125       #DATE-WORK2 := *DATN 
1126     END-IF 
1127     #AGE := (VAL(#DATE-WORK2) - VAL(#DATE-WORK)) / 10000 
1128   END-IF 
1129   RESET #DEPEND-STATUS 
1130   FR1. 
1131   FOR #I 1 TO 15 
1132     IF HIS350A1.DEP-RELATION(#I) = MASK(.'1'..) /* Spouse 
1133       IF HIS350A1.DEP-RELATION(#I) = MASK(.'1A') 
1134         IF HIS350A1.DEP-DATE-OF-BIRTH-N(#I) > 0 
1135           #SPOUSE-DOB-N := HIS350A1.DEP-DATE-OF-BIRTH-N(#I) 
1136         END-IF 
1137       END-IF 
1138       IF HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
1139           OR (HIS350A1.DEP-HLTH-PENDING-ST(#I) = ' ' 
1140           AND HIS350A1.DEP-HLTH-STATUS(#I) = 'A1') 
1141         #FOUND-SPOUSE-H := TRUE 
1142         IF HIS350A1.DEP-DATE-OF-BIRTH-N(#I) > 0 
1143           #SPOUSE-DOB-N := HIS350A1.DEP-DATE-OF-BIRTH-N(#I) 
1144           #DATE-WORK := HIS350A1.DEP-DATE-OF-BIRTH-N(#I) 
1145           #DATE-WORK2 := *DATN 
1146           #SP-AGE := (VAL(#DATE-WORK2) - VAL(#DATE-WORK)) / 10000 
1147           #SPOUSE-MEDICARE := HIS350A1.DEP-MEDICARE-NUMBER(#I) 
1148         END-IF 
1149       END-IF /* (1138) 
1150       IF HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1' 
1151           OR (HIS350A1.DEP-DNTL-PENDING-ST(#I) = ' ' 
1152           AND HIS350A1.DEP-DNTL-STATUS(#I) = 'A1') 
1153         #FOUND-SPOUSE-D := TRUE 
1154       END-IF 
1155       IF HIS350A1.DEP-OLS-PENDING-ST(#I) = 'A1' 
1156           OR (HIS350A1.DEP-OLS-PENDING-ST(#I) = ' ' 
1157           AND HIS350A1.DEP-OLS-STATUS(#I) = 'A1') 
1158         #FOUND-SPOUSE-OLS := TRUE 
1159       END-IF 
1160     ELSE /* (1131) Child 
1161       IF HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
1162           OR (HIS350A1.DEP-HLTH-PENDING-ST(#I) = ' ' 
1163           AND HIS350A1.DEP-HLTH-STATUS(#I) = 'A1') 
1164         #FOUND-DEP-H := TRUE 
1165       END-IF 
1166       IF HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1' 
1167           OR (HIS350A1.DEP-DNTL-PENDING-ST(#I) = ' ' 
1168           AND HIS350A1.DEP-DNTL-STATUS(#I) = 'A1') 
1169         #FOUND-DEP-D := TRUE 
1170       END-IF 
1171       IF HIS350A1.DEP-DL-PENDING-ST(#I) = 'A1' 
1172           OR (HIS350A1.DEP-DL-PENDING-ST(#I) = ' ' 
1173           AND HIS350A1.DEP-DL-STATUS(#I) = 'A1') 
1174         #FOUND-DEP-DL := TRUE 
1175       END-IF 
1176     END-IF /* (1131) 
1177   END-FOR /* FR1. #I (1130) 
1178 * 
1179 /* All coverages must be chosen or refused during an enroll 
1180   IF HIS350A1.TRXN-TYPE = 'EN' 
1181   OR HIS350A1.CHANGE-REASON = 'OE'  
1182     DECIDE FOR EVERY CONDITION 
1183       WHEN HIS350A1.HLTH-STATUS = ' ' 
1184         #E-MSG := 'Health Plan must be chosen or refused.' 
1185         #E-FLD := 'HLTH-STATUS' 
1186         PERFORM ADD-ERROR 
1187       WHEN HIS350A1.DNTL-STATUS = ' ' 
1188         #E-MSG := 'Dental Plan must be chosen or refused.' 
1189         #E-FLD := 'DNTL-STATUS' 
1190         PERFORM ADD-ERROR 
1191       WHEN HIS350A1.DNTP-STATUS = ' ' 
1192           AND HIS350A1.SUBSCR-TRANSFER = ' '  
1193           AND HIS350A1.SUBSCRIBER-TYPE = 'AR'  
1194         #E-MSG := 'Dental Plus must be chosen or refused.' 
1195         #E-FLD := 'DNTP-STATUS' 
1196         PERFORM ADD-ERROR 
1197       WHEN HIS350A1.DNTP-STATUS = ' ' 
1198           AND HIS350A1.SUBSCR-TRANSFER NE ' ' 
1199         HIS350A1.DNTP-STATUS := 'T4' 
1200       WHEN NONE IGNORE 
1201     END-DECIDE /* (1181) 
1202     IF HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
1203       if his350a1.subscriber-type = 'AR'  
1204       DECIDE FOR EVERY CONDITION 
1205         WHEN HIS350A1.OL-STATUS = ' ' AND  
1206              HIS350A1.SUBSCRIBER-TYPE = 'AR'  
1207           #E-MSG := 'Optional Life must be chosen or refused.' 
1208           #E-FLD := 'OL-STATUS' 
1209           PERFORM ADD-ERROR 
1210         WHEN HIS350A1.DL-STATUS = ' ' 
1211             AND #FOUND-DEP-DL 
1212           #E-MSG := 'Dependent Life (child) must be chosen or refused.' 
1213           #E-FLD := 'OLS-STATUS' 
1214           PERFORM ADD-ERROR 
1215         WHEN HIS350A1.OLS-STATUS = ' ' 
1216             AND #SPOUSE-EXISTS 
1217           #E-MSG := 'Dependent Life (spouse) must be chosen or refused.' 
1218           #E-FLD := 'OLS-STATUS' 
1219           PERFORM ADD-ERROR 
1220         WHEN HIS350A1.SLTD-STATUS = ' ' 
1221            AND HIS350A1.SUBSCRIBER-TYPE = 'AR'  
1222           #E-MSG := 'SLTD must be chosen or refused.' 
1223           #E-FLD := 'SLTD-STATUS' 
1224           PERFORM ADD-ERROR 
1225         WHEN NONE IGNORE 
1226       END-DECIDE /* (1203) 
1227       end-if  
1228     END-IF /* (1202) 
1229     IF NOT(HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
1230       if his350a1.subscriber-type = 'AR'  
1231       DECIDE FOR EVERY CONDITION 
1232         WHEN HIS350A1.OL-STATUS = 'A1' 
1233           #E-MSG := 'Optional Life must be refused for' 
1234             -' part-time subscribers' 
1235           #E-FLD := 'OL-STATUS' 
1236           PERFORM ADD-ERROR 
1237         WHEN HIS350A1.DL-STATUS = 'A1' 
1238             AND #FOUND-DEP-DL 
1239           #E-MSG := 'Dependent Life (child) must be refused for ' 
1240             -'part-time subscribers' 
1241           #E-FLD := 'OL-STATUS' 
1242           PERFORM ADD-ERROR 
1243         WHEN HIS350A1.OLS-STATUS = 'A1' 
1244           #E-MSG := 'Dependent Life (spouse) must be refused for ' 
1245             -'part-time subscribers' 
1246           #E-FLD := 'OL-STATUS' 
1247           PERFORM ADD-ERROR 
1248         WHEN HIS350A1.SLTD-STATUS = 'A1' 
1249           #E-MSG := 'SLTD must be refused for ' 
1250             -'part-time subscribers' 
1251           #E-FLD := 'OL-STATUS' 
1252           PERFORM ADD-ERROR 
1253         WHEN NONE IGNORE 
1254       END-DECIDE /* (1230) 
1255       end-if  
1256     END-IF /* (1229) 
1257   END-IF /* (1180) 
1258   FSM4. 
1259   FIND SUBSCR-MAST WITH SSN = HIS350A1.SSN 
1260     IF NO 
1261       ESCAPE BOTTOM (FSM4.) 
1262     END-NOREC 
1263     move by name subscr-mast to his390a1 
1264   END-FIND /* (1258) fsm4. subscr-mast 
1265   PERFORM HEALTH-VALIDATIONS 
1266   PERFORM DENTAL-VALIDATIONS 
1267   PERFORM DEPEND-LIFE-VALIDATIONS 
1268   PERFORM OPT-LIFE-VALIDATIONS 
1269   PERFORM DEPEND-LIFE-SP-VALIDATIONS 
1270   PERFORM SLTD-VALIDATIONS 
1271 /* Set Basic Life/LTD 
1272   IF HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
1273     MOVE HIS350A1.HLTH-STATUS TO HIS350A1.SL-STATUS 
1274       HIS350A1.LTD-STATUS 
1275     IF HIS350A1.TRXN-TYPE = 'EN' 
1276         OR SUBSCR-MAST.SL-STATUS NE HIS350A1.SL-STATUS 
1277       HIS350A1.SL-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
1278       HIS350A1.LTD-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
1279     END-IF 
1280     IF (HIS350A1.CHANGE-REASON = 'OE' or = 'AE') 
1281     and his350a1.subscriber-type ne mask('R') /* MWS20080825 
1282 **    #PLAN-CAT := SUBSCR-MAST.HLTH-PLAN-CATEGORY /* gsd20070830b start 
1283       #PLAN := SUBSCR-MAST.HLTH-PLAN-CATEGORY 
1284 **    #NEW-PLAN-CAT := HIS350A1.HLTH-PLAN-CATEGORY 
1285       #NEW-PLAN := HIS350A1.HLTH-PLAN-CATEGORY 
1286       if #plan ne #new-plan                       /* gsd20070830b end 
1287         HIS350A1.SL-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
1288         HIS350A1.LTD-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
1289       end-if 
1290     END-IF 
1291   else                                          /* gsd20070911b start 
1292     if his350a1.subscriber-type ne 'AR' /*mws20080825 
1293        reset his350a1.sl-status        /*mws20080825 
1294        reset his350a1.ltd-status       /*mws20080825 
1295     end-if                             /*mws20080825 
1296     #PLAN := SUBSCR-MAST.HLTH-PLAN-CATEGORY 
1297     #NEW-PLAN := HIS350A1.HLTH-PLAN-CATEGORY 
1298     for #i 1 15 
1299       if his350a1.dep-seq-num(#i) = 0 
1300         escape bottom 
1301       end-if 
1302       if #plan ne #new-plan 
1303         if his350a1.dep-hlth-status(#i) = 'A1' 
1304             and his350a1.dep-hlth-pending-st(#i) = ' ' 
1305           HIS350A1.dep-hlth-EFF-DATE-N(#i) := HIS350A1.HLTH-EFF-DATE-N 
1306         end-if 
1307       end-if 
1308     end-for                                     /* gsd20070911b end 
1309   END-IF 
1310 * 
1311   IF HIS350A1.DATE-OF-BIRTH-N > 0 
1312     #DATE-WORK := HIS350A1.DATE-OF-BIRTH-N 
1313     MOVE EDITED #BILL-DATE(EM=YYYY) TO #BILL-YEAR 
1314     #BILL-YEAR-N := #BILL-YEAR-N - 1 
1315     COMPRESS #BILL-YEAR '1231' INTO #1231-DATE 
1316       LEAVING NO 
1317     #COMP-AGE := (VAL(#1231-DATE) - VAL(#DATE-WORK)) / 10000 
1318   END-IF 
1319 * 
1320   RESET HIS356A1 
1321   MOVE BY NAME HIS350A1 TO HIS356A1 
1322   IF HIS350A1.OLS-COVER-LEVEL = ' ' 
1323       AND HIS350A1.OLS-STATUS = 'A1' 
1324       AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
1325     #E-MSG := 'Dependent Life Spouse coverage level is required' 
1326     PERFORM ADD-ERROR 
1327     ESCAPE ROUTINE 
1328   END-IF 
1329   CALLNAT 'HIS356N1' /* AES Coverage Driver 
1330     HIS356A1 
1331   IF HIS356A1.HAS-ERROR /* Handle errors from subroutine 
1332     FOR #I 1 HIS356A1.ERROR-COUNT 
1333       #E-MSG := HIS356A1.ERROR-MESSAGE(#I) 
1334       #E-FLD := HIS356A1.ERROR-FIELDS(#I) 
1335       PERFORM ADD-ERROR 
1336     END-FOR /* #I 
1337   END-IF 
1338   MOVE BY NAME HIS356A1.COVERAGE-INFO TO HIS350A1 
1339   MOVE BY NAME HIS356A1.SUSPENSE-INFO TO HIS350A1 
1340   MOVE BY NAME HIS356A1.MESSAGE-INFO TO HIS350A1 
1341 END-IF /* (1090) 
1342 IF HIS350A1.TRXN-TYPE = 'EN' 
1343     AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
1344   HIS350A1.SL-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
1345   HIS350A1.LTD-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
1346 END-IF 
1347 END-SUBROUTINE /* (1070) COVERAGE-MODULE 
1348 ************************************************************************ 
1349 DEFINE SUBROUTINE DEPENDENT-MODULE 
1350 ************************************************************************ 
1351 RESET HIS357A1 
1352 IF HIS350A1.ACTION = 'GET' 
1353   IF HIS350A1.TRXN-TYPE = 'CH' 
1354   OR (HIS350A1.TRXN-TYPE = 'EN' AND HIS350A1.SUBSCR-BEFORE) 
1355     MOVE BY NAME HIS350A1 TO HIS357A1 
1356     CALLNAT 'HIS357N1' /* Get Dependent Data 
1357       HIS357A1 
1358     IF HIS357A1.HAS-ERROR /* Handle errors from subroutine 
1359       FOR #I 1 HIS357A1.ERROR-COUNT 
1360         #E-MSG := HIS357A1.ERROR-MESSAGE(#I) 
1361         #E-FLD := HIS357A1.ERROR-FIELDS(#I) 
1362         #E-NDX := HIS357A1.ERROR-INDEX(#I) 
1363         PERFORM ADD-ERROR 
1364       END-FOR /* #I 
1365     END-IF /* (1358) 
1366     MOVE BY NAME HIS357A1.DEPENDENT-INFO TO HIS350A1 
1367     MOVE BY NAME HIS357A1.SUSPENSE-INFO TO HIS350A1 
1368     MOVE BY NAME HIS357A1.MESSAGE-INFO TO HIS350A1 
1369   END-IF /* (1353) 
1370 END-IF /* (1352) 
1371 * 
1372 IF HIS350A1.ACTION = 'EDIT' 
1373 **  and his350a1.change-reason ne 'AR' 
1374     and not(his350a1.change-reason = 'AR' or = 'BE') /* gsd20061201a 
1375   IF HIS350A1.EFFECTIVE-DATE-N > 0 
1376       AND NOT HIS350A1.EFFECTIVE-DATE-N = 15820000 THRU 26990000 
1377     #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
1378     MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
1379     MOVE EDITED #WORK-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
1380     COMPRESS 'Effective Date (' #DISPLAY-DATE1 
1381       ') is not a valid date' INTO #E-MSG 
1382     #E-FLD := 'EFFECTIVE-DATE-N' 
1383     PERFORM ADD-ERROR 
1384     ESCAPE ROUTINE 
1385   END-IF 
1386 * if any dependents do not have seq number, it will be assigned here. 
1387   #LAST-SEQ-NUM := *MAXVAL(HIS350A1.DEP-SEQ-NUM(*)) 
1388   FOR #I 1 15 
1389     IF (HIS350A1.DEP-LAST-NAME(#I) NE ' ' 
1390         OR HIS350A1.DEP-FIRST-NAME(#I) NE ' ') 
1391         AND HIS350A1.DEP-SEQ-NUM(#I) = 0 
1392       ADD 1 TO #LAST-SEQ-NUM 
1393       HIS350A1.DEP-SEQ-NUM(#I) := #LAST-SEQ-NUM 
1394     END-IF 
1395   END-FOR 
1396 * 
1397 * if his350a1.dep-relation(#i) = mask(.'1'.) /* gsd20070922b start 
1398 *   ignore 
1399 *   find (1) 
1400 *   end-find 
1401 * end-if                                     /* gsd20070922b end 
1402 * 
1403   FIND (1) SUBSCR-PLAN-CAT WITH SSN = HIS350A1.SSN 
1404     #PLAN-CAT := SUBSCR-PLAN-CAT.HLTH-PLAN-CATEGORY 
1405   END-FIND 
1406   #NEW-PLAN-CAT := HIS350A1.HLTH-PLAN-CATEGORY 
1407   FR2. FOR #I 1 TO 15 
1408     if his350a1.dep-seq-num(#i) = 0 /* gsd20070915 start 
1409       escape bottom 
1410     end-if                 /* gsd20070915 end 
1411     if (his350A1.DEP-HLTH-STATUS(#I) = ' ' or = mask('T'.) 
1412         and  his350a1.deP-HLTH-pending-ST(#I) = ' ' or = mask('T'.)) 
1413         and (his350A1.DEP-dntl-STATUS(#I) = ' ' or = mask('T'.) 
1414         and his350a1.DEP-dntl-pending-ST(#I) = ' ' or = mask('T'.)) 
1415         and (his350A1.DEP-dl-STATUS(#I) = ' ' or = mask('T'.) 
1416         and his350a1.DEP-dl-pending-ST(#I) = ' ' or = mask('T'.)) 
1417         and (his350A1.DEP-ols-STATUS(#I) = ' ' or = mask('T'.) 
1418         and his350a1.DEP-ols-pending-St(#I) = ' ' or = mask('T'.)) 
1419 * skipping this dependent.  But the user could have activated this 
1420 * dependent, then deactivated - thus changing the dep-___-eff-date. 
1421 * it needs to be reset back to it's original value. 
1422       perform get-orig-dep-eff-dates 
1423       perform reset-dep-eff-dates 
1424       escape top 
1425     end-if 
1426 /* If no DEP data entered, do not do validations 
1427     IF HIS350A1.DEP-SSN(#I) = ' ' 
1428         AND HIS350A1.DEP-LAST-NAME(#I) = ' ' 
1429         AND HIS350A1.DEP-RELATION (#I) = ' ' 
1430         AND HIS350A1.DEP-ELIGIBILITY (#I) = ' ' 
1431         AND (HIS350A1.DEP-HLTH-PENDING-ST(#I) = ' ' 
1432         AND HIS350A1.DEP-HLTH-STATUS(#I) = ' ') 
1433 *         and HIS350A1.DEP-HLTH-EFF-DATE-N(#I) NE MASK(YYYYMMDD) 
1434         AND (HIS350A1.DEP-DNTL-PENDING-ST(#I) = ' ' 
1435         AND HIS350A1.DEP-DNTL-STATUS(#I) = ' ') 
1436         AND HIS350A1.DEP-DNTL-EFF-DATE-N(#I) NE MASK(YYYYMMDD) 
1437         AND (HIS350A1.DEP-DL-PENDING-ST(#I) = ' ' 
1438         AND HIS350A1.DEP-DL-STATUS(#I) = ' ') 
1439         AND HIS350A1.DEP-DL-EFF-DATE-N(#I) NE MASK(YYYYMMDD) 
1440         AND (HIS350A1.DEP-OLS-PENDING-ST(#I) = ' ' 
1441         AND HIS350A1.DEP-OLS-STATUS(#I) = ' ') 
1442         AND HIS350A1.DEP-OLS-EFF-DATE-N(#I) NE MASK(YYYYMMDD) 
1443       RESET HIS350A1.DEP-HLTH-EFF-DATE-N(#I) 
1444       ESCAPE BOTTOM(FR2.) /* #I 
1445     END-IF /* (1436) 
1446 * 
1447     IF (HIS350A1.DEP-HLTH-STATUS(#I) ne 'A1' 
1448         and HIS350A1.DEP-DNTL-STATUS(#I) ne 'A1' 
1449         and HIS350A1.DEP-DL-STATUS(#I) ne 'A1' 
1450         and HIS350A1.DEP-OLS-STATUS(#I) ne 'A1') 
1451         and (his350a1.dep-hlth-pending-st(#i) = 'A1' 
1452         or his350a1.dep-dntl-pending-st(#i) = 'A1' 
1453         or his350a1.dep-dl-pending-st(#i) = 'A1')  
1454       if his350a1.dep-hlth-eff-date-n(#i) > his350a1.effective-date-n 
1455           or his350a1.dep-dntl-eff-date-n(#i) > 
1456           his350a1.effective-date-n 
1457           or his350a1.dep-dl-eff-date-n(#i) > 
1458           his350a1.effective-date-n 
1459           or his350a1.dep-ols-eff-date-n(#i) > 
1460           his350a1.effective-date-n 
1461         COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
1462           '| cannot be activated with this Effective Date' into #E-MSG 
1463         PERFORM ADD-ERROR 
1464         escape bottom immediate 
1465       end-if /* (4625) 
1466     END-IF 
1467 * 
1468     IF (HIS350A1.SEX = 'M' 
1469         AND HIS350A1.DEP-RELATION(#I) = '11A') 
1470         OR (HIS350A1.SEX = 'F' 
1471         AND HIS350A1.DEP-RELATION(#I) = '21A') 
1472       #SAME-SEX := TRUE 
1473     END-IF 
1474 * 
1475     IF (HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
1476         OR (HIS350A1.DEP-HLTH-PENDING-ST(#I) = ' ' 
1477         AND HIS350A1.DEP-HLTH-STATUS(#I) = 'A1') 
1478         OR HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1' 
1479         OR(HIS350A1.DEP-DNTL-PENDING-ST(#I) = ' ' 
1480         AND HIS350A1.DEP-DNTL-STATUS(#I) = 'A1') 
1481         OR HIS350A1.DEP-DL-PENDING-ST(#I) = 'A1' 
1482         OR (HIS350A1.DEP-DL-PENDING-ST(#I) = ' ' 
1483         AND HIS350A1.DEP-DL-STATUS(#I) = 'A1') 
1484         OR HIS350A1.DEP-OLS-PENDING-ST(#I) = 'A1' 
1485         OR (HIS350A1.DEP-OLS-PENDING-ST(#I) = ' ' 
1486         AND HIS350A1.DEP-OLS-STATUS(#I) = 'A1'))  
1487         AND HIS350A1.DEP-ELIGIBILITY(#I) = '5' 
1488       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
1489         '| has incorrect Relation or Coverage Status' INTO #E-MSG 
1490       #E-FLD := 'DEP-ELIGIBILITY' 
1491       PERFORM ADD-ERROR 
1492     END-IF /* (1475) 
1493 * 
1494     IF HIS350A1.TRXN-TYPE = 'CH' 
1495       IF HIS350A1.DEP-SSN(#I) NE ' ' 
1496         FDM1. FIND DEPEND-MAST WITH DEP-SSN = HIS350A1.DEP-SSN(#I) 
1497             WHERE DEPEND-MAST.DEP-SUBSCRIBER-SSN = HIS350A1.SSN 
1498           IF NO RECORD 
1499             ESCAPE BOTTOM(FDM1.) 
1500           END-NOREC 
1501         END-FIND /* (1501) fdm1. depend-mast 
1502       END-IF 
1503       IF HIS350A1.CHANGE-REASON = 'OE' /* Open Enrollment 
1504         IF (HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
1505             AND HIS350A1.DEP-HLTH-STATUS(#I) = MASK('T'.) OR = ' ') 
1506             OR HIS350A1.DEP-NEW-ADD-PENDING(#I) 
1507           HIS350A1.DEP-LATE-ENTRANT(#I) := 'Y' 
1508         END-IF 
1509       END-IF 
1510       IF HIS350A1.DEP-NEW-ADD-PENDING(#I) 
1511         #SAME := TRUE 
1512       ELSE 
1513         IF HIS350A1.DEP-ELIGIBILITY(#I) = '4' 
1514             AND DEPEND-MAST.DEP-ELIGIBILITY = '4' 
1515           #SAME := TRUE 
1516         ELSE 
1517           #SAME := FALSE 
1518         END-IF 
1519       END-IF /* (1509) 
1520       IF HIS350A1.DEP-ELIGIBILITY(#I) = '4' 
1521           AND NOT #SAME 
1522         COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
1523           '| cannot be changed to  Permanently Incapacitated' 
1524           INTO #E-MSG 
1525         #E-FLD := 'DEP-ELIGIBILITY' 
1526         PERFORM ADD-ERROR 
1527       END-IF 
1528     END-IF /* (1494) Change 
1529 * 
1530     #suffix := his350a1.dep-suffix(#i)            /* gsd20070806 start 
1531     FOR #p 1 TO 3 
1532       IF #SUFF-NAME(#p) = '.' 
1533         #SUFF-NAME(#p) := ' ' 
1534       END-IF 
1535     END-FOR 
1536     his350a1.dep-suffix(#i) := #suffix            /* gsd20070806 end 
1537 * 
1538     IF HIS350A1.DEP-DATE-OF-BIRTH-N(#I) = 0 
1539       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
1540         '| Date of Birth is required.' INTO #E-MSG 
1541       #E-FLD := 'DEP-DATE-OF-BIRTH' 
1542       PERFORM ADD-ERROR 
1543       ESCAPE ROUTINE 
1544     ELSE /* (1530) 
1545       #DATE-WORK := HIS350A1.DEP-DATE-OF-BIRTH-N(#I) 
1546       IF #DATE-WORK NE MASK(YYYYMMDD) 
1547         COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
1548           '| Date of Birth is not valid.' INTO #E-MSG 
1549         #E-FLD := 'DEP-DATE-OF-BIRTH' 
1550         PERFORM ADD-ERROR 
1551         ESCAPE ROUTINE 
1552       END-IF 
1553     END-IF /* (1530) 
1554     IF HIS350A1.DEP-ELIGIBILITY(#I) = '1' 
1555       IF HIS350A1.EFFECTIVE-DATE-N > 0 
1556           AND HIS350A1.DEP-DATE-OF-BIRTH-N(#I) > 0 
1557         #DEP-AGE := (HIS350A1.EFFECTIVE-DATE-N - 
1558           HIS350A1.DEP-DATE-OF-BIRTH-N(#I)) / 10000 
1559         IF #DEP-AGE > 18 
1560           IF HIS350A1.CHANGE-REASON = 'AE'  
1561           COMPRESS 'Dependent |' his350a1.dep-seq-num(#I)  
1562              '| Student certification is required prior to'  
1563  'making this Change. Contact your BA.'  
1564              into #e-msg  
1565            else  
1566           COMPRESS 'Dependent |' his350a1.dep-seq-num(#I)  
1567             '| cannot be ''Child Under 19'' ' 
1568             'because (s)he is' #DEP-AGE ' years old' INTO #E-MSG 
1569           END-IF  
1570           PERFORM ADD-ERROR 
1571         END-IF  
1572       END-IF 
1573     END-IF 
1574     IF HIS350A1.DEP-ELIGIBILITY(#I) = '2'       /* gsd2007094b start 
1575       IF HIS350A1.EFFECTIVE-DATE-N > 0 
1576           AND HIS350A1.DEP-DATE-OF-BIRTH-N(#I) > 0 
1577         #DEP-AGE := (HIS350A1.EFFECTIVE-DATE-N - 
1578           HIS350A1.DEP-DATE-OF-BIRTH-N(#I)) / 10000 
1579         IF #DEP-AGE > 25 
1580           COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
1581             '| cannot be ''Full-time student'' ' 
1582             'because (s)he is' #DEP-AGE ' years old' INTO #E-MSG 
1583           PERFORM ADD-ERROR 
1584         END-IF 
1585       END-IF 
1586     END-IF                                      /* gsd2007094b end 
1587     find (1) dep with dep.dep-ssn = his350a1.dep-ssn(#i) 
1588         where dep.DEP-SUBSCRIBER-SSN = his350a1.ssn 
1589     end-find 
1590     IF (HIS350A1.DEP-NEW-ADD-PENDING(#I) 
1591         OR (HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
1592         AND HIS350A1.DEP-HLTH-STATUS(#I) = MASK('T'.) OR = ' ') 
1593         OR (HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1' 
1594         AND HIS350A1.DEP-DNTL-STATUS(#I) = MASK('T'.) OR = ' ') 
1595         OR (HIS350A1.DEP-DL-PENDING-ST(#I) = 'A1' 
1596         AND HIS350A1.DEP-DL-STATUS(#I) = MASK('T'.) OR = ' ')) 
1597         or (HIS350A1.DEP-ELIGIBILITY(#I) ne dep.DEP-ELIGIBILITY /* gsd  20060818b 
1598         and dep.DEP-ELIGIBILITY ne ' ') 
1599       IF HIS350A1.DEP-ELIGIBILITY(#I) = '2' 
1600         IF HIS350A1.EFFECTIVE-DATE-N > 0 
1601             AND HIS350A1.DEP-DATE-OF-BIRTH-N(#I) > 0 
1602           #DEP-AGE := (HIS350A1.EFFECTIVE-DATE-N - 
1603             HIS350A1.DEP-DATE-OF-BIRTH-N(#I)) / 10000 
1604           IF #DEP-AGE < 25 
1605             HIS350A1.DEP-ELIGIBILITY(#I) := '2A' 
1606           END-IF 
1607         END-IF 
1608       END-IF /* (1584) 
1609       IF HIS350A1.DEP-ELIGIBILITY(#I) = MASK('2'.) 
1610           AND HIS350A1.DEP-AUDITED-DATE-N(#I) = 0 
1611         HIS350A1.DEP-AUDITED-DATE-N(#I) := *DATN 
1612       END-IF 
1613     END-IF /* (1573) 
1614 * 
1615     IF NOT(HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
1616       if his350a1.subscriber-type = 'AR'  
1617       IF HIS350A1.DEP-DL-PENDING-ST(#I) = 'A1' 
1618         COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
1619           '| not eligible for Dep Life Child ' 
1620           'because subscriber is part-time' INTO #E-MSG 
1621         PERFORM ADD-ERROR 
1622       END-IF 
1623       IF HIS350A1.DEP-OLS-PENDING-ST(#I) = 'A1' 
1624         COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
1625           '| not eligible for Dep Life Spouse' 
1626           ' because subscriber is part-time' INTO #E-MSG 
1627         PERFORM ADD-ERROR 
1628       END-IF 
1629       end-if  
1630     END-IF /* (1615) 
1631 * 
1632     PERFORM CHECK-OTHER-COVERAGE 
1633 * 
1634     perform get-orig-dep-eff-dates 
1635 * 
1636     IF HIS350A1.DEP-HLTH-STATUS(#I) = ' ' 
1637         AND HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
1638       HIS350A1.DEP-HLTH-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
1639     END-IF 
1640     IF #PLAN NE #NEW-PLAN /* pre-existing 
1641         AND HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
1642       HIS350A1.DEP-HLTH-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
1643     END-IF 
1644     IF #CAT NE #NEW-CAT 
1645         AND HIS350A1.DEP-HLTH-PENDING-ST(#I) NE ' ' 
1646         AND HIS350A1.DEP-HLTH-PENDING-ST(#I) NE 
1647         HIS350A1.DEP-HLTH-STATUS(#I) 
1648       HIS350A1.DEP-HLTH-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
1649     END-IF 
1650     IF HIS350A1.DEP-HLTH-PENDING-ST(#I) NE ' ' 
1651       HIS350A1.DEP-HLTH-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
1652     END-IF 
1653     IF HIS350A1.DEP-DNTL-STATUS(#I) = ' ' 
1654         AND HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1' 
1655       HIS350A1.DEP-DNTL-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
1656     END-IF 
1657     #PLAN-CAT := SUBSCR-MAST.DNTL-PLAN-CATEGORY 
1658     #NEW-PLAN-CAT := HIS350A1.DNTL-PLAN-CATEGORY 
1659     IF #PLAN NE #NEW-PLAN 
1660         AND HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1' 
1661       HIS350A1.DEP-DNTL-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
1662     END-IF 
1663     IF #CAT NE #NEW-CAT 
1664         AND HIS350A1.DEP-DNTL-PENDING-ST(#I) NE ' ' 
1665         AND HIS350A1.DEP-DNTL-PENDING-ST(#I) NE 
1666         HIS350A1.DEP-DNTL-STATUS(#I) 
1667       HIS350A1.DEP-DNTL-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
1668     END-IF 
1669     IF HIS350A1.DEP-DNTL-PENDING-ST(#I) NE ' ' 
1670       HIS350A1.DEP-DNTL-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
1671     END-IF 
1672     IF HIS350A1.DEP-DL-PENDING-ST(#I) NE ' ' 
1673       HIS350A1.DEP-DL-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
1674     END-IF 
1675     IF HIS350A1.DEP-OLS-PENDING-ST(#I) NE ' ' 
1676       HIS350A1.DEP-OLS-EFF-DATE-N (#I) := HIS350A1.EFFECTIVE-DATE-N 
1677     END-IF 
1678 * 
1679 * reset dependent effective dates if user added, then removed, etc. 
1680 * write (1) '9' 
1681     perform reset-dep-eff-dates 
1682 * 
1683     HIS808A2.INDEX := #I 
1684     HIS808A2.SSN := HIS350A1.SSN 
1685     if his350a1.subscriber-type = 'AR'  
1686       IF HIS350A1.DATE-HIRED-N = 0  
1687         #E-MSG := 'Date of Hire is required on Enrollee Data screen'  
1688         #E-FLD := 'DATE-HIRED-N'  
1689         PERFORM ADD-ERROR  
1690         ESCAPE ROUTINE immediate  
1691       ELSE  
1692         HIS808A2.DATE-HIRED := HIS350A1.DATE-HIRED-N  
1693       END-IF  
1694     end-if  
1695     HIS808A2.HLTH-STATUS := HIS350A1.HLTH-STATUS 
1696     HIS808A2.HLTH-PLAN-CATEGORY := HIS350A1.HLTH-PLAN-CATEGORY 
1697     HIS808A2.HLTH-EFF-DATE := HIS350A1.HLTH-EFF-DATE-N 
1698     HIS808A2.DEP-SSN(#I) := HIS350A1.DEP-SSN(#I) 
1699     HIS808A2.DEP-DOB(#I) := HIS350A1.DEP-DATE-OF-BIRTH-N(#I) 
1700     HIS808A2.DEP-ELIG(#I) := HIS350A1.DEP-ELIGIBILITY(#I) 
1701     HIS808A2.DEP-RELATION(#I) := HIS350A1.DEP-RELATION(#I) 
1702     IF HIS350A1.DEP-HLTH-PENDING-ST(#I) NE ' ' 
1703       HIS808A2.DEP-HLTH-COVER(#I) := HIS350A1.DEP-HLTH-PENDING-ST(#I) 
1704     ELSE 
1705       HIS808A2.DEP-HLTH-COVER(#I) := HIS350A1.DEP-HLTH-STATUS(#I) 
1706     END-IF 
1707     HIS808A2.DEP-HLTH-EFF-DATE(#I) := HIS350A1.DEP-HLTH-EFF-DATE-N(#I) 
1708     HIS808A2.DEP-HLTH-END-DATE(#I) := HIS350A1.DEP-HLTH-END-DATE-N(#I) 
1709     IF HIS350A1.DEP-DNTL-PENDING-ST(#I) NE ' ' 
1710       HIS808A2.DEP-DNTL-COVER(#I) := HIS350A1.DEP-DNTL-PENDING-ST(#I) 
1711     ELSE 
1712       HIS808A2.DEP-DNTL-COVER(#I) := HIS350A1.DEP-DNTL-STATUS(#I) 
1713     END-IF 
1714     HIS808A2.DEP-DNTL-EFF-DATE(#I) := HIS350A1.DEP-DNTL-EFF-DATE-N(#I) 
1715     HIS808A2.DEP-DNTL-END-DATE(#I) := HIS350A1.DEP-DNTL-END-DATE-N(#I) 
1716     IF HIS350A1.DEP-DL-PENDING-ST(#I) NE ' ' 
1717       HIS808A2.DEP-DL-COVER(#I) := HIS350A1.DEP-DL-PENDING-ST(#I) 
1718     ELSE 
1719       HIS808A2.DEP-DL-COVER(#I) := HIS350A1.DEP-DL-STATUS(#I) 
1720     END-IF 
1721     HIS808A2.DEP-DL-EFF-DATE(#I) := HIS350A1.DEP-DL-EFF-DATE-N(#I) 
1722     HIS808A2.DEP-DL-END-DATE(#I) := HIS350A1.DEP-DL-END-DATE-N(#I) 
1723 * 
1724     CALLNAT 'KIS808N2' /* CALCULATE DEPEND END DATE 
1725       HIS808A2 
1726 * 
1727     HIS350A1.DEP-HLTH-END-DATE-N(#I) := 
1728       HIS808A2.DEP-HLTH-END-DATE-N(#I) 
1729     HIS350A1.DEP-DNTL-END-DATE-N(#I) := 
1730       HIS808A2.DEP-DNTL-END-DATE-N(#I) 
1731     HIS350A1.DEP-DL-END-DATE-N(#I) := 
1732       HIS808A2.DEP-DL-END-DATE-N(#I) 
1733 * 
1734     IF HIS350A1.TRXN-TYPE = 'EN' 
1735       HIS808A1.MENU-TRANS-CODE := 'A1' 
1736     ELSE /* 'CH' 
1737       HIS808A1.MENU-TRANS-CODE := 'C3' 
1738     END-IF 
1739     MOVE HIS350A1.SSN TO HIS808A1.SSN 
1740     MOVE HIS350A1.DATE-HIRED-N TO HIS808A1.DATE-HIRED 
1741     MOVE HIS350A1.HLTH-STATUS TO HIS808A1.HLTH-STATUS 
1742     MOVE HIS350A1.HLTH-EFF-DATE-N TO HIS808A1.HLTH-EFF-DATE 
1743     HIS808A1.PROGRAM-NAME := 'HIS808NS' 
1744     HIS808A1.INDEX := #I 
1745     MOVE HIS350A1.DEP-SSN(#I) TO HIS808A1.DEP-SSN(#I) 
1746     MOVE HIS350A1.DEP-DATE-OF-BIRTH-N(#I) TO HIS808A1.DEP-DOB(#I) 
1747     IF HIS350A1.DEP-HLTH-PENDING-ST(#I) NE ' ' 
1748       MOVE HIS350A1.DEP-HLTH-PENDING-ST(#I) 
1749         TO HIS808A1.DEP-HLTH-COVER(#I) 
1750     ELSE 
1751       MOVE HIS350A1.DEP-HLTH-STATUS(#I) 
1752         TO HIS808A1.DEP-HLTH-COVER(#I) 
1753     END-IF 
1754     MOVE HIS350A1.DEP-HLTH-STATUS(#I) 
1755       TO HIS808A1.ORIG-DEP-HLTH-COVER(#I) 
1756     MOVE HIS350A1.DEP-HLTH-EFF-DATE-N(#I) TO 
1757       HIS808A1.DEP-HLTH-EFF-DATE(#I) 
1758     IF HIS350A1.CHANGE-REASON = 'OE' /* Open Enrollment 
1759       IF (HIS350A1.DEP-HLTH-STATUS(#I) = MASK('T'.) OR = ' ' 
1760           AND HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1') 
1761           OR HIS350A1.DEP-NEW-ADD-PENDING(#I) 
1762         HIS350A1.DEP-LATE-ENTRANT(#I) := 'Y' 
1763       END-IF 
1764     END-IF 
1765     MOVE HIS350A1.DEP-LATE-ENTRANT(#I) TO HIS808A1.DEP-LATE-ENTRANT(#I  ) 
1766     MOVE HIS350A1.DEP-PRIOR-SRVC-BEG-DATE-N(#I) TO 
1767       HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) 
1768     MOVE HIS350A1.DEP-PRIOR-SRVC-END-DATE-N(#I) TO 
1769       HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) 
1770     MOVE HIS350A1.DEP-PRE-EX-END-DATE-N(#I) TO 
1771       HIS808A1.DEP-PRE-EX-END-DATE(#I) 
1772 * 
1773     PERFORM YYYYMMDD-TO-MMDDYYYY 
1774     IF #ESCAPE 
1775       ESCAPE ROUTINE 
1776     END-IF 
1777 * 
1778     CALLNAT 'KIS808N1' /* CALCULATE PRE-EX-DATE for Dependents 
1779       HIS808A1 
1780 * 
1781     PERFORM MMDDYYYY-TO-YYYYMMDD 
1782     MOVE HIS808A1.DEP-PRE-EX-END-DATE(#I) TO #DATE-TRANSFER-A 
1783     MOVE #DATE-TRANSFER-N TO HIS350A1.DEP-PRE-EX-END-DATE-N(#I) 
1784 * 
1785 /* Newborn Pre-ex reset 
1786 **    if his350a1.dep-date-of-birth-n(#i) = 
1787 **        his350a1.dep-hlth-eff-date-n(#i) and 
1788 **        #ORIG-DEP-HLTH-EFF-DATE(#I) = 0 
1789 **    reset #DEP-PRE-EX-END-DATE(#I) 
1790 **  end-if 
1791 /* Adopted Pre-ex reset                         /* gsd20070814a start 
1792     IF his350a1.dep-relation(#i) = '2D' 
1793       reset HIS350A1.DEP-PRE-EX-END-DATE-N(#I) 
1794     END-IF                                      /* gsd20070814a end 
1795 * 
1796     IF HIS350A1.DEP-DATE-OF-BIRTH-N(#I) = 
1797         HIS350A1.DEP-HLTH-EFF-DATE-N(#I) 
1798         AND #DEP-HLTH-EFF-DATE-N = 0 
1799       RESET HIS350A1.DEP-PRE-EX-END-DATE-N(#I) 
1800     END-IF 
1801 * 
1802     IF HIS350A1.DEP-OTHER-INS-IND(#I) = 'Y' 
1803       IF HIS350A1.DATE-OF-BIRTH-N > 0 
1804         #SUB-DOB-A := HIS350A1.DATE-OF-BIRTH-N 
1805         MOVE EDITED #SUB-DOB-A TO #SUB-DOB-D(EM=YYYYMMDD) 
1806         MOVE EDITED #SUB-DOB-D(EM=MMDD) TO #SUB-DOB-MMDD-A 
1807       END-IF 
1808       IF HIS350A1.DEP-INS-POLICY-HOLDER-DOB-N(#I) > 0 
1809         #DPH-DOB-A := HIS350A1.DEP-INS-POLICY-HOLDER-DOB-N(#I) 
1810         MOVE EDITED #DPH-DOB-A TO #DPH-DOB-D(EM=YYYYMMDD) 
1811         MOVE EDITED #DPH-DOB-D(EM=MMDD) TO #DPH-DOB-MMDD-A 
1812       END-IF 
1813       IF HIS350A1.DEP-RELATION(#I) NE MASK(.'1'.) 
1814         DECIDE FOR FIRST CONDITION 
1815           WHEN #DPH-DOB-MMDD-N < #SUB-DOB-MMDD-N 
1816             HIS350A1.DEP-INS-PRIM/SEC-IND(#I) := 'P' 
1817           WHEN #DPH-DOB-MMDD-N > #SUB-DOB-MMDD-N 
1818             HIS350A1.DEP-INS-PRIM/SEC-IND(#I) := 'S' 
1819           WHEN #DPH-DOB-MMDD-N = #SUB-DOB-MMDD-N 
1820             DECIDE FOR FIRST CONDITION 
1821               WHEN HIS350A1.DEP-INS-EFF-DATE-N(#I) < 
1822                   HIS350A1.HLTH-EFF-DATE-N 
1823                 HIS350A1.DEP-INS-PRIM/SEC-IND(#I) := 'P' 
1824               WHEN HIS350A1.DEP-INS-EFF-DATE-N(#I) > 
1825                   HIS350A1.HLTH-EFF-DATE-N 
1826                   OR HIS350A1.DEP-INS-EFF-DATE-N(#I) = 
1827                   HIS350A1.HLTH-EFF-DATE-N 
1828                 HIS350A1.DEP-INS-PRIM/SEC-IND(#I) := 'S' 
1829               WHEN NONE 
1830                 IGNORE 
1831             END-DECIDE 
1832           WHEN NONE 
1833             IGNORE 
1834         END-DECIDE 
1835       ELSE /* (1813) 
1836         HIS350A1.DEP-INS-PRIM/SEC-IND(#I) := 'P' 
1837       END-IF /* (1813) 
1838     END-IF /* (1800) 
1839 * 
1840     #DEP-RELATION := HIS350A1.DEP-RELATION(#I) 
1841     #DEP-ELIGIBILITY := HIS350A1.DEP-ELIGIBILITY(#I) 
1842     #DEP-DATE-OF-BIRTH-N := HIS350A1.DEP-DATE-OF-BIRTH-N(#I) 
1843     #DEP-HLTH-EFF-DATE-N := HIS350A1.DEP-HLTH-EFF-DATE-N(#I) 
1844     #DEP-DNTL-EFF-DATE-N := HIS350A1.DEP-DNTL-EFF-DATE-N(#I) 
1845     #DEP-DL-EFF-DATE-N := HIS350A1.DEP-DL-EFF-DATE-N(#I) 
1846   END-FOR /* (1393) FR2. #i 
1847 * 
1848   FOR #I 1 15 
1849     IF HIS350A1.DEP-RELATION(#I) = MASK(.'1A') 
1850       IF #SPOUSE-EXISTS 
1851         #E-MSG := 'Subscriber cannot have more than one lawful spouse' 
1852         PERFORM ADD-ERROR 
1853       END-IF 
1854       #SPOUSE-EXISTS := TRUE 
1855       IF HIS350A1.DEP-DATE-OF-BIRTH-N(#I) > 0 
1856         #SPOUSE-DOB-N := HIS350A1.DEP-DATE-OF-BIRTH-N(#I) 
1857       END-IF 
1858     END-IF /* (1849) 
1859   END-FOR /* (1847) #i 
1860 * Make sure multiple spouses do not have same coverage 
1861   FOR #I 1 15 
1862     IF HIS350A1.DEP-RELATION(#I) = MASK(.'1'.) 
1863       FOR #J 1 15 
1864         IF #I = #J /* Do not compare record to itself 
1865           ESCAPE TOP 
1866         END-IF 
1867         IF HIS350A1.DEP-RELATION(#J) = MASK(.'1'.) 
1868           DECIDE FOR EVERY CONDITION 
1869             WHEN (HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
1870                 OR (HIS350A1.DEP-HLTH-STATUS(#I) = 'A1' 
1871                 AND HIS350A1.DEP-HLTH-PENDING-ST(#I) = ' ')) 
1872                 AND (HIS350A1.DEP-HLTH-PENDING-ST(#J) = 'A1' 
1873                 OR (HIS350A1.DEP-HLTH-STATUS(#J) = 'A1' 
1874                 AND HIS350A1.DEP-HLTH-PENDING-ST(#J) = ' ')) 
1875               #E-MSG := 'Multiple spouses cannot be active for'- 
1876                 ' Health coverage' 
1877               PERFORM ADD-ERROR 
1878             WHEN (HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1' 
1879                 OR (HIS350A1.DEP-DNTL-STATUS(#I) = 'A1' 
1880                 AND HIS350A1.DEP-DNTL-PENDING-ST(#I) = ' ')) 
1881                 AND (HIS350A1.DEP-DNTL-PENDING-ST(#J) = 'A1' 
1882                 OR (HIS350A1.DEP-DNTL-STATUS(#J) = 'A1' 
1883                 AND HIS350A1.DEP-DNTL-PENDING-ST(#J) = ' ')) 
1884               #E-MSG := 'Multiple spouses cannot be active for'- 
1885                 ' Dental coverage' 
1886               PERFORM ADD-ERROR 
1887             WHEN (HIS350A1.DEP-DL-PENDING-ST(#I) = 'A1' 
1888                 OR (HIS350A1.DEP-DL-STATUS(#I) = 'A1' 
1889                 AND HIS350A1.DEP-DL-PENDING-ST(#I) = ' ')) 
1890                 AND (HIS350A1.DEP-DL-PENDING-ST(#J) = 'A1' 
1891                 OR (HIS350A1.DEP-DL-STATUS(#J) = 'A1' 
1892                 AND HIS350A1.DEP-DL-PENDING-ST(#J) = ' ')) 
1893               #E-MSG := 'Multiple spouses cannot be active for'- 
1894                 ' Dep Life Spouse coverage' 
1895               PERFORM ADD-ERROR 
1896             WHEN ANY ESCAPE ROUTINE 
1897             WHEN NONE IGNORE 
1898           END-DECIDE /* (1868) 
1899         END-IF /* (1864) 
1900       END-FOR /* (1863) #j 
1901     END-IF 
1902     if his350a1.dep-new-add-pending(#i)         /* gsd20071106c start 
1903         and his350a1.dep-relation(#I) ne mask (.'1'.) /* mws20080320 
1904         and his350a1.dep-State-emp/ret-ind(#i) ne 'A'   /* MWS20080227 
1905         and his350a1.dep-hlth-pending-st(#i) ne 'A1' 
1906         and his350a1.dep-dntl-pending-st(#i) ne 'A1' 
1907         and his350a1.dep-dl-pending-st(#i) ne 'A1' 
1908         and his350a1.dep-ols-pending-st(#i) ne 'A1' 
1909       compress 'Dependent |' his350a1.dep-seq-num(#I)  
1910                 '| cannot be added without coverage'  
1911         into #e-msg 
1912       perform add-error 
1913     end-if                                      /* gsd20071106c end 
1914   END-FOR /* (1860) #i 
1915   IF HIS350A1.MARITAL-STATUS = 'M' 
1916     IF NOT #SPOUSE-EXISTS 
1917       if his350a1.subscriber-type = 'AR'  
1918         #E-FLD := HIS350A1.DEP-RELATION(1)  
1919         #E-MSG := 'Married subscribers must have a Lawful Spouse. '  
1920         PERFORM ADD-ERROR  
1921       end-if  
1922 ** mws20080320 
1923 **     #E-MSG := ' please contact your benefits administrator to make ' 
1924 **       -'your Open Enrollment change.' 
1925 **      PERFORM ADD-ERROR 
1926 **    PERFORM ADD-ERROR 
1927     END-IF 
1928     IF #SAME-SEX 
1929       IF HIS350A1.SEX = 'F' 
1930         #GENDER := 'female' 
1931       ELSE 
1932         #GENDER := 'male' 
1933       END-IF 
1934       COMPRESS 'Subscriber and spouse cannot both be ' 
1935         #GENDER INTO #E-MSG 
1936       #E-FLD := HIS350A1.DEP-RELATION(1) 
1937       PERFORM ADD-ERROR 
1938     END-IF 
1939   END-IF /* (1851) 
1940 * 
1941   MOVE BY NAME HIS350A1 TO HIS357A1 
1942   CALLNAT 'HIS357N1' /* Update Dependent Data 
1943     HIS357A1 
1944   IF HIS357A1.HAS-ERROR /* Handle errors from subroutine 
1945     FOR #I 1 HIS357A1.ERROR-COUNT 
1946       #E-MSG := HIS357A1.ERROR-MESSAGE(#I) 
1947       #E-FLD := HIS357A1.ERROR-FIELDS(#I) 
1948       #E-NDX := HIS357A1.ERROR-INDEX(#I) 
1949       PERFORM ADD-ERROR 
1950     END-FOR /* #I 
1951   END-IF 
1952   MOVE BY NAME HIS357A1.DEPENDENT-INFO TO HIS350A1 
1953   MOVE BY NAME HIS357A1.SUSPENSE-INFO TO HIS350A1 
1954   MOVE BY NAME HIS357A1.MESSAGE-INFO TO HIS350A1 
1955 END-IF /* (1372) EDIT 
1956 END-SUBROUTINE /* (1349) DEPENDENT-MODULE 
1957 * 
1958 ************************************************************************ 
1959 define subroutine get-orig-dep-eff-dates 
1960 ************************************************************************ 
1961 #DEP-REC-FOUND := 'N' 
1962 IF HIS350A1.DEP-SSN(#I) NE ' ' 
1963   FADM1. FIND ACT-DEPEND-MAST WITH DEP-SSN = HIS350A1.DEP-SSN(#I) 
1964     IF NO 
1965       ESCAPE BOTTOM(FADM1.) 
1966     END-NOREC 
1967     HIS808A1.DEP-ISN(#I) := *ISN 
1968     HIS808A1.ORIG-DEP-HLTH-COVER(#I) := 
1969       ACT-DEPEND-MAST.DEP-HLTH-STATUS 
1970     #DEP-REC-FOUND := 'Y' 
1971   END-FIND /* (1963) fadm1. ACT-DEPEND-MAST 
1972 ELSE /* (1392) 
1973   FADM2. FIND ACT-DEPEND-MAST 
1974       WITH DEP-SUBSCRIBER-SSN = HIS350A1.SSN 
1975     IF NO 
1976       ESCAPE BOTTOM(FADM2.) 
1977     END-NOREC 
1978     IF ACT-DEPEND-MAST.DEP-SEQ-NUM = HIS350A1.DEP-SEQ-NUM(#I) 
1979       HIS808A1.DEP-ISN(#I) := *ISN 
1980       HIS808A1.ORIG-DEP-HLTH-COVER(#I) := 
1981         ACT-DEPEND-MAST.DEP-HLTH-STATUS 
1982       #DEP-REC-FOUND := 'Y' 
1983       #DEP-FOUND-ARRAY(#I) := TRUE 
1984     END-IF 
1985   END-FIND /* (1973) fadm2. ACT-DEPEND-MAST 
1986 END-IF /* (1392) 
1987 IF #DEP-REC-FOUND = 'Y' 
1988   MOVE EDITED ACT-DEPEND-MAST.DEP-HLTH-EFF-DATE (EM=YYYYMMDD) TO 
1989     #DEP-HLTH-EFF-DATE 
1990   MOVE EDITED ACT-DEPEND-MAST.DEP-HLTH-END-DATE (EM=YYYYMMDD) TO 
1991     #DEP-HLTH-END-DATE 
1992   MOVE EDITED ACT-DEPEND-MAST.DEP-DNTL-EFF-DATE (EM=YYYYMMDD) TO 
1993     #DEP-DNTL-EFF-DATE 
1994   MOVE EDITED ACT-DEPEND-MAST.DEP-DNTL-END-DATE (EM=YYYYMMDD) TO 
1995     #DEP-DNTL-END-DATE 
1996   MOVE EDITED ACT-DEPEND-MAST.DEP-DL-EFF-DATE (EM=YYYYMMDD) TO 
1997     #DEP-DL-EFF-DATE 
1998   MOVE EDITED ACT-DEPEND-MAST.DEP-DL-END-DATE (EM=YYYYMMDD) TO 
1999     #DEP-DL-END-DATE 
2000   MOVE EDITED ACT-DEPEND-MAST.DEP-OLS-EFF-DATE (EM=YYYYMMDD) TO 
2001     #DEP-OLS-EFF-DATE 
2002   MOVE EDITED ACT-DEPEND-MAST.DEP-OLS-END-DATE (EM=YYYYMMDD) TO 
2003     #DEP-OLS-END-DATE 
2004 ELSE /* (1987) 
2005   RESET #DEP-HLTH-EFF-DATE #DEP-DNTL-EFF-DATE #DEP-DL-EFF-DATE 
2006     #DEP-OLS-EFF-DATE  
2007     #DEP-HLTH-END-DATE #DEP-DNTL-END-DATE #DEP-DL-END-DATE 
2008     #DEP-OLS-END-DATE  
2009 *****   ADD 1 TO #LAST-SEQ-NUM 
2010 END-IF /* (1987) 
2011 end-subroutine 
2012 * 
2013 ************************************************************************ 
2014 define subroutine reset-dep-eff-dates 
2015 ************************************************************************ 
2016 **IF NOT(HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
2017 decide for every condition 
2018   when his350a1.dep-hlth-status(#i) 
2019       = his350a1.dep-hlth-pending-st(#i) 
2020     his350a1.dep-hlth-eff-date-n(#i) := #dep-hlth-eff-date-n 
2021     his350a1.dep-hlth-end-date-n(#i) := #dep-hlth-end-date-n 
2022   when his350a1.dep-dntl-status(#i) 
2023       = his350a1.dep-dntl-pending-st(#i) 
2024     his350a1.dep-dntl-eff-date-n(#i) := #dep-dntl-eff-date-n 
2025     his350a1.dep-dntl-end-date-n(#i) := #dep-dntl-end-date-n 
2026   when his350a1.dep-dl-status(#i) 
2027       = his350a1.dep-dl-pending-st(#i) 
2028     his350a1.dep-dl-eff-date-n(#i) := #dep-dl-eff-date-n 
2029     his350a1.dep-dl-end-date-n(#i) := #dep-dl-end-date-n 
2030   when his350a1.dep-ols-status(#i) 
2031       = his350a1.dep-ols-pending-st(#i) 
2032     his350a1.dep-ols-eff-date-n(#i) := #dep-ols-eff-date-n 
2033     his350a1.dep-ols-end-date-n(#i) := #dep-ols-end-date-n 
2034   when none ignore 
2035 end-decide 
2036 **END-IF 
2037 end-subroutine 
2038 * 
2039 ************************************************************************ 
2040 DEFINE SUBROUTINE BENEFICIARY-MODULE 
2041 ************************************************************************ 
2042 IF HIS350A1.ACTION = 'GET' 
2043     AND NOT #6-MO-BRK 
2044     AND HIS350A1.SUBSCR-BEFORE 
2045   MOVE BY NAME HIS350A1 TO HIS358A1 
2046   CALLNAT 'HIS358N1' /* AES Beneficiary Driver 
2047     HIS358A1 
2048   IF HIS358A1.HAS-ERROR /* Handle errors from subroutine 
2049     FOR #I 1 HIS358A1.ERROR-COUNT 
2050       #E-MSG := HIS358A1.ERROR-MESSAGE(#I) 
2051       #E-FLD := HIS358A1.ERROR-FIELDS(#I) 
2052       #E-NDX := HIS358A1.ERROR-INDEX(#I) 
2053       PERFORM ADD-ERROR 
2054     END-FOR /* #I 
2055   END-IF 
2056   MOVE BY NAME HIS358A1.BENEFICIARY-INFO TO HIS350A1 
2057   MOVE BY NAME HIS358A1.SUSPENSE-INFO TO HIS350A1 
2058   MOVE BY NAME HIS358A1.MESSAGE-INFO TO HIS350A1 
2059 END-IF /* (2042) 
2060 IF HIS350A1.ACTION = 'EDIT' 
2061     and his350a1.change-reason ne 'AR' 
2062 /* Part-time subscribers cannot enter any beneficiary info 
2063   IF NOT(HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
2064     if his350a1.subscriber-type = 'AR'  
2065     IF HIS350A1.BEN-PAYEE-TYPE(*) NE ' ' 
2066 /* ron20080305 start 
2067 **      #E-MSG := 'Part-time employees cannot enter Beneficiary ' 
2068 **        -'Information' 
2069 **      PERFORM ADD-ERROR 
2070       reset his350a1.BENEFICIARY-DATA(*) 
2071 /* ron20080305 end 
2072       ESCAPE ROUTINE 
2073     ELSE 
2074       ESCAPE ROUTINE 
2075     END-IF 
2076     END-IF  
2077   END-IF 
2078 * if any benes do not have seq number, assign it here /* gsd20070321a start 
2079   #LAST-SEQ-NUM := *MAXVAL(HIS350A1.ben-SEQ-NUM(*)) 
2080 **FOR #I 1 15 
2081   for #i 1 20 
2082     IF HIS350A1.ben-payee-type(#I) NE ' ' 
2083         AND HIS350A1.ben-SEQ-NUM(#I) = 0 
2084       ADD 1 TO #LAST-SEQ-NUM 
2085       HIS350A1.ben-SEQ-NUM(#I) := #LAST-SEQ-NUM 
2086     END-IF 
2087   END-FOR /* gsd20070321a end 
2088 /*Build counters and percentages for each primary and contingent plan 
2089   RESET #WORKING-FIELDS 
2090   FOR #BEN-IDX 1 TO 20 
2091     FOR #I 1 TO 3 /* field allows for 8 
2092       IF #I = 1 
2093           AND NOT(HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = ' ') 
2094           AND HIS350A1.BEN-PAYEE-TYPE(#BEN-IDX) <> ' ' 
2095         #HLTH-SELECTED := TRUE 
2096       ELSE 
2097         IF #I = 2 
2098             AND NOT(HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = ' ') 
2099             AND HIS350A1.BEN-PAYEE-TYPE(#BEN-IDX) <> ' ' 
2100           #OL-SELECTED := TRUE 
2101 **      ELSE  
2102 **        IF #I = 3  
2103 **            AND NOT(HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = ' ')  
2104 **            AND HIS350A1.BEN-PAYEE-TYPE(#BEN-IDX) <> ' '  
2105 **          #LTC-SELECTED := TRUE  
2106 **        END-IF  
2107         END-IF 
2108       END-IF 
2109       DECIDE FOR EVERY CONDITION 
2110 *       WHEN HIS350A1.BEN-PAYEE-TYPE(#BEN-IDX) <> ' ' 
2111 *           AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,1) = ' ' 
2112 *           AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,2) = ' ' 
2113 *           AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,3) = ' ' 
2114 *         COMPRESS 'Beneficiary' #BEN-IDX 'must have at least one ' 
2115 *           'coverage type selected' INTO #E-MSG 
2116 *         PERFORM ADD-ERROR 
2117 *         escape bottom 
2118         WHEN NOT(HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = ' ') 
2119             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = ' ' 
2120           IF #I = 1 
2121             #CODE := 'Basic Life' 
2122           ELSE 
2123             IF #I = 2 
2124               #CODE := 'Optl Life' 
2125             ELSE 
2126               #CODE := 'LTC' 
2127             END-IF 
2128           END-IF 
2129           COMPRESS 'Beneficiary' #BEN-IDX 'must select Prim/Cont for' 
2130             #CODE 'when Coverage is selected' INTO #E-MSG 
2131           PERFORM ADD-ERROR 
2132         WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) = 0 
2133             AND #BEN-BL-PRIM-ENTERED 
2134             AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '1' 
2135             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P' 
2136           #E-MSG := 'Must enter all primary Basic Life percents or none' 
2137           #E-FLD := 'BEN-BENEFIT-PERCENT' 
2138           PERFORM ADD-ERROR 
2139         WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) = 0 
2140             AND #BEN-BL-CON-ENTERED 
2141             AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '1' 
2142             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C' 
2143           #E-MSG := 'Must enter all contingent Basic Life percents' 
2144             -' or none' 
2145           #E-FLD := 'BEN-BENEFIT-PERCENT' 
2146           PERFORM ADD-ERROR 
2147         WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) = 0 
2148             AND #BEN-OL-PRIM-ENTERED 
2149             AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '2' 
2150             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P' 
2151           #E-MSG := 'Must enter all primary Optl Life percents' 
2152             -' or none' 
2153           #E-FLD := 'BEN-BENEFIT-PERCENT' 
2154           PERFORM ADD-ERROR 
2155         WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) = 0 
2156             AND #BEN-OL-CON-ENTERED 
2157             AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '2' 
2158             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C' 
2159           #E-MSG := 'Must enter all contingent Optl Life percents' 
2160             -' or none' 
2161           #E-FLD := 'BEN-BENEFIT-PERCENT' 
2162           PERFORM ADD-ERROR 
2163 **      WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) = 0  
2164 **          AND #BEN-LTC-PRIM-ENTERED  
2165 **          AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '3'  
2166 **          AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P'  
2167 **        #E-MSG := 'Must enter all primary LTC percents or none'  
2168 **        #E-FLD := 'BEN-BENEFIT-PERCENT'  
2169 **        PERFORM ADD-ERROR  
2170 **      WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) = 0  
2171 **          AND #BEN-LTC-CON-ENTERED  
2172 **          AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '3'  
2173 **          AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C'  
2174 **        #E-MSG := 'Must enter all contingent LTC percents or none'  
2175 **        #E-FLD := 'BEN-BENEFIT-PERCENT'  
2176 **        PERFORM ADD-ERROR  
2177         WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) NE 0 
2178             AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '1' 
2179             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P' 
2180           #BEN-BL-PRIM-ENTERED := TRUE 
2181         WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) NE 0 
2182             AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '1' 
2183             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C' 
2184           #BEN-BL-CON-ENTERED := TRUE 
2185         WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) NE 0 
2186             AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '2' 
2187             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P' 
2188           #BEN-OL-PRIM-ENTERED := TRUE 
2189         WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) NE 0 
2190             AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '2' 
2191             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C' 
2192           #BEN-OL-CON-ENTERED := TRUE 
2193 **      WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) NE 0  
2194 **          AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '3'  
2195 **          AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P'  
2196 **        #BEN-LTC-PRIM-ENTERED := TRUE  
2197 **      WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) NE 0  
2198 **          AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '3'  
2199 **          AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C'  
2200 **        #BEN-LTC-CON-ENTERED := TRUE  
2201         WHEN NONE 
2202           IGNORE 
2203       END-DECIDE /* (2109) 
2204 * 
2205       DECIDE FOR FIRST CONDITION 
2206         WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '1' 
2207             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P' 
2208           ADD 1 TO #BEN-BL-PRIM-COUNT 
2209           ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) TO 
2210             #BEN-BL-PRIM-PERCENT 
2211         WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '1' 
2212             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C' 
2213           ADD 1 TO #BEN-BL-CON-COUNT 
2214           ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) TO 
2215             #BEN-BL-CON-PERCENT 
2216         WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '2' 
2217             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P' 
2218           ADD 1 TO #BEN-OL-PRIM-COUNT 
2219           ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) TO 
2220             #BEN-OL-PRIM-PERCENT 
2221         WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '2' 
2222             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C' 
2223           ADD 1 TO #BEN-OL-CON-COUNT 
2224           ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) TO 
2225             #BEN-OL-CON-PERCENT 
2226 **      WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '3'  
2227 **          AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P'  
2228 **        ADD 1 TO #BEN-LTC-PRIM-COUNT  
2229 **        ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) TO  
2230 **          #BEN-LTC-PRIM-PERCENT  
2231 **      WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '3'  
2232 **          AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C'  
2233 **        ADD 1 TO #BEN-LTC-CON-COUNT  
2234 ***       ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) TO  
2235 **          #BEN-LTC-CON-PERCENT  
2236         WHEN NONE 
2237           IGNORE 
2238       END-DECIDE /* (2205) 
2239     END-FOR /* #I (2133) 
2240   END-FOR /* #BEN-IDX (2081) 
2241 * 
2242   IF NOT #HLTH-SELECTED 
2243     IF HIS350A1.SL-STATUS = 'A1' 
2244         AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
2245       #E-MSG := 'Beneficiary required for Basic Life' 
2246       PERFORM ADD-ERROR 
2247       RESET #HLTH-SELECTED 
2248     END-IF 
2249   ELSE 
2250     IF NOT(HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
2251       if his350a1.subscriber-type = 'AR'  
2252       #E-MSG := 'No Basic Life Beneficiary allowed for part-time ' 
2253         -'subscribers' 
2254       PERFORM ADD-ERROR 
2255       END-IF  
2256     END-IF  
2257   END-IF 
2258   IF NOT #OL-SELECTED 
2259     IF HIS350A1.OL-STATUS = 'A1' 
2260         AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
2261       #E-MSG := 'Beneficiary required for Optl. Life' 
2262       PERFORM ADD-ERROR 
2263       RESET #OL-SELECTED 
2264     END-IF 
2265   ELSE 
2266     IF NOT(HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
2267       if his350a1.subscriber-type = 'AR'  
2268       #E-MSG := 'No Optl. Life Beneficiary allowed for part-time ' 
2269         -'subscribers' 
2270       PERFORM ADD-ERROR 
2271       end-if  
2272     END-IF 
2273   END-IF 
2274 * 
2275 /* Compute percentage for both primary and contigent for each plan 
2276   DECIDE FOR EVERY CONDITION 
2277     WHEN #BEN-BL-PRIM-PERCENT = 0 
2278         AND #BEN-BL-PRIM-COUNT > 0 
2279       #COMPUTE-BL-PRIM := TRUE 
2280       #COMP-BL-PRIM-COUNT := #BEN-BL-PRIM-COUNT 
2281       #COMP-BL-PRIM-PERCENT := 100 / #BEN-BL-PRIM-COUNT 
2282     WHEN #BEN-BL-CON-PERCENT = 0 
2283         AND #BEN-BL-CON-COUNT > 0 
2284       #COMPUTE-BL-CON := TRUE 
2285       #COMP-BL-CON-COUNT := #BEN-BL-CON-COUNT 
2286       #COMP-BL-CON-PERCENT := 100 / #BEN-BL-CON-COUNT 
2287     WHEN #BEN-OL-PRIM-PERCENT = 0 
2288         AND #BEN-OL-PRIM-COUNT > 0 
2289       #COMPUTE-OL-PRIM := TRUE 
2290       #COMP-OL-PRIM-COUNT := #BEN-OL-PRIM-COUNT 
2291       #COMP-OL-PRIM-PERCENT := 100 / #BEN-OL-PRIM-COUNT 
2292     WHEN #BEN-OL-CON-PERCENT = 0 
2293         AND #BEN-OL-CON-COUNT > 0 
2294       #COMPUTE-OL-CON := TRUE 
2295       #COMP-OL-CON-COUNT := #BEN-OL-CON-COUNT 
2296       #COMP-OL-CON-PERCENT := 100 / #BEN-OL-CON-COUNT 
2297 **  WHEN #BEN-LTC-PRIM-PERCENT = 0  
2298 **      AND #BEN-LTC-PRIM-COUNT > 0  
2299 **    #COMPUTE-LTC-PRIM := TRUE  
2300 **    #COMP-LTC-PRIM-COUNT := #BEN-LTC-PRIM-COUNT  
2301 **    #COMP-LTC-PRIM-PERCENT := 100 / #BEN-LTC-PRIM-COUNT  
2302 **  WHEN #BEN-LTC-CON-PERCENT = 0  
2303 ***     AND #BEN-LTC-CON-COUNT > 0  
2304 **    #COMPUTE-LTC-CON := TRUE  
2305 **    #COMP-LTC-CON-COUNT := #BEN-LTC-CON-COUNT  
2306 **    #COMP-LTC-CON-PERCENT := 100 / #BEN-LTC-CON-COUNT  
2307     WHEN NONE 
2308       IGNORE 
2309   END-DECIDE /* (2276) 
2310 * 
2311 /* If Percentages are computed determine what amt and store to record 
2312   FOR #BEN-IDX 1 TO 20 
2313     FOR #I 1 TO 3 /* field allows for 8 
2314       DECIDE FOR EVERY CONDITION 
2315         WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '1' 
2316             AND #COMPUTE-BL-PRIM 
2317             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P' 
2318           IF #COMP-BL-PRIM-COUNT = 1 
2319             HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) := 
2320               100 - (#COMP-BL-PRIM-PERCENT * (#BEN-BL-PRIM-COUNT - 1)) 
2321           ELSE 
2322             IF #COMP-BL-PRIM-COUNT > 1 
2323               HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) := 
2324                 #COMP-BL-PRIM-PERCENT 
2325             END-IF 
2326           END-IF 
2327           SUBTRACT 1 FROM #COMP-BL-PRIM-COUNT 
2328           ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) 
2329             TO #BEN-BL-PRIM-PERCENT 
2330         WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '1' 
2331             AND #COMPUTE-BL-CON 
2332             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C' 
2333           IF #COMP-BL-CON-COUNT = 1 
2334             HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) := 
2335               100 - (#COMP-BL-CON-PERCENT * (#BEN-BL-CON-COUNT - 1)) 
2336           ELSE 
2337             IF #COMP-BL-CON-COUNT > 1 
2338               HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) := 
2339                 #COMP-BL-CON-PERCENT 
2340             END-IF 
2341           END-IF 
2342           SUBTRACT 1 FROM #COMP-BL-CON-COUNT 
2343           ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) TO 
2344             #BEN-BL-CON-PERCENT 
2345         WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '2' 
2346             AND #COMPUTE-OL-PRIM 
2347             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P' 
2348           IF #COMP-OL-PRIM-COUNT = 1 
2349             HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) := 
2350               100 - (#COMP-OL-PRIM-PERCENT * (#BEN-OL-PRIM-COUNT - 1)) 
2351           ELSE 
2352             IF #COMP-OL-PRIM-COUNT > 1 
2353               HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) := 
2354                 #COMP-OL-PRIM-PERCENT 
2355             END-IF 
2356           END-IF 
2357           SUBTRACT 1 FROM #COMP-OL-PRIM-COUNT 
2358           ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) 
2359             TO #BEN-OL-PRIM-PERCENT 
2360         WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '2' 
2361             AND #COMPUTE-OL-CON 
2362             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C' 
2363           IF #COMP-OL-CON-COUNT = 1 
2364             HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) := 
2365               100 - (#COMP-OL-CON-PERCENT * (#BEN-OL-CON-COUNT - 1)) 
2366           ELSE 
2367             IF #COMP-OL-CON-COUNT > 1 
2368               HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) := 
2369                 #COMP-OL-CON-PERCENT 
2370             END-IF 
2371           END-IF 
2372           SUBTRACT 1 FROM #COMP-OL-CON-COUNT 
2373           ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) TO 
2374             #BEN-OL-CON-PERCENT 
2375 **      WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '3'  
2376 **          AND #COMPUTE-LTC-PRIM  
2377 **          AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P'  
2378 **        IF #COMP-LTC-PRIM-COUNT = 1  
2379 **          HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) :=  
2380 **            100 - (#COMP-LTC-PRIM-PERCENT * (#BEN-LTC-PRIM-COUNT - 1))  
2381 **        ELSE  
2382 **          IF #COMP-LTC-PRIM-COUNT > 1  
2383 **            HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) :=  
2384 **              #COMP-LTC-PRIM-PERCENT  
2385 **          END-IF  
2386 **        END-IF  
2387 **        SUBTRACT 1 FROM #COMP-LTC-PRIM-COUNT  
2388 **        ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) TO  
2389 **          #BEN-LTC-PRIM-PERCENT  
2390 **      WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '3'  
2391 **          AND #COMPUTE-LTC-CON  
2392 **          AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C'  
2393 **        IF #COMP-LTC-CON-COUNT = 1  
2394 **          HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) :=  
2395 **            100 - (#COMP-LTC-CON-PERCENT * (#BEN-LTC-CON-COUNT - 1))  
2396 **       ELSE  
2397 **          IF #COMP-LTC-CON-COUNT > 1  
2398 **            HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) :=  
2399 **              #COMP-LTC-CON-PERCENT  
2400 **          END-IF  
2401 **        END-IF  
2402 **        SUBTRACT 1 FROM #COMP-LTC-CON-COUNT  
2403 **        ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I)  
2404 **          TO #BEN-LTC-CON-PERCENT  
2405 * 
2406         WHEN NONE 
2407           IGNORE 
2408       END-DECIDE /* (2314) 
2409     END-FOR /* #I (2313) 
2410 * 
2411     #suffix := his350a1.ben-suffix(#BEN-IDX)      /* gsd20070806 start 
2412     FOR #I 1 TO 3 
2413       IF #SUFF-NAME(#I) = '.' 
2414         #SUFF-NAME(#I) := ' ' 
2415       END-IF 
2416     END-FOR 
2417     his350a1.ben-suffix(#BEN-IDX) := #suffix      /* gsd20070806 end 
2418 * 
2419     IF HIS350A1.BEN-DATE-OF-BIRTH-N(#BEN-IDX) GT 0 
2420         AND (HIS350A1.BEN-DATE-OF-BIRTH-N(#BEN-IDX) < 15830101 
2421         OR HIS350A1.BEN-DATE-OF-BIRTH-N(#BEN-IDX) > 26990101) 
2422       COMPRESS 'Beneficiary' #BEN-IDX 'Date of Birth is invalid.' 
2423         INTO #E-MSG 
2424       #E-FLD := 'BEN-DATE-OF-BIRTH-N' 
2425       PERFORM ADD-ERROR 
2426       ESCAPE ROUTINE 
2427     END-IF 
2428   END-FOR /* #BEN-IDX (2312) 
2429 * 
2430 /* Check that a primary beneficiary is entered for each plan 
2431   DECIDE FOR EVERY CONDITION 
2432     WHEN HIS350A1.SL-STATUS = 'A1' 
2433         AND (#BEN-BL-PRIM-COUNT = 0 
2434         AND #BEN-BL-CON-COUNT > 0) 
2435       #E-MSG := 'Primary Beneficiary required for Basic Life' 
2436       #E-FLD := 'BEN-INSURANCE-TYPE' 
2437       PERFORM ADD-ERROR 
2438     WHEN HIS350A1.OL-STATUS = 'A1' 
2439         AND (#BEN-OL-PRIM-COUNT = 0 
2440         AND #BEN-OL-CON-COUNT > 0) 
2441       #E-MSG := 'Primary Beneficiary required for Optional Life' 
2442       #E-FLD := 'BEN-INSURANCE-TYPE' 
2443       PERFORM ADD-ERROR 
2444     WHEN #BEN-BL-PRIM-COUNT > 0 
2445         AND (#BEN-BL-PRIM-PERCENT < 100 
2446         OR #BEN-BL-PRIM-PERCENT > 100) 
2447       COMPRESS 'Primary Basic Life percentages must equal 100 (now' 
2448         #BEN-BL-PRIM-PERCENT '%)' INTO #E-MSG 
2449       #E-FLD := 'BEN-INSURANCE-TYPE' 
2450       PERFORM ADD-ERROR 
2451     WHEN #BEN-BL-CON-COUNT > 0 
2452         AND (#BEN-BL-CON-PERCENT < 100 
2453         OR #BEN-BL-CON-PERCENT > 100) 
2454       COMPRESS 'Contigent Basic Life percentages must equal 100 (now' 
2455         #BEN-BL-CON-PERCENT '%)' INTO #E-MSG 
2456       #E-FLD := 'BEN-INSURANCE-TYPE' 
2457       PERFORM ADD-ERROR 
2458     WHEN #BEN-OL-PRIM-COUNT > 0 
2459         AND (#BEN-OL-PRIM-PERCENT < 100 
2460         OR #BEN-OL-PRIM-PERCENT > 100) 
2461       COMPRESS 'Primary Optional Life percentages must equal 100 (now' 
2462         #BEN-OL-PRIM-PERCENT '%)' INTO #E-MSG 
2463       #E-FLD := 'BEN-INSURANCE-TYPE' 
2464       PERFORM ADD-ERROR 
2465     WHEN #BEN-OL-CON-COUNT > 0 
2466         AND (#BEN-OL-CON-PERCENT < 100 
2467         OR #BEN-OL-CON-PERCENT > 100) 
2468       COMPRESS 'Contigent Optional Life percentages must equal 100 (now' 
2469         #BEN-OL-CON-PERCENT '%)' INTO #E-MSG 
2470       #E-FLD := 'BEN-INSURANCE-TYPE' 
2471       PERFORM ADD-ERROR 
2472 **  WHEN #BEN-LTC-PRIM-COUNT > 0  
2473 **      AND (#BEN-LTC-PRIM-PERCENT < 100  
2474 **      OR #BEN-LTC-PRIM-PERCENT > 100)  
2475 **    COMPRESS 'Primary Long Term Care percentages must equal 100 (now'  
2476 **      #BEN-LTC-PRIM-PERCENT '%)' INTO #E-MSG  
2477 **    #E-FLD := 'BEN-INSURANCE-TYPE'  
2478 **    PERFORM ADD-ERROR  
2479 **  WHEN #BEN-LTC-CON-COUNT > 0  
2480 **      AND (#BEN-LTC-CON-PERCENT < 100  
2481 **      OR #BEN-LTC-CON-PERCENT > 100)  
2482 **    COMPRESS 'Contigent Long Term Care percentages must equal 100'  
2483 **      ' (now' #BEN-LTC-CON-PERCENT '%)' INTO #E-MSG  
2484 **    #E-FLD := 'BEN-INSURANCE-TYPE'  
2485 **    PERFORM ADD-ERROR  
2486     WHEN NONE 
2487       IGNORE 
2488   END-DECIDE /* (2431) 
2489 * 
2490   RESET HIS358A1 
2491   MOVE BY NAME HIS350A1 TO HIS358A1 
2492   CALLNAT 'HIS358N1' /* AES Beneficiary Driver 
2493     HIS358A1 
2494   IF HIS358A1.HAS-ERROR /* Handle errors from subroutine 
2495     FOR #I 1 HIS358A1.ERROR-COUNT 
2496       #E-MSG := HIS358A1.ERROR-MESSAGE(#I) 
2497       #E-FLD := HIS358A1.ERROR-FIELDS(#I) 
2498       #E-NDX := HIS358A1.ERROR-INDEX(#I) 
2499       PERFORM ADD-ERROR 
2500     END-FOR /* #I 
2501   END-IF 
2502   MOVE BY NAME HIS358A1.BENEFICIARY-INFO TO HIS350A1 
2503   MOVE BY NAME HIS358A1.SUSPENSE-INFO TO HIS350A1 
2504   MOVE BY NAME HIS358A1.MESSAGE-INFO TO HIS350A1 
2505 END-IF /* (2061) 
2506 END-SUBROUTINE /* (2041) BENEFICIARY-MODULE 
2507 ************************************************************************ 
2508 DEFINE SUBROUTINE CHECK-FOR-SUSPENSE-RECORD 
2509 ************************************************************************ 
2510 RHST1. 
2511 READ HIS-SUSPENSE-TRANS BY SP-SUSPENSE-KEY  
2512     STARTING FROM HIS350A1.SSN 
2513   IF HIS-SUSPENSE-TRANS.SSN NE HIS350A1.SSN 
2514     ESCAPE BOTTOM(RHST1.) 
2515   END-IF 
2516   HIS350A1.DATA-FROM-SUSPENSE := TRUE 
2517 * 
2518   #ALPHA-CHECK := HIS-SUSPENSE-TRANS.SUSPENSE-CODE 
2519   IF #ALPHA-CHECK = 'A' THRU 'Z' 
2520     RESET HIS350A1.SUSPENSE-INFORMATION 
2521     HIS350A1.DATA-FROM-SUSPENSE := TRUE 
2522 /* We've found an A1, since the GET was performed on the other 
2523 /* four sections and may have had errors finding the records, 
2524 /* we will reset the error-information and start over with the 
2525 /* suspense. 
2526     RESET HIS350A1.ERROR-INFO 
2527 /* Use suspense data 
2528     HIS369A1.SSN := HIS-SUSPENSE-TRANS.SSN 
2529     HIS369A1.TRANSACTION-CODE := HIS-SUSPENSE-TRANS.TRANSACTION-CODE 
2530     HIS369A1.SUSPENSE-CODE := HIS-SUSPENSE-TRANS.SUSPENSE-CODE 
2531     CDAOBJ2.#FUNCTION := 'GET' 
2532     PERFORM CALL-SUSPENSE-OBJECT 
2533     COMPRESS 'Data is from a' HIS-SUSPENSE-TRANS.TRANSACTION-CODE 
2534       'suspense transaction' INTO HIS350A1.SUSPENSE-MESSAGE 
2535 * 
2536     MOVE BY NAME HIS369A1 TO HIS350A1 
2537     HIS350A1.USER-ID := HIS369A1.TRANSACTION-OPER-ID 
2538     MOVE HIS369A1.DEP-INS-PREM/SEC-IND(*) /* required because field 
2539       TO HIS350A1.DEP-INS-PRIM/SEC-IND(*) /* field name misspelled 
2540     HIS350A1.DATA-FROM-SUSPENSE := TRUE 
2541     HIS350A1.SUSPENSE-HELD-ID := HIS369A1-ID 
2542     HIS350A1.SUSPENSE-TIMESTMP := HIS369A1.TIMESTMP 
2543     HIS350A1.DEP-SEQ-NUM(*) := HIS369A1.DEP-SSN-SEQ(*) 
2544 * 
2545     MOVE BY NAME HIS369A1 TO HIS350A2 
2546     HIS350A2.D-TO-N8 := TRUE 
2547     CALLNAT 'mws350N2' /* Enrollment Data Date Conversion  
2548       HIS350A2 
2549     MOVE BY NAME HIS350A2 TO HIS350A1 
2550 * 
2551 **  
2552     IF HIS350A1.ACTION = 'GET' 
2553 **      AND HIS-SUSPENSE-TRANS.SUSPENSE-CODE = 'A' OR = 'G'  
2554         AND NOT (HIS350A1.EMPLOYER-GROUP-ID = MASK('7'......)) 
2555       CALLNAT 'mws350n4' /* Calculate Rates  
2556         HIS350A1 
2557     END-IF 
2558   END-IF /* (2519) 
2559 END-READ /* (2510) RHST1. IS-SUSPENSE-TRANS 
2560 END-SUBROUTINE /* (2508) CHECK-FOR-SUSPENSE-RECORD 
2561 ************************************************************************ 
2562 DEFINE SUBROUTINE SETUP-STORE-SUSPENSE 
2563 ************************************************************************ 
2564 * This routine will store a new suspense record from the data in 
2565 * the his350a1 pda.  If one originally existed, it will be deleted 
2566 * and a new one stored. 
2567 * 
2568 * #new-susp-code and #new-trxn-code must be populated before calling. 
2569 IF HIS350A1.DATA-FROM-SUSPENSE 
2570   HIS369A1.SSN := HIS350A1.SSN 
2571   HIS369A1-ID := HIS350A1.SUSPENSE-HELD-ID 
2572   MOVE BY NAME HIS369A1-ID.STRUCTURE TO HIS369A1 
2573   CDAOBJ2.#FUNCTION := 'GET' 
2574   PERFORM CALL-SUSPENSE-OBJECT /* get the suspense record 
2575 * 
2576   CDAOBJ2.#FUNCTION := 'DELETE' /* delete the suspense record 
2577   PERFORM CALL-SUSPENSE-OBJECT 
2578 /* move data from web pda to suspense pda  (including date conv) 
2579   MOVE BY NAME HIS350A1 TO HIS369A1 
2580   MOVE HIS350A1.DEP-INS-PRIM/SEC-IND(*) /* required because field 
2581     TO HIS369A1.DEP-INS-PREM/SEC-IND(*) /* field name misspelled 
2582   HIS369A1.DEP-SSN-SEQ(*) := HIS350A1.DEP-SEQ-NUM(*) 
2583   HIS369A1.TRANSACTION-OPER-ID := HIS350A1.USER-ID 
2584 * 
2585   MOVE BY NAME HIS350A1 TO HIS350A2 
2586   HIS350A2.N8-TO-D := TRUE 
2587   CALLNAT 'mws350N2' /* Enrollment Data Date Conversion Routine  
2588     HIS350A2 
2589 * 
2590   MOVE BY NAME HIS350A2 TO HIS369A1 
2591 **HIS369A1.SUSPENSE-CODE := #NEW-SUSP-CODE  
2592   HIS369A1.TRANSACTION-CODE := #NEW-TRXN-CODE 
2593   if his350a1.user-id NE 'BINUSER'    /*MWS20080825 
2594   and his350a1.subscriber-type = 'AR' /*MWS20080825  
2595      HIS369A1.PAYMENT-TYPE := 'I' 
2596   END-IF                              /*MWS20080825 
2597   CDAOBJ2.#FUNCTION := 'STORE' 
2598   PERFORM CALL-SUSPENSE-OBJECT 
2599 ELSE /* (2569) /* Date not from suspense 
2600   RESET HIS369A1 HIS369A1-ID HIS369A2 
2601   MOVE BY NAME HIS350A1 TO HIS369A1 
2602   MOVE HIS350A1.DEP-INS-PRIM/SEC-IND(*) /* required because field 
2603     TO HIS369A1.DEP-INS-PREM/SEC-IND(*) /* field name misspelled 
2604   HIS369A1.DEP-SSN-SEQ(*) := HIS350A1.DEP-SEQ-NUM(*) 
2605   HIS369A1.TRANSACTION-OPER-ID := HIS350A1.USER-ID 
2606 * 
2607   MOVE BY NAME HIS350A1 TO HIS350A2 
2608   HIS350A2.N8-TO-D := TRUE 
2609   CALLNAT 'mws350N2' /* Enrollment Data Date Conversion Routine  
2610     HIS350A2 
2611   MOVE BY NAME HIS350A2 TO HIS369A1 
2612 * 
2613 * fields needed on backend but never updated on front end 
2614 * 
2615 **write '=' his390a1.payment-type  
2616 **write '=' his390a1.sponsor-ssn  
2617 **write '=' his390a1.retiree-reason  
2618 **write '=' his390a1.cobra-reason 
2619 **write '=' his390a1.medicare-end-date-d  
2620 **write '=' his390a1.medicare-sent-date-d  
2621 **write '=' his390a1.payment-date  
2622 **write '=' his390a1.date-retired newpage  
2623   his369a1.payment-type := his390a1.payment-type 
2624   his369a1.sponsor-ssn := his390a1.sponsor-ssn 
2625   his369a1.retiree-reason := his390a1.retiree-reason 
2626 **his369a1.cobra-reason := his390a1.cobra-reason 
2627   his369a1.medicare-end-date-d := his390a1.medicare-end-date-d 
2628   his369a1.medicare-sent-date-d := his390a1.medicare-sent-date-d 
2629   his369a1.payment-date := his390a1.payment-date 
2630   his369a1.date-retired := his390a1.date-retired 
2631   his369a1.prev-active-group-id := his390a1.prev-active-group-id 
2632   his369a1.payment-recvd := his390a1.payment-recvd  
2633 * 
2634 **HIS369A1.SUSPENSE-CODE := #NEW-SUSP-CODE  
2635   HIS369A1.TRANSACTION-CODE := #NEW-TRXN-CODE 
2636 *  
2637 * mws20081002 - per randy nolff  
2638 *  
2639  for #x = 1 to 15  
2640   if his369a1.dep-relation(#x) = mask(.'1A')  
2641     if  (his369a1.dep-hlth-status(#x) = mask('T'.) and  
2642           his369a1.DEP-HLTH-PENDING-ST(#x) ne 'A1')  
2643     and (his369a1.dep-dntl-status(#x) = mask('T'.) and  
2644          his369a1.dep-dntl-pending-st(#x) ne 'A1')  
2645     and (his369a1.dep-ols-status(#x) = mask('T'.) and  
2646          his369a1.dep-ols-pending-st(#x) ne 'A1')  
2647   
2648          assign his369a1.dep-eligibility(#x) = '5'  
2649       end-if  
2650       escape bottom(2639)  
2651     end-if  
2652  end-for  
2653   if his350a1.user-id NE 'BINUSER'    /*MWS20080825 
2654   and his350a1.subscriber-type = 'AR' /*MWS20080825  
2655       HIS369A1.PAYMENT-TYPE := 'I' 
2656   END-IF                              /*MWS20080825 
2657   CDAOBJ2.#FUNCTION := 'STORE' 
2658   PERFORM CALL-SUSPENSE-OBJECT 
2659 END-IF /* (2569) 
2660 END-SUBROUTINE /* (2562) SETUP-STORE-SUSPENSE 
2661 ************************************************************************ 
2662 DEFINE SUBROUTINE CALL-SUSPENSE-OBJECT 
2663 ************************************************************************ 
2664 CALLNAT 'HIS369N1' /* perform object maintenance for SUSPENSE file 
2665   HIS369A1 HIS369A1-ID HIS369A2 CDAOBJ2 MSG-INFO 
2666 * 
2667 * after calling an object-subp, always check for errors 
2668 IF ##ERROR-FIELD NE ' ' 
2669   EXAMINE ##MSG FOR ':1:' REPLACE WITH FULL VALUE '~ ' 
2670   EXAMINE ##MSG FOR '~' REPLACE WITH ##MSG-DATA(1) 
2671   EXAMINE ##MSG FOR ':2:' REPLACE WITH FULL VALUE '~ ' 
2672   EXAMINE ##MSG FOR '~' REPLACE WITH ##MSG-DATA(2) 
2673   EXAMINE ##MSG FOR ':3:' REPLACE WITH FULL VALUE '~ ' 
2674   EXAMINE ##MSG FOR '~' REPLACE WITH ##MSG-DATA(3) 
2675   #E-MSG := ##MSG 
2676   #E-FLD := ##ERROR-FIELD 
2677   PERFORM ADD-ERROR 
2678   BACKOUT TRANSACTION 
2679 END-IF 
2680 END-SUBROUTINE /* (2662) CALL-SUSPENSE-OBJECT 
2681 ******************************************************** 
2682 DEFINE SUBROUTINE CHECK-SUBSCRIBER-STATUS 
2683 ******************************************************** 
2684 FSM2. FIND SUBSCR-MAST WITH SSN = HIS350A1.SSN 
2685   IF NO RECORDS FOUND 
2686     #6-MO-BRK := FALSE 
2687     #NOT-ON-FILE := TRUE 
2688     PERFORM CHECK-FOR-SUSPENSE-RECORD 
2689     IF NOT HIS350A1.DATA-FROM-SUSPENSE 
2690       IF HIS350A1.TRXN-TYPE = 'CH' 
2691         COMPRESS 'No subscribers exist with SSN:' HIS350A1.SSN 
2692           INTO #E-MSG 
2693         #E-FLD := 'SSN' 
2694         PERFORM ADD-ERROR 
2695       ELSE 
2696         HIS350A1.SSN-NOT-ON-FILE := TRUE 
2697       END-IF 
2698     END-IF 
2699     FDM2. FIND DEPEND-MAST WITH DEP-SSN = HIS350A1.SSN 
2700       IF NO RECORD 
2701         HIS350A1.ON-DEPEND-FILE := FALSE 
2702         ESCAPE BOTTOM(FDM2.) 
2703       END-NOREC 
2704       HIS350A1.ON-DEPEND-FILE := TRUE 
2705       IF DEPEND-MAST.DEP-HLTH-STATUS = 'A1' 
2706           OR DEPEND-MAST.DEP-DNTL-STATUS = 'A1' 
2707           OR DEPEND-MAST.DEP-DL-STATUS = 'A1' 
2708           OR DEPEND-MAST.DEP-OLS-STATUS = 'A1' 
2709           OR DEPEND-MAST.DEP-LTC-STATUS = 'A1' 
2710         #E-MSG := 'Subscriber is active as a dependent' 
2711         #E-FLD := 'SSN' 
2712         PERFORM ADD-ERROR 
2713       END-IF 
2714     END-FIND /* (2699) fdm2. depend-mast 
2715     HIS350A1.SUBSCR-BEFORE := FALSE 
2716     ESCAPE ROUTINE 
2717   END-NOREC /* (2685) 
2718 **PERFORM CHECK-FOR-SUSPENSE-RECORD 
2719 * 
2720   IF SUBSCR-MAST.HLTH-STATUS = 'T1' 
2721       OR SUBSCR-MAST.DNTL-STATUS = 'T1' 
2722       OR SUBSCR-MAST.DL-STATUS = 'T1' 
2723       OR SUBSCR-MAST.OL-STATUS = 'T1' 
2724       OR SUBSCR-MAST.LTC-STATUS = 'T1' 
2725       OR SUBSCR-MAST.SLTD-STATUS = 'T1' 
2726     #E-MSG := 'You are trying to modify a subscriber that is on file as' 
2727       -' deceased.  Please contact EIP if incorrect.' 
2728     PERFORM ADD-ERROR 
2729     ESCAPE ROUTINE 
2730   END-IF 
2731 * 
2732 **#HOLD-LTC-STATUS := SUBSCR-MAST.LTC-STATUS  
2733 **#HOLD-LTC-SP-STATUS := SUBSCR-MAST.LTC-SP-STATUS  
2734 * 
2735   RESET HIS350A1.DATA-FROM-SUSPENSE 
2736   HIS350A1.SSN-NOT-ON-FILE := FALSE 
2737   HIS350A1.SUBSCR-BEFORE := TRUE 
2738 * 
2739   PERFORM CHECK-SUBSCR-MAST-STATUS /* determine if no coverage is active 
2740   IF #ALL-TERM 
2741     HIS350A1.ACTIVE-SUBSCR := FALSE 
2742   ELSE 
2743     HIS350A1.ACTIVE-SUBSCR := TRUE 
2744   END-IF 
2745   IF HIS350A1.TRXN-TYPE = 'EN' 
2746     IF HIS350A1.ACTIVE-SUBSCR 
2747       #E-MSG := 'Subscriber already enrolled' 
2748       #E-FLD := 'SSN' 
2749       PERFORM ADD-ERROR 
2750       ESCAPE ROUTINE 
2751     END-IF 
2752 * 
2753     IF NOT HIS350A1.DATA-FROM-SUSPENSE 
2754       PERFORM CHECK-TERMINATION-STATUS 
2755       IF *DATX - 180 > #LAST-EFF-DATE 
2756           AND #LAST-EFF-DATE NE 0 
2757         #6-MO-BRK := TRUE /* terminated for over 6 mos - no data return 
2758       END-IF 
2759     END-IF 
2760   END-IF /* (2745) 
2761   IF SUBSCR-MAST.OL-STATUS = 'A1' 
2762       AND SUBSCR-MAST.OL-END-DATE NE 0 
2763     #ON-OL-WAIVER := TRUE 
2764   END-IF 
2765   IF SUBSCR-MAST.SLTD-STATUS = 'A1' 
2766       AND SUBSCR-MAST.SLTD-WAIVER = 'Y' 
2767     #ON-SLTD-WAIVER := TRUE 
2768   END-IF 
2769   IF SUBSCR-MAST.LTC-STATUS = 'A1' 
2770       AND SUBSCR-MAST.LTC-PAYMENT-TYPE = 'W' 
2771     #ON-LTC-WAIVER := TRUE 
2772   END-IF 
2773   IF SUBSCR-MAST.LTC-SP-STATUS = 'A1' 
2774       AND SUBSCR-MAST.LTC-SP-PAYMENT-TYPE = 'W' 
2775     #ON-LTC-SP-WAIVER := TRUE 
2776   END-IF 
2777   FDM3. FIND DEPEND-MAST WITH DEP-SSN = HIS350A1.SSN 
2778     IF NO RECORD 
2779       HIS350A1.ON-DEPEND-FILE := FALSE 
2780       ESCAPE BOTTOM(FDM3.) 
2781     END-NOREC 
2782     HIS350A1.ON-DEPEND-FILE := TRUE 
2783     IF DEPEND-MAST.DEP-HLTH-STATUS = 'A1' 
2784         OR DEPEND-MAST.DEP-DNTL-STATUS = 'A1' 
2785         OR DEPEND-MAST.DEP-DL-STATUS = 'A1' 
2786         OR DEPEND-MAST.DEP-OLS-STATUS = 'A1' 
2787         OR DEPEND-MAST.DEP-LTC-STATUS = 'A1' 
2788       #E-MSG := 'Subscriber is active as a dependent' 
2789       #E-FLD := 'SSN' 
2790       PERFORM ADD-ERROR 
2791     END-IF 
2792   END-FIND /* (2777) fdm3. depend-mast 
2793 ** 
2794   IF SUBSCR-MAST.SUBSCRIBER-TYPE NE 'AR' 
2795   AND HIS350A1.ACTIVE-SUBSCR 
2796   and his350a1.change-reason ne 'AE'   /*mws20080825 
2797     perform CHECK-SUBSCR-MAST-STATUS /* gsd20070831b 
2798     if not #ALL-TERM /* gsd20070831b 
2799       #E-MSG := 'Subscriber is active under another subscriber type' 
2800       #E-FLD := 'SUBSCRIBER-TYPE' 
2801       PERFORM ADD-ERROR 
2802     end-if /* gsd20070831b 
2803   ELSE /* (2793) 
2804     IF NOT HIS350A1.ACTIVE-SUBSCR 
2805         and his350a1.trxn-type = 'EN' 
2806 /* gaining group has access to term sub regardless of group id 
2807       IGNORE 
2808     ELSE  /* AR sub and active 
2809       FEIS1. FIND EBS-INTERNET-SECURITY WITH USER-ID = HIS350A1.USER-ID 
2810         IF NO 
2811           ESCAPE BOTTOM(FEIS1.) 
2812         END-NOREC 
2813         IF EBS-INTERNET-SECURITY.ALL-SSN-ACCESS = 'Y' 
2814 /* user has access to all ssn's, no need to check emplr grps 
2815           ESCAPE BOTTOM 
2816         END-IF 
2817 * 
2818         DECIDE FOR FIRST CONDITION 
2819 /* normal user - if ssn employer group is one of the users 
2820 /*               accessible groups, it is ok to view 
2821           WHEN SUBSCR-MAST.EMPLOYER-GROUP-ID 
2822               = EBS-INTERNET-SECURITY.ACC-GROUPS(*) 
2823             IF HIS350A1.TRXN-TYPE = 'EN' 
2824               #E-MSG := 'Trying to enroll an already active subscriber' 
2825               #E-FLD := 'SSN' 
2826               PERFORM ADD-ERROR 
2827             END-IF 
2828           WHEN NONE 
2829             find (1) HIS-SUSPENSE-TRANS with ssn = his350a1.ssn 
2830               if no 
2831                 #E-MSG := 'Subscriber is enrolled under another group' 
2832                 #E-FLD := 'SSN' 
2833                 PERFORM ADD-ERROR 
2834                 escape bottom 
2835               end-norec 
2836               if not(HIS-SUSPENSE-TRANS.trxn-type = 'EN' 
2837                   and HIS-SUSPENSE-TRANS.employer-group-id = 
2838                   EBS-INTERNET-SECURITY.ACC-GROUPS(*)) 
2839                 #E-MSG := 'Subscriber is enrolled under another group' 
2840                 #E-FLD := 'SSN' 
2841                 PERFORM ADD-ERROR 
2842               end-if 
2843             end-find 
2844         END-DECIDE /* (2818) 
2845       END-FIND /* (2809) feis1. EBS-INTERNET-SECURITY 
2846     END-IF /* (2804) 
2847   END-IF /* (2793) 
2848 END-FIND /* (2684) FSM1. SUBSCR-MAST 
2849 END-SUBROUTINE /* (2682) CHECK-SUBSCRIBER-STATUS 
2850 ******************************************************** 
2851 DEFINE SUBROUTINE COMPUTE-EFF-DATE 
2852 ******************************************************** 
2853 MOVE EDITED #BILL-DATE(EM=YYYY) TO #BILL-YEAR 
2854 #BILL-YEAR-N := #BILL-YEAR-N - 1 
2855 COMPRESS #BILL-YEAR '1231' INTO #1231-DATE LEAVING NO 
2856 IF HIS350A1.TRXN-TYPE = 'EN' 
2857 /* compute effective date based on hire date 
2858   IF HIS350A1.DATE-HIRED-N = 0 
2859     IF HIS350A1.MODULE(*) = 'DEMOGRAPHIC' 
2860       #E-MSG := 'Date of Hire is required' 
2861     ELSE 
2862       #E-MSG := 'Date of Hire is a required field on Enrollee Data' 
2863         -' screen.  Calculations cannot be completed without it.' 
2864     END-IF 
2865     #E-FLD := 'DATE-HIRED-N' 
2866     PERFORM ADD-ERROR 
2867     ESCAPE ROUTINE immediate 
2868   END-IF /* (2858) 
2869   IF HIS350A1.EFFECTIVE-DATE-N = 0 
2870       AND HIS350A1.DATE-HIRED-N > 0 
2871     MOVE HIS350A1.DATE-HIRED-N TO #DATE-CHECK 
2872     IF #DD > 1 
2873       IF #MM = 12 
2874         ADD 1 TO #YYYY 
2875         MOVE 1 TO #MM #DD 
2876       ELSE 
2877         ADD 1 TO #MM 
2878         MOVE 1 TO #DD 
2879       END-IF 
2880     END-IF 
2881     HIS350A1.EFFECTIVE-DATE-N := #DATE-CHECK 
2882     #EFF-N := HIS350A1.EFFECTIVE-DATE-N 
2883   ELSE 
2884     #VALIDATE-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
2885     IF #VALIDATE-EFF-DD NE 1 
2886       #E-MSG := 'Coverage Effective Date must be the first day of the' 
2887         -' month' 
2888       PERFORM ADD-ERROR 
2889     END-IF 
2890   END-IF /* (2869) 
2891 ELSE /* CHANGE (2856) 
2892   DECIDE ON FIRST VALUE OF HIS350A1.CHANGE-REASON 
2893     VALUE 'DV','SE','DC','GO','CO','SO','LT','SL','OL','OP','DL' 
2894       IF HIS350A1.CHANGE-REASON-DATE-N > 0 
2895         MOVE HIS350A1.CHANGE-REASON-DATE-N TO #DATE-CHECK 
2896         IF #MM = 12 
2897           ADD 1 TO #YYYY 
2898           MOVE 1 TO #MM #DD 
2899         ELSE 
2900           ADD 1 TO #MM 
2901           MOVE 1 TO #DD 
2902         END-IF 
2903         HIS350A1.EFFECTIVE-DATE-N := #DATE-CHECK 
2904       END-IF 
2905     VALUE 'CE' /* ,'RB' 
2906       IF HIS350A1.CHANGE-REASON-EXT = 'FT' OR = 'AN' 
2907         IF HIS350A1.CHANGE-REASON-DATE-N > 0 
2908           MOVE HIS350A1.CHANGE-REASON-DATE-N TO #DATE-CHECK 
2909           IF #MM = 12 
2910             ADD 1 TO #YYYY 
2911             MOVE 1 TO #MM #DD 
2912           ELSE 
2913             ADD 1 TO #MM 
2914             MOVE 1 TO #DD 
2915           END-IF 
2916         END-IF 
2917         HIS350A1.EFFECTIVE-DATE-N := #DATE-CHECK 
2918       END-IF 
2919     VALUE 'AR','BE' 
2920       HIS350A1.EFFECTIVE-DATE-N := *DATN 
2921     VALUE 'LO','GO' 
2922       HIS350A1.EFFECTIVE-DATE-N := HIS350A1.CHANGE-REASON-DATE-N 
2923     VALUE 'SD' 
2924       MOVE HIS350A1.CHANGE-REASON-DATE-N TO #DATE-CHECK 
2925       move edited #date-check-a to #date-check-d(em=yyyymmdd) /* gsd 
2926       add 1 to #date-check-d 
2927       move edited #date-check-d(em=yyyymmdd) to #date-check-a 
2928       HIS350A1.CHANGE-REASON-DATE-N := #DATE-CHECK 
2929     VALUE 'CC','NB' 
2930       HIS350A1.EFFECTIVE-DATE-N := HIS350A1.CHANGE-REASON-DATE-N 
2931     VALUE 'OE', 'AE' /* set date to Jan 1 of the following year 
2932       #CURR-DATE := *DATN 
2933       ADD 1 TO #CURR-YYYY 
2934       #CURR-MMDD := '0101' 
2935       HIS350A1.EFFECTIVE-DATE-N := #CURR-DATE 
2936     NONE 
2937       IGNORE /* do not change effective date 
2938   END-DECIDE /* (2892) 
2939   IF HIS350A1.EFFECTIVE-DATE-N = 0 
2940     HIS350A1.EFFECTIVE-DATE-N := HIS350A1.CHANGE-REASON-DATE-N 
2941   END-IF 
2942 END-IF /* (2856) 
2943 IF HIS350A1.EFFECTIVE-DATE-N > 0 
2944     AND HIS350A1.EFFECTIVE-DATE-N = MASK (YYYYMMDD) 
2945     AND HIS350A1.EFFECTIVE-DATE-N = 15820000 THRU 26990000 
2946   IF HIS350A1.EFFECTIVE-DATE-N < HIS350A1.DATE-HIRED-N 
2947     #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
2948     MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
2949     MOVE EDITED #WORK-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
2950     #DATE-WORK := HIS350A1.DATE-HIRED-N 
2951     MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
2952     MOVE EDITED #WORK-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE2 
2953     COMPRESS 'Effective date (' #DISPLAY-DATE1 
2954       ') is earlier than hire date (' #DISPLAY-DATE2 ')' INTO #E-MSG 
2955     PERFORM ADD-ERROR 
2956   END-IF /* (2946) 
2957   MOVE HIS350A1.EFFECTIVE-DATE-N TO #DATE-WORK 
2958   MOVE EDITED #DATE-WORK TO #DATE-D (EM=YYYYMMDD) 
2959   IF #DATE-D > #BILL-DATE 
2960     HIS350A1.ADVANCE-KEYED := TRUE 
2961   ELSE 
2962     HIS350A1.ADVANCE-KEYED := FALSE 
2963     ADD 90 TO #DATE-D 
2964     IF #DATE-D < #BILL-DATE 
2965       MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
2966       MOVE EDITED #WORK-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
2967       MOVE EDITED #BILL-DATE(EM=MM-DD-YYYY) TO #DISPLAY-DATE2 
2968       COMPRESS 'Effective Date (' #DISPLAY-DATE1 
2969         ') cannot be 3 months prior to current Bill Date (' 
2970         #DISPLAY-DATE2 ')' TO #E-MSG 
2971       PERFORM ADD-ERROR 
2972       ESCAPE ROUTINE 
2973     END-IF /* (2963) 
2974   END-IF /* (2959) 
2975 END-IF /* (2943) 
2976 * 
2977 IF NOT #NOT-ON-FILE 
2978   PERFORM CHECK-TERMINATION-STATUS 
2979   IF HIS350A1.MODULE(*) = 'DEMOGRAPHIC' 
2980     IF SUBSCR-MAST.PART-TIME-SUBSCR = '1' OR = '2' OR = '3' 
2981         AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
2982       COMPRESS 'A1' SUBSCR-MAST.EMPLOYER-GROUP-ID INTO #TABLE-KEY 
2983         LEAVING NO 
2984       FTM3. FIND TABLE-MAST WITH SP-TBL-GROUP-KEY = #TABLE-KEY 
2985       END-FIND /* (2984) ftm3. 
2986     END-IF /* (2980) 
2987     IF TABLE-MAST.TBL-PT-TEACHER NE 'Y' 
2988       PERFORM CHECK-FOR-TRANSFERS 
2989     ELSE 
2990       HIS350A1.SUBSCR-TRANSFER := ' ' 
2991     END-IF 
2992   END-IF /* (0784) 
2993 END-IF /* (0780) 
2994 * 
2995 if his350a1.trxn-type = 'EN' 
2996     and his350a1.subscr-transfer = ' ' 
2997     and not #edit-for-update 
2998   for #i 1 15 
2999     if his350a1.dep-relation(#i) = mask (.'1'..) 
3000       reset his350a1.dep-hlth-status(#i) 
3001         his350a1.dep-hlth-eff-date-n(#i) 
3002         his350a1.dep-hlth-end-date-n(#i) 
3003         his350a1.dep-dntl-status(#i) 
3004         his350a1.dep-dntl-eff-date-n(#i) 
3005         his350a1.dep-dntl-end-date-n(#i) 
3006         his350a1.dep-dl-status(#i) 
3007         his350a1.dep-dl-eff-date-n(#i) 
3008         his350a1.dep-dl-end-date-n(#i) 
3009         his350a1.dep-ols-status(#i) 
3010         his350a1.dep-ols-eff-date-n(#i) 
3011         his350a1.dep-ols-end-date-n(#i) 
3012     end-if 
3013   end-for 
3014 end-if 
3015 END-SUBROUTINE /* (2851) COMPUTE-EFF-DATE 
3016 ****************************************************** 
3017 DEFINE SUBROUTINE CHECK-OTHER-COVERAGE 
3018 ****************************************************** 
3019 RESET #ON-FILE-INDICATORS 
3020 IF HIS350A1.DEP-STATE-EMP/RET-IND(#I) = ' ' 
3021   HIS350A1.DEP-STATE-EMP/RET-IND(#I) := 'N' 
3022   RESET HIS350A1.DEP-EMPLOYER-GROUP-ID(#I) #DEP-SUBSCR-TYPE 
3023 END-IF 
3024 MOVE TRUE TO #NOT-ACTIVELY-EMPLOYED 
3025 IF HIS350A1.DEP-SSN(#I) NE ' ' 
3026   FASM1. FIND ACT-SUBSCR-MAST WITH SSN = HIS350A1.DEP-SSN(#I) 
3027     IF NO RECORDS FOUND 
3028       IF HIS350A1.DEP-STATE-EMP/RET-IND(#I) <> 'N' 
3029         COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
3030           '| is not on file as a State ' 
3031           'Employee. Verify SSN and contact EIP if incorrect.' 
3032           INTO #E-MSG 
3033         PERFORM ADD-ERROR 
3034         ESCAPE BOTTOM (FASM1.) IMMEDIATE 
3035       END-IF 
3036     END-NOREC 
3037     MOVE ACT-SUBSCR-MAST.SUBSCRIBER-TYPE TO #DEP-SUBSCR-TYPE 
3038     IF (ACT-SUBSCR-MAST.HLTH-STATUS = 'T2' OR = '  ') 
3039         AND (ACT-SUBSCR-MAST.DNTL-STATUS = 'T2' OR = '  ') 
3040         AND (ACT-SUBSCR-MAST.DL-STATUS   = 'T2' OR = '  ') 
3041         AND (ACT-SUBSCR-MAST.SL-STATUS   = 'T2' OR = '  ') 
3042         AND (ACT-SUBSCR-MAST.LTD-STATUS  = 'T2' OR = '  ') 
3043         AND NOT (ACT-SUBSCR-MAST.HLTH-STATUS = '  ' 
3044         AND ACT-SUBSCR-MAST.DNTL-STATUS = '  ' 
3045         AND ACT-SUBSCR-MAST.DL-STATUS = '  ' 
3046         AND ACT-SUBSCR-MAST.SL-STATUS = '  ' 
3047         AND ACT-SUBSCR-MAST.LTD-STATUS = '  ') 
3048       MOVE TRUE TO #DEP-ON-LTD 
3049     END-IF 
3050 * 
3051     IF ACT-SUBSCR-MAST.HLTH-STATUS = 'A1' 
3052         OR ACT-SUBSCR-MAST.DNTL-STATUS = 'A1' 
3053         OR ACT-SUBSCR-MAST.DL-STATUS = 'A1' 
3054         OR ACT-SUBSCR-MAST.OL-STATUS = 'A1' 
3055         OR ACT-SUBSCR-MAST.OLS-STATUS = 'A1' 
3056       IF ACT-SUBSCR-MAST.SUBSCRIBER-TYPE = 'AR  ' 
3057         MOVE FALSE TO #NOT-ACTIVELY-EMPLOYED 
3058       END-IF 
3059     END-IF 
3060 * 
3061     MOVE FALSE TO #ON-OL-WAIVER 
3062     IF (ACT-SUBSCR-MAST.HLTH-STATUS = MASK('T'.) OR = '  ') 
3063         AND (ACT-SUBSCR-MAST.DNTL-STATUS = MASK('T'.) OR = '  ') 
3064         AND (ACT-SUBSCR-MAST.DL-STATUS   = MASK('T'.) OR = '  ') 
3065         AND NOT (ACT-SUBSCR-MAST.HLTH-STATUS = '   ' 
3066         AND ACT-SUBSCR-MAST.DNTL-STATUS = '  ' 
3067         AND ACT-SUBSCR-MAST.DL-STATUS   = '  ' 
3068         AND ACT-SUBSCR-MAST.OL-STATUS = 'A1' 
3069         AND ACT-SUBSCR-MAST.OL-END-DATE NE 0)  
3070       MOVE TRUE TO #ON-OL-WAIVER 
3071     END-IF 
3072     IF (ACT-SUBSCR-MAST.HLTH-STATUS = MASK('T'.) OR = '  ') 
3073         AND (ACT-SUBSCR-MAST.DNTL-STATUS = MASK('T'.) OR = '  ') 
3074         AND (ACT-SUBSCR-MAST.DL-STATUS = MASK('T'.) OR = '  ') 
3075         AND (ACT-SUBSCR-MAST.OL-STATUS = MASK('T'.) OR = '  ') 
3076         AND (ACT-SUBSCR-MAST.OLS-STATUS = MASK('T'.) OR = '  ') 
3077       IGNORE 
3078     ELSE /* (3072) 
3079       IF HIS350A1.DEP-SSN(#I) NE ' ' 
3080         IF ACT-SUBSCR-MAST.SUBSCRIBER-TYPE = 'AR  ' 
3081           HIS350A1.DEP-STATE-EMP/RET-IND(#I) := 'A' 
3082         ELSE 
3083           HIS350A1.DEP-STATE-EMP/RET-IND(#I) := 'R' 
3084         END-IF 
3085         HIS350A1.DEP-EMPLOYER-GROUP-ID(#I) := 
3086           ACT-SUBSCR-MAST.EMPLOYER-GROUP-ID 
3087       ELSE 
3088         IF HIS350A1.DEP-STATE-EMP/RET-IND(#I) <> 'N' 
3089           COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
3090             '| is not on file as a State Employee' INTO #E-MSG 
3091           PERFORM ADD-ERROR 
3092         END-IF 
3093       END-IF 
3094 * 
3095       MOVE FALSE TO #ACT-ON-SUBSCR-HLTH 
3096       HIS350A1.ACTIVE-BUT-ALLOWED-COVERAGE := FALSE 
3097       IF ACT-SUBSCR-MAST.HLTH-STATUS = 'A1' 
3098         MOVE TRUE TO #ACT-ON-SUBSCR-HLTH 
3099       ELSE 
3100         IF (ACT-SUBSCR-MAST.HLTH-STATUS 
3101             = 'TN' OR = 'TL' OR = 'TM' OR = 'TO') 
3102           MOVE TRUE TO HIS350A1.ACTIVE-BUT-ALLOWED-COVERAGE 
3103         END-IF 
3104       END-IF 
3105       IF ACT-SUBSCR-MAST.DNTL-STATUS = 'A1' 
3106         MOVE TRUE TO #ACT-ON-SUBSCR-DNTL 
3107       ELSE 
3108         IF ACT-SUBSCR-MAST.DNTL-STATUS 
3109             = 'TN' OR = 'TL' OR = 'TM' OR = 'TO' 
3110           MOVE TRUE TO HIS350A1.ACTIVE-BUT-ALLOWED-COVERAGE 
3111         END-IF 
3112       END-IF 
3113       IF ACT-SUBSCR-MAST.DL-STATUS = 'A1' 
3114         MOVE TRUE TO #ACT-ON-SUBSCR-DL 
3115       ELSE 
3116         IF ACT-SUBSCR-MAST.DL-STATUS 
3117             = 'TN' OR = 'TL' OR = 'TM' OR = 'TO' 
3118           MOVE TRUE TO HIS350A1.ACTIVE-BUT-ALLOWED-COVERAGE 
3119         END-IF 
3120       END-IF 
3121       IF #DEP-ON-LTD 
3122         MOVE TRUE TO HIS350A1.ACTIVE-BUT-ALLOWED-COVERAGE 
3123       END-IF 
3124     END-IF /* (3072) 
3125   END-FIND /* (3007) FASM1. ACT-SUBSCR-MAST 
3126 END-IF /* (3006) 
3127 * 
3128 IF NOT #ON-OL-WAIVER 
3129   IF #DEP-SUBSCR-TYPE = 'AR  ' 
3130     CALLNAT 'KTB801NN' /* VERIFY GROUP ID AND RETURN PERTINENT INFO 
3131       #PROCESS-ERROR ACT-SUBSCR-MAST.EMPLOYER-GROUP-ID #GRP-NAME 
3132       #GRP-OTHER-DATA 
3133     IF NOT #NOT-ACTIVELY-EMPLOYED 
3134         AND NOT HIS350A1.ACTIVE-BUT-ALLOWED-COVERAGE 
3135       IF (#GRP-COV-IND-H = 'H' 
3136           AND HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1') 
3137           OR (#GRP-COV-IND-D = 'D' 
3138           AND HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1') 
3139           OR HIS350A1.DEP-DL-PENDING-ST(#I) = 'A1' 
3140         COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
3141           '| is an active subscriber' INTO #E-MSG 
3142         #E-FLD := 'DEP-DNTL-STATUS' 
3143         PERFORM ADD-ERROR 
3144       END-IF 
3145     END-IF 
3146   ELSE /* (3129) 
3147     IF (#ACT-ON-SUBSCR-HLTH 
3148         AND HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1') 
3149         OR (#ACT-ON-SUBSCR-DNTL 
3150         AND (HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1' 
3151         OR (HIS350A1.DEP-DNTL-PENDING-ST(#I) = ' ' 
3152         AND HIS350A1.DEP-DNTL-STATUS(#I) = 'A1'))) 
3153         OR (#ACT-ON-SUBSCR-DL 
3154         AND (HIS350A1.DEP-DL-PENDING-ST(#I) = 'A1' 
3155         OR (HIS350A1.DEP-DL-PENDING-ST(#I) = ' ' 
3156         AND HIS350A1.DEP-DL-STATUS(#I) = 'A1'))) 
3157 **      OR (#ACT-ON-SUBSCR-LTC  
3158 **      AND (HIS350A1.DEP-LTC-PENDING-ST(#I) = 'A1'  
3159 **      OR (HIS350A1.DEP-LTC-PENDING-ST(#I) = ' '  
3160 **      AND HIS350A1.DEP-LTC-STATUS(#I) = 'A1')))  
3161         OR (#ACT-ON-SUBSCR-OLS 
3162         AND (HIS350A1.DEP-OLS-PENDING-ST(#I) = 'A1' 
3163         OR (HIS350A1.DEP-OLS-PENDING-ST(#I) = ' ' 
3164         AND HIS350A1.DEP-OLS-STATUS(#I) = 'A1'))) 
3165       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
3166         '| is a covered subscriber' INTO #E-MSG 
3167       #E-FLD := 'DEP-DNTL-STATUS' 
3168       PERFORM ADD-ERROR 
3169     END-IF /* (3147) 
3170     IF NOT #NOT-ACTIVELY-EMPLOYED 
3171         AND (HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
3172         OR HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1' 
3173         OR HIS350A1.DEP-DL-PENDING-ST(#I) = 'A1')  
3174       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
3175         '| is an active subscriber' INTO #E-MSG 
3176       #E-FLD := 'DEP-DNTL-STATUS' 
3177       PERFORM ADD-ERROR 
3178     END-IF 
3179   END-IF /* (3129) 
3180 * 
3181   IF HIS350A1.DEP-RELATION(#I) = MASK(.'1'.) 
3182       AND (HIS350A1.DEP-hlth-PENDING-ST(#I) = 'A1' /* gsd20070830a start 
3183       OR (HIS350A1.DEP-hlth-PENDING-ST(#I) = ' ' 
3184       AND HIS350A1.DEP-hlth-STATUS(#I) = 'A1') 
3185       or HIS350A1.DEP-dntl-PENDING-ST(#I) = 'A1' 
3186       OR (HIS350A1.DEP-dntl-PENDING-ST(#I) = ' ' 
3187       AND HIS350A1.DEP-dntl-STATUS(#I) = 'A1') 
3188       or HIS350A1.DEP-DL-PENDING-ST(#I) = 'A1' 
3189 **    AND (HIS350A1.DEP-DL-PENDING-ST(#I) = 'A1'   /* gsd20070830a end 
3190       OR (HIS350A1.DEP-DL-PENDING-ST(#I) = ' ' 
3191       AND HIS350A1.DEP-DL-STATUS(#I) = 'A1') 
3192       OR HIS350A1.DEP-OLS-PENDING-ST(#I) = 'A1' 
3193       OR (HIS350A1.DEP-OLS-PENDING-ST(#I) = ' ' 
3194       AND HIS350A1.DEP-OLS-STATUS(#I) = 'A1'))  
3195 **    OR HIS350A1.DEP-LTC-PENDING-ST(#I) = 'A1'  
3196 **    OR (HIS350A1.DEP-LTC-PENDING-ST(#I) = ' '  
3197 **    AND HIS350A1.DEP-LTC-STATUS(#I) = 'A1'))  
3198       AND NOT #NOT-ACTIVELY-EMPLOYED 
3199       AND NOT HIS350A1.ACTIVE-BUT-ALLOWED-COVERAGE 
3200     MOVE 'Spouse is a state employee so cannot be covered as dependent' 
3201       TO #E-MSG 
3202     #E-FLD := 'DEP-DNTL-STATUS' 
3203     PERFORM ADD-ERROR 
3204   END-IF /* (3181) 
3205 /* Remove effective dates if left from inadvertent coverage activation 
3206   IF HIS350A1.DEP-HLTH-PENDING-ST(#I) = ' ' 
3207       AND HIS350A1.DEP-HLTH-STATUS(#I) = ' ' 
3208     HIS350A1.DEP-HLTH-EFF-DATE-N(#I) := 0 
3209     HIS350A1.DEP-HLTH-end-DATE-N(#I) := 0 
3210   END-IF 
3211   IF HIS350A1.DEP-DNTL-PENDING-ST(#I) = ' ' 
3212       AND HIS350A1.DEP-DNTL-STATUS(#I) = ' ' 
3213     HIS350A1.DEP-DNTL-EFF-DATE-N(#I) := 0 
3214     HIS350A1.DEP-DNTL-end-DATE-N(#I) := 0 
3215   END-IF 
3216   IF HIS350A1.DEP-DL-PENDING-ST(#I) = ' ' 
3217       AND HIS350A1.DEP-DL-STATUS(#I) = ' ' 
3218     HIS350A1.DEP-DL-EFF-DATE-N(#I) := 0 
3219     HIS350A1.DEP-DL-end-DATE-N(#I) := 0 
3220   END-IF 
3221   IF HIS350A1.DEP-OLS-PENDING-ST(#I) = ' ' 
3222       AND HIS350A1.DEP-OLS-STATUS(#I) = ' ' 
3223     HIS350A1.DEP-OLS-EFF-DATE-N(#I) := 0 
3224     HIS350A1.DEP-OLS-end-DATE-N(#I) := 0 
3225   END-IF 
3226 END-IF /* (3128) 
3227 /* DEPENDENT MASTER CHECKS 
3228 IF HIS350A1.DEP-DATE-OF-BIRTH-N(#I) = MASK(YYYYMMDD) 
3229     AND HIS350A1.DEP-DATE-OF-BIRTH-N(#I) = 15820000 THRU 26990000 
3230   #DATE-WORK := HIS350A1.DEP-DATE-OF-BIRTH-N(#I) 
3231   MOVE EDITED #DATE-WORK TO #DEP-DOB-D(EM=YYYYMMDD) 
3232 **#DT := #DEP-DOB-D + 730                       /* gsd20070925a start 
3233   #DT := #DEP-DOB-D + 365                       /* gsd20070925a end 
3234   #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
3235   MOVE EDITED #DATE-WORK TO #EFF-D(EM=YYYYMMDD) 
3236   IF #DT LE #EFF-D 
3237       AND HIS350A1.DEP-SSN(#I) = ' ' 
3238     COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
3239       '| SSN is required' INTO #E-MSG 
3240     PERFORM ADD-ERROR 
3241     ESCAPE ROUTINE 
3242   END-IF 
3243 END-IF 
3244 * 
3245 IF HIS350A1.DEP-SSN(#I) NE ' ' 
3246   FADM3. FIND ACT-DEPEND-MAST WITH DEP-SSN = HIS350A1.DEP-SSN(#I) 
3247     IF NO 
3248       ESCAPE BOTTOM(FADM3.) 
3249     END-NOREC 
3250     IF ACT-DEPEND-MAST.DEP-SUBSCRIBER-SSN = HIS350A1.SSN 
3251       ESCAPE TOP 
3252     END-IF 
3253 **  IF (ACT-DEPEND-MAST.DEP-HLTH-STATUS = 'A1'     /* gsd20070831a start 
3254 **      AND HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1') 
3255 **      OR (ACT-DEPEND-MAST.DEP-DNTL-STATUS = 'A1' 
3256 **      AND HIS350A1.DEP-DNTL-PENDING-ST (#I) = 'A1') 
3257 **      OR (ACT-DEPEND-MAST.DEP-DL-STATUS = 'A1' 
3258 **      AND HIS350A1.DEP-DL-PENDING-ST (#I) = 'A1') 
3259 **      OR (ACT-DEPEND-MAST.DEP-OLS-STATUS = 'A1' 
3260 **      AND HIS350A1.DEP-OLS-PENDING-ST (#I) = 'A1') 
3261     IF (ACT-DEPEND-MAST.DEP-HLTH-STATUS = 'A1' 
3262         OR ACT-DEPEND-MAST.DEP-DNTL-STATUS = 'A1' 
3263         OR ACT-DEPEND-MAST.DEP-DL-STATUS = 'A1' 
3264         OR ACT-DEPEND-MAST.DEP-OLS-STATUS = 'A1') 
3265         AND (HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
3266         or HIS350A1.DEP-DNTL-PENDING-ST (#I) = 'A1' 
3267         or HIS350A1.DEP-DL-PENDING-ST (#I) = 'A1' 
3268         or HIS350A1.DEP-OLS-PENDING-ST (#I) = 'A1') /* gsd20070831a end 
3269       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
3270         '| is already a covered dependent for another subscriber' 
3271         INTO #E-MSG 
3272       #E-FLD := 'DEP-DNTL-STATUS' 
3273       PERFORM ADD-ERROR 
3274     END-IF /* (3253) 
3275   END-FIND /* (3247) FADM3. ACT-DEPEND-MAST 
3276 END-IF /* (3246) 
3277 END-SUBROUTINE /* (2997) CHECK-OTHER-COVERAGE 
3278 ************************************************************************ 
3279 DEFINE SUBROUTINE HEALTH-VALIDATIONS 
3280 ************************************************************************ 
3281 #PLAN-CAT := SUBSCR-MAST.HLTH-PLAN-CATEGORY 
3282 #NEW-PLAN-CAT := HIS350A1.HLTH-PLAN-CATEGORY 
3283 IF #PLAN NE #NEW-PLAN 
3284     OR #CAT NE #NEW-CAT 
3285     OR HIS350A1.HLTH-STATUS NE SUBSCR-MAST.HLTH-STATUS 
3286   #LAST-EFF-DATE := SUBSCR-MAST.HLTH-EFF-DATE 
3287   #WORK-N := HIS350A1.EFFECTIVE-DATE-N 
3288   MOVE EDITED #WORK-A TO #EFF-D(EM=YYYYMMDD) 
3289   IF #LAST-EFF-DATE GT #EFF-D 
3290     MOVE EDITED #LAST-EFF-DATE(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
3291     MOVE EDITED #EFF-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE2 
3292     COMPRESS 'The Health Effective Date (' #DISPLAY-DATE2 
3293       ') may not be prior to the Coverage Effective Date on file (' 
3294       #DISPLAY-DATE1 ').  Send to EIP for processing.' 
3295       INTO HIS350A1.CRITICAL-ERROR 
3296   END-IF 
3297 END-IF 
3298 /* Cannot activate coverage prior to when it was last terminated 
3299 IF HIS350A1.HLTH-STATUS = 'A1' 
3300     AND SUBSCR-MAST.HLTH-STATUS = MASK('T'.) 
3301   #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
3302   MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
3303   IF #WORK-D < SUBSCR-MAST.HLTH-EFF-DATE 
3304     MOVE EDITED SUBSCR-MAST.HLTH-EFF-DATE(EM=MM-DD-YYYY) 
3305       TO #DISPLAY-DATE1 
3306     COMPRESS 'Cannot activate Health Coverage prior to' 
3307       #DISPLAY-DATE1 '- Send to EIP for processing.' INTO #E-MSG 
3308     PERFORM ADD-ERROR 
3309     ESCAPE ROUTINE 
3310   END-IF 
3311 END-IF 
3312 /* If status/carrier or plan has changed, update effective date 
3313 FOR #I 1 15 
3314   IF #PLAN NE #NEW-PLAN 
3315       AND (HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
3316       OR (HIS350A1.DEP-HLTH-STATUS(#I) = 'A1' 
3317       AND HIS350A1.DEP-HLTH-PENDING-ST(#I) = ' ')) 
3318       AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
3319     HIS350A1.DEP-HLTH-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
3320     IF HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
3321       HIS350A1.SL-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
3322       HIS350A1.LTD-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
3323     END-IF 
3324   END-IF 
3325   IF #CAT NE #NEW-CAT 
3326       AND HIS350A1.DEP-HLTH-PENDING-ST(#I) NE ' ' 
3327       AND HIS350A1.DEP-HLTH-PENDING-ST(#I) NE 
3328       HIS350A1.DEP-HLTH-STATUS(#I) 
3329     HIS350A1.DEP-HLTH-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
3330   END-IF 
3331 END-FOR 
3332 IF (SUBSCR-MAST.HLTH-STATUS NE HIS350A1.HLTH-STATUS 
3333     OR SUBSCR-MAST.HLTH-PLAN-CATEGORY NE HIS350A1.HLTH-PLAN-CATEGORY) 
3334     OR (HIS350A1.TRXN-TYPE = 'EN' 
3335     AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
3336   HIS350A1.HLTH-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
3337 ELSE /* carry forward previous effective date 
3338   IF SUBSCR-MAST.HLTH-EFF-DATE > 0 
3339     MOVE EDITED SUBSCR-MAST.HLTH-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
3340     IF SUBSCR-MAST.HLTH-STATUS = HIS350A1.HLTH-STATUS 
3341         AND HIS350A1.HLTH-EFF-DATE-N NE #WORK-N 
3342       HIS350A1.HLTH-EFF-DATE-N := #WORK-N 
3343       MOVE EDITED SUBSCR-MAST.sl-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
3344       HIS350A1.sl-EFF-DATE-N := #WORK-N 
3345       MOVE EDITED SUBSCR-MAST.ltd-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
3346       HIS350A1.ltd-EFF-DATE-N := #WORK-N 
3347     END-IF 
3348   END-IF 
3349 END-IF 
3350 /* Require coverage if selected for any dependent on Dependent page 
3351 IF HIS350A1.HLTH-STATUS = MASK('T'.) 
3352   IF #FOUND-SPOUSE-H 
3353       OR #FOUND-DEP-H 
3354     #E-MSG := 'Health Coverage must be selected because it was ' 
3355       -'activated on the Dependent page' 
3356     #E-FLD := 'HLTH-STATUS' 
3357     PERFORM ADD-ERROR 
3358   END-IF 
3359 END-IF 
3360 * 
3361 IF NOT(HIS350A1.HLTH-STATUS = MASK('T'.) OR = ' ') 
3362   MOVE HIS350A1.HLTH-PLAN-CATEGORY TO #PLAN-CAT 
3363   if his350a1.subscriber-type = 'AR'   /* mws20080825 
3364      MOVE '00' TO HIS350A1.RATE-SCHEME 
3365   else 
3366      if #cat > '1' 
3367          for #x = 1 to 15 
3368            if his350a1.dep-relation(#x) = ' ' 
3369               escape bottom 
3370            end-if 
3371            if (#cat = '2' or = '4') 
3372            and his350a1.dep-relation(#x) = mask(.'1'.) 
3373                #sp-med-num := his350a1.dep-medicare-number(#x) 
3374            end-if 
3375            if (#cat = '3' or = '4') 
3376            and his350a1.dep-relation(#x) = mask(.'2'.) 
3377            and his350a1.dep-medicare-number(#x) >  ' ' 
3378                #dep-med-num := his350a1.dep-medicare-number(#x) 
3379            end-if 
3380          end-for 
3381       end-if 
3382       callnat 'hri800nn' #program 
3383                          his350a1.subscriber-type 
3384                           his350a1.medicare-number 
3385                           #sp-med-num #dep-med-num 
3386                           #cat 
3387                           his350a1.rate-scheme 
3388   end-if                               /* mws20080825 
3389 * 
3390   HTB808A1.PLAN-NAME := #PLAN 
3391   PERFORM CHECK-PLANS /* Read and return an array of all plans 
3392   IF HIS350A1.HLTH-PLAN-CATEGORY = MASK('BC'.) AND 
3393      HIS350A1.SUBSCRIBER-TYPE = 'AR' 
3394     #E-MSG := 'Active subscribers can not have Medicare Supplement' 
3395     #E-FLD := 'HLTH-PLAN-CATEGORY' 
3396     PERFORM ADD-ERROR 
3397     #E-MSG := his350a1.subscriber-type  
3398     #E-FLD := 'HLTH-PLAN-CATEGORY'  
3399     PERFORM ADD-ERROR  
3400   END-IF 
3401   IF HTB808A1.PLAN-BEG-DATE = 0 
3402       AND HIS350A1.HLTH-PLAN-CATEGORY NE ' ' 
3403     #E-MSG := 'The selected Health plan not found' 
3404     #E-FLD := 'HLTH-PLAN-CATEGORY' 
3405     PERFORM ADD-ERROR 
3406   ELSE /* (3392) 
3407     IF HIS350A1.EFFECTIVE-DATE-N < HTB808A1.PLAN-BEG-DATE 
3408       #E-MSG := 'The Selected Health plan is not offered ' 
3409         - 'before the effective date' 
3410       #E-FLD := 'HLTH-PLAN-CATEGORY' 
3411       PERFORM ADD-ERROR 
3412     ELSE 
3413       IF HTB808A1.PLAN-END-DATE = 0 
3414 **        OR HTB808A1.PLAN-END-DATE < HIS350A1.EFFECTIVE-DATE-N  
3415           OR HIS350A1.EFFECTIVE-DATE-N < HTB808A1.PLAN-END-DATE  
3416         IGNORE 
3417       ELSE 
3418         #E-MSG := 'The selected Health plan is no longer offered.'  
3419         #E-FLD := 'HLTH-PLAN-CATEGORY'  
3420         PERFORM ADD-ERROR  
3421       END-IF 
3422     END-IF 
3423   END-IF /* (3392) 
3424   IF (#CAT = '1' AND (#FOUND-SPOUSE-H OR #FOUND-DEP-H)) 
3425       OR (#CAT = '2' AND (#FOUND-DEP-H OR NOT #FOUND-SPOUSE-H)) 
3426       OR (#CAT = '3' AND (NOT #FOUND-DEP-H OR #FOUND-SPOUSE-H)) 
3427       OR (#CAT = '4' AND (NOT #FOUND-DEP-H OR NOT #FOUND-SPOUSE-H)) 
3428     #E-MSG := 'Select a Health Plan Category that corresponds with' 
3429       -' your selections on the Dependents screen.' 
3430     #E-FLD := 'HLTH-PLAN-CATEGORY' 
3431     PERFORM ADD-ERROR 
3432   END-IF 
3433   IF HIS350A1.MEDICARE-NUMBER NE ' ' 
3434       AND #AGE GE 65 
3435       AND HIS350A1.HLTH-PLAN-CATEGORY = MASK ('HX'.) OR = MASK('HT'.) 
3436       OR = MASK('BD'.) 
3437     #E-MSG := 'Medicare eligible cannot have selected health plan' 
3438     #E-FLD := 'HLTH-PLAN-CATEGORY' 
3439     PERFORM ADD-ERROR 
3440   END-IF 
3441   IF #SPOUSE-MEDICARE NE ' ' 
3442       AND #SP-AGE GE 65 
3443       AND HIS350A1.HLTH-PLAN-CATEGORY = MASK ('HX'.) OR = MASK('HT'.) 
3444       OR = MASK('BD'.) 
3445     #E-MSG := 
3446       'Spouse medicare eligible cannot have selected health plan' 
3447     #E-FLD := 'HLTH-PLAN-CATEGORY' 
3448     PERFORM ADD-ERROR 
3449   END-IF 
3450   IF HIS350A1.SUBSCRIBER-TYPE NE 'AR'  
3451       AND HIS350A1.HLTH-PLAN-CATEGORY = MASK ('BC'.)  
3452     IF HIS350A1.HLTH-PLAN-CATEGORY = MASK(..'1') AND  
3453      HIS350A1.MEDICARE-NUMBER = ' '  
3454     #E-MSG :=  
3455       'You must have Medicare to be eligible for this Plan'  
3456     #E-FLD := 'HLTH-PLAN-CATEGORY'  
3457     PERFORM ADD-ERROR  
3458     END-IF  
3459     IF HIS350A1.HLTH-PLAN-CATEGORY = MASK(..'2') AND  
3460       HIS350A1.MEDICARE-NUMBER = ' ' and #SPOUSE-MEDICARE = ' '  
3461     #E-MSG :=  
3462     'You or your spouse must have Medicare to be eligible for this Plan'  
3463     #E-FLD := 'HLTH-PLAN-CATEGORY'  
3464     PERFORM ADD-ERROR  
3465     END-IF  
3466     IF HIS350A1.HLTH-PLAN-CATEGORY = MASK(..'3') AND  
3467       HIS350A1.MEDICARE-NUMBER = ' ' and #DEP-MED-NUM = ' '  
3468     #E-MSG :=  
3469     'You or your dependent must have Medicare to be eligible for this Plan'  
3470     #E-FLD := 'HLTH-PLAN-CATEGORY'  
3471     PERFORM ADD-ERROR  
3472     END-IF  
3473     IF HIS350A1.HLTH-PLAN-CATEGORY = MASK(..'4') AND  
3474       HIS350A1.MEDICARE-NUMBER = ' '  
3475          AND #SPOUSE-MEDICARE = ' ' AND #DEP-MED-NUM = ' '  
3476     #E-MSG :=  
3477     'You or one of your eligible dependents must have Medicare '       -  
3478         'to be able to select this Plan'  
3479     #E-FLD := 'HLTH-PLAN-CATEGORY'  
3480     PERFORM ADD-ERROR  
3481     END-IF  
3482   END-IF  
3483   IF HIS350A1.TRXN-TYPE = 'EN' 
3484     MOVE 'A1' TO HIS808A1.MENU-TRANS-CODE 
3485   ELSE /* 'CH' 
3486     MOVE 'C3' TO HIS808A1.MENU-TRANS-CODE 
3487   END-IF 
3488   MOVE HIS350A1.SSN TO HIS808A1.SSN 
3489   IF HIS350A1.DATE-HIRED-N = 0 
3490     and his350a1.subscriber-type = 'AR'  
3491     #E-MSG := 'Date of Hire is a required field on Enrollee tab' 
3492     #E-FLD := 'DATE-HIRED-N' 
3493     PERFORM ADD-ERROR 
3494     ESCAPE ROUTINE immediate 
3495   ELSE 
3496     MOVE HIS350A1.DATE-HIRED-N TO HIS808A1.DATE-HIRED 
3497   END-IF 
3498   MOVE HIS350A1.HLTH-STATUS TO HIS808A1.HLTH-STATUS 
3499   MOVE HIS350A1.HLTH-EFF-DATE-N TO HIS808A1.HLTH-EFF-DATE 
3500   MOVE HIS350A1.PRIOR-SRVC-BEG-DATE-N TO 
3501     HIS808A1.PRIOR-SRVC-BEG-DATE 
3502   MOVE HIS350A1.PRIOR-SRVC-END-DATE-N TO 
3503     HIS808A1.PRIOR-SRVC-END-DATE 
3504   MOVE HIS350A1.PRE-EX-END-DATE-N TO 
3505     HIS808A1.PRE-EX-END-DATE 
3506   IF HIS350A1.CHANGE-REASON = 'OE' /* Open Enrollment 
3507     HIS350A1.LATE-ENTRANT := 'Y' 
3508   END-IF 
3509   MOVE HIS350A1.LATE-ENTRANT TO HIS808A1.LATE-ENTRANT 
3510   MOVE SUBSCR-MAST.HLTH-STATUS TO HIS808A1.ORIG-HLTH-STATUS 
3511   reset his808a1.program-name 
3512   PERFORM YYYYMMDD-TO-MMDDYYYY 
3513   IF #ESCAPE 
3514     ESCAPE ROUTINE 
3515   END-IF 
3516 /* prex date calculations for Subscriber 
3517   CALLNAT 'KIS808N1' /* prex date calculations for Subscriber 
3518     HIS808A1 
3519   PERFORM MMDDYYYY-TO-YYYYMMDD 
3520   MOVE HIS808A1.PRE-EX-END-DATE TO #DATE-TRANSFER-A 
3521   MOVE #DATE-TRANSFER-N TO HIS350A1.PRE-EX-END-DATE-N 
3522   FR3. FOR #I 1 35 
3523     DECIDE FOR FIRST CONDITION 
3524       WHEN HIS350A1.SUPPORTING-DOC-TYPE(#I) = ' ' 
3525         ESCAPE BOTTOM(FR3.) 
3526       WHEN NONE IGNORE 
3527     END-DECIDE /* (3524) 
3528   END-FOR /* fr3. (3523) 
3529 END-IF /* (3361) 
3530 END-SUBROUTINE /* (3279) health-validations 
3531 ************************************************************************ 
3532 DEFINE SUBROUTINE DENTAL-VALIDATIONS 
3533 ************************************************************************ 
3534 #PLAN-CAT := SUBSCR-MAST.DNTL-PLAN-CATEGORY 
3535 #NEW-PLAN-CAT := HIS350A1.DNTL-PLAN-CATEGORY 
3536 IF #PLAN NE #NEW-PLAN 
3537     OR #CAT NE #NEW-CAT 
3538     OR HIS350A1.DNTL-STATUS NE SUBSCR-MAST.DNTL-STATUS 
3539   #LAST-EFF-DATE := SUBSCR-MAST.DNTL-EFF-DATE 
3540   #WORK-N := HIS350A1.EFFECTIVE-DATE-N 
3541   MOVE EDITED #WORK-A TO #EFF-D(EM=YYYYMMDD) 
3542   IF #LAST-EFF-DATE GT #EFF-D 
3543     MOVE EDITED #LAST-EFF-DATE(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
3544     MOVE EDITED #EFF-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE2 
3545     COMPRESS 'The Dental Effective Date (' #DISPLAY-DATE2 
3546       ') may not be prior to the Coverage Effective Date on file (' 
3547       #DISPLAY-DATE1 ').  Send to EIP for processing.' 
3548       INTO HIS350A1.CRITICAL-ERROR 
3549   END-IF 
3550 END-IF 
3551 IF HIS350A1.DNTL-STATUS = 'A1' 
3552     AND SUBSCR-MAST.DNTL-STATUS = MASK('T'.) 
3553   #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
3554   MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
3555   IF #WORK-D < SUBSCR-MAST.DNTL-EFF-DATE 
3556     MOVE EDITED SUBSCR-MAST.DNTL-EFF-DATE(EM=MM-DD-YYYY) 
3557       TO #DISPLAY-DATE1 
3558     COMPRESS 'Cannot activate Dental Coverage prior to' 
3559       #DISPLAY-DATE1 '- Send to EIP for processing.' INTO #E-MSG 
3560     PERFORM ADD-ERROR 
3561     ESCAPE ROUTINE 
3562   END-IF 
3563 END-IF 
3564 FOR #I 1 15 
3565   IF #PLAN NE #NEW-PLAN 
3566       AND (HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1' 
3567       OR (HIS350A1.DEP-DNTL-STATUS(#I) = 'A1' 
3568       AND HIS350A1.DEP-DNTL-PENDING-ST(#I) = ' ')) 
3569     HIS350A1.DEP-DNTL-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
3570   END-IF 
3571   IF #CAT NE #NEW-CAT 
3572       AND HIS350A1.DEP-DNTL-PENDING-ST(#I) NE ' ' 
3573       AND HIS350A1.DEP-DNTL-PENDING-ST(#I) NE 
3574       HIS350A1.DEP-DNTL-STATUS(#I) 
3575     HIS350A1.DEP-DNTL-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
3576   END-IF 
3577 END-FOR 
3578 * 
3579 IF (SUBSCR-MAST.DNTL-STATUS NE HIS350A1.DNTL-STATUS 
3580     OR SUBSCR-MAST.DNTL-PLAN-CATEGORY NE HIS350A1.DNTL-PLAN-CATEGORY) 
3581     OR (HIS350A1.TRXN-TYPE = 'EN' 
3582     AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
3583   HIS350A1.DNTL-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
3584 ELSE 
3585   IF SUBSCR-MAST.DNTL-EFF-DATE > 0 
3586     MOVE EDITED SUBSCR-MAST.DNTL-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
3587     IF SUBSCR-MAST.DNTL-STATUS = HIS350A1.DNTL-STATUS 
3588         AND SUBSCR-MAST.DNTL-PLAN-CATEGORY = HIS350A1.DNTL-PLAN-CATEGORY 
3589         AND HIS350A1.DNTL-EFF-DATE-N NE #WORK-N 
3590       HIS350A1.DNTL-EFF-DATE-N := #WORK-N 
3591     END-IF 
3592   END-IF 
3593 END-IF 
3594 * 
3595 IF HIS350A1.DNTL-STATUS = MASK('T'.) 
3596   IF #FOUND-DEP-D 
3597       OR #FOUND-SPOUSE-D 
3598     #E-MSG := 'Dental Coverage must be selected because it was' 
3599       -' activated on the Dependent page.' 
3600     #E-FLD := 'DNTL-PLAN-CATEGORY' 
3601     PERFORM ADD-ERROR 
3602   END-IF 
3603 END-IF 
3604 * 
3605 IF NOT(HIS350A1.DNTL-STATUS = MASK('T'.) OR = ' ') 
3606   MOVE HIS350A1.DNTL-PLAN-CATEGORY TO #PLAN-CAT 
3607   MOVE #CAT TO #DNTL-CAT 
3608   HTB808A1.PLAN-NAME := #PLAN 
3609   PERFORM CHECK-PLANS /* Read and return an array of all plans 
3610 * 
3611   IF HTB808A1.PLAN-BEG-DATE = 0 
3612       AND HIS350A1.DNTL-PLAN-CATEGORY NE ' ' 
3613     #E-MSG := 'The selected Dental plan was not found.' 
3614     #E-FLD := 'DNTL-PLAN-CATEGORY' 
3615     PERFORM ADD-ERROR 
3616   ELSE /* (3611) 
3617     IF HTB808A1.PLAN-BEG-DATE > HIS350A1.EFFECTIVE-DATE-N 
3618       #E-MSG := 'The selected Dental plan is not offered before the ' 
3619         -'effective date' 
3620       #E-FLD := 'DNTL-PLAN-CATEGORY' 
3621       PERFORM ADD-ERROR 
3622     ELSE 
3623       IF HTB808A1.PLAN-END-DATE = 0 
3624           OR HIS350A1.EFFECTIVE-DATE-N < HTB808A1.PLAN-END-DATE 
3625         IGNORE 
3626       ELSE 
3627         #E-MSG := 'The selected Dental plan no longer offered.' 
3628         #E-FLD := 'DNTL-PLAN-CATEGORY' 
3629         PERFORM ADD-ERROR 
3630       END-IF 
3631     END-IF 
3632   END-IF /* (3611) 
3633   IF (#CAT = '1' AND (#FOUND-SPOUSE-D OR #FOUND-DEP-D)) 
3634       OR (#CAT = '2' AND (#FOUND-DEP-D OR NOT #FOUND-SPOUSE-D)) 
3635       OR (#CAT = '3' AND (NOT #FOUND-DEP-D OR #FOUND-SPOUSE-D)) 
3636       OR (#CAT = '4' AND (NOT #FOUND-DEP-D OR NOT #FOUND-SPOUSE-D)) 
3637     #E-MSG := 'Select a Dental Plan Category that corresponds with' 
3638       -' your selections on the Dependents screen.' 
3639     #E-FLD := 'DNTL-PLAN-CATEGORY' 
3640     PERFORM ADD-ERROR 
3641   END-IF 
3642 END-IF /* (3605) 
3643 * 
3644 /* ACTIVE DENTAL PLUS 
3645 IF HIS350A1.DNTP-STATUS NE SUBSCR-MAST.DNTP-STATUS 
3646   #LAST-EFF-DATE := SUBSCR-MAST.DNTP-EFF-DATE 
3647   #WORK-N := HIS350A1.EFFECTIVE-DATE-N 
3648   MOVE EDITED #WORK-A TO #EFF-D(EM=YYYYMMDD) 
3649   IF #LAST-EFF-DATE GT #EFF-D 
3650     MOVE EDITED #LAST-EFF-DATE(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
3651     MOVE EDITED #EFF-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE2 
3652     COMPRESS 'The Dental Plus Effective Date (' #DISPLAY-DATE2 
3653       ') may not be prior to the Coverage Effective Date on file (' 
3654       #DISPLAY-DATE1 ').  Send to EIP for processing.' 
3655       INTO HIS350A1.CRITICAL-ERROR 
3656   END-IF 
3657 END-IF 
3658 IF HIS350A1.DNTP-STATUS = 'A1' 
3659     AND SUBSCR-MAST.DNTP-STATUS = MASK('T'.) 
3660   #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
3661   MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
3662   IF #WORK-D < SUBSCR-MAST.DNTP-EFF-DATE 
3663     MOVE EDITED SUBSCR-MAST.DNTP-EFF-DATE(EM=MM-DD-YYYY) 
3664       TO #DISPLAY-DATE1 
3665     COMPRESS 'Cannot activate Dental Plus Coverage prior to' 
3666       #DISPLAY-DATE1 '- Send to EIP for processing.' INTO #E-MSG 
3667     PERFORM ADD-ERROR 
3668     ESCAPE ROUTINE 
3669   END-IF 
3670 END-IF 
3671 * 
3672 IF ((SUBSCR-MAST.DNTP-STATUS NE HIS350A1.DNTP-STATUS 
3673     OR SUBSCR-MAST.DNTP-PLAN-CATEGORY NE HIS350A1.DNTP-PLAN-CATEGORY) 
3674     AND HIS350A1.DNTP-STATUS NE ' ') 
3675     OR (HIS350A1.TRXN-TYPE = 'EN' 
3676     AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
3677   HIS350A1.DNTP-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
3678 ELSE 
3679   IF SUBSCR-MAST.DNTP-EFF-DATE > 0 
3680     MOVE EDITED SUBSCR-MAST.DNTP-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
3681   END-IF 
3682   IF SUBSCR-MAST.DNTP-STATUS = HIS350A1.DNTP-STATUS 
3683       AND SUBSCR-MAST.DNTP-STATUS NE ' ' 
3684       AND SUBSCR-MAST.DNTP-PLAN-CATEGORY = HIS350A1.DNTP-PLAN-CATEGORY 
3685       AND HIS350A1.DNTP-EFF-DATE-N NE #WORK-N 
3686     HIS350A1.DNTP-EFF-DATE-N := #WORK-N 
3687   END-IF 
3688 END-IF 
3689 IF NOT (HIS350A1.DNTP-STATUS = MASK('T'.) OR = ' ') 
3690   IF HIS350A1.DNTL-STATUS NE 'A1' 
3691     #E-MSG := 'You must select dental to have dental plus' 
3692     #E-FLD := 'DNTL-PLAN-CATEGORY' 
3693     PERFORM ADD-ERROR 
3694   END-IF 
3695   MOVE HIS350A1.DNTP-PLAN-CATEGORY TO #PLAN-CAT 
3696   HTB808A1.PLAN-NAME := #PLAN 
3697   PERFORM CHECK-PLANS /* Read and return an array of all plans 
3698 * 
3699   IF HTB808A1.PLAN-BEG-DATE = 0 
3700     #E-MSG := 'Dental Plan not found' 
3701     #E-FLD := 'DNTP-PLAN-CATEGORY' 
3702     PERFORM ADD-ERROR 
3703   ELSE /* (3699) 
3704     IF HTB808A1.PLAN-BEG-DATE > HIS350A1.EFFECTIVE-DATE-N 
3705       #E-MSG := 'Dental Plan not offered before effective date' 
3706       #E-FLD := 'DNTP-PLAN-CATEGORY' 
3707       PERFORM ADD-ERROR 
3708     ELSE 
3709       IF HTB808A1.PLAN-END-DATE = 0 
3710           OR HIS350A1.EFFECTIVE-DATE-N < HTB808A1.PLAN-END-DATE 
3711         IGNORE 
3712       ELSE 
3713         #E-MSG := 'Dental Plan not offered any more' 
3714         #E-FLD := 'DNTP-PLAN-CATEGORY' 
3715         PERFORM ADD-ERROR 
3716       END-IF 
3717     END-IF 
3718   END-IF /* (3699) 
3719   IF #CAT NE #DNTL-CAT 
3720     #E-MSG := 'Coverage levels must be the same for dental' 
3721       -' and dental plus' 
3722     #E-FLD := 'DNTL-PLAN-CATEGORY' 
3723     PERFORM ADD-ERROR 
3724   END-IF 
3725 END-IF /* (3689) 
3726 END-SUBROUTINE /* (3532) dental-validations 
3727 ************************************************************************ 
3728 DEFINE SUBROUTINE DEPEND-LIFE-VALIDATIONS 
3729 ************************************************************************ 
3730 IF HIS350A1.DL-STATUS NE SUBSCR-MAST.DL-STATUS 
3731   #LAST-EFF-DATE := SUBSCR-MAST.DL-EFF-DATE 
3732   #WORK-N := HIS350A1.EFFECTIVE-DATE-N 
3733   MOVE EDITED #WORK-A TO #EFF-D(EM=YYYYMMDD) 
3734   IF #LAST-EFF-DATE GT #EFF-D 
3735     MOVE EDITED #LAST-EFF-DATE(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
3736     MOVE EDITED #EFF-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE2 
3737     COMPRESS 'The Dependent Child Effective Date (' #DISPLAY-DATE2 
3738       ') may not be prior to the Coverage Effective Date on file (' 
3739       #DISPLAY-DATE1 ').  Send to EIP for processing.' 
3740       INTO HIS350A1.CRITICAL-ERROR 
3741   END-IF 
3742 END-IF 
3743 IF ((SUBSCR-MAST.DL-STATUS NE HIS350A1.DL-STATUS 
3744     AND HIS350A1.DL-STATUS NE ' ') 
3745     OR SUBSCR-MAST.DL-PLAN-CATEGORY NE HIS350A1.DL-PLAN-CATEGORY) 
3746     OR (HIS350A1.TRXN-TYPE = 'EN' 
3747     AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
3748   IF HIS350A1.TRXN-TYPE = 'EN' 
3749       AND SUBSCR-MAST.DL-STATUS NE ' ' 
3750       AND HIS350A1.DL-STATUS = ' ' 
3751     IGNORE 
3752   ELSE 
3753     HIS350A1.DL-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
3754   END-IF 
3755   IF HIS350A1.DL-STATUS = ' ' 
3756       AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
3757     MOVE 'T4' TO HIS350A1.DL-STATUS 
3758   END-IF 
3759 ELSE 
3760   IF SUBSCR-MAST.DL-EFF-DATE > 0 
3761     MOVE EDITED SUBSCR-MAST.DL-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
3762     IF SUBSCR-MAST.DL-STATUS = HIS350A1.DL-STATUS 
3763         AND SUBSCR-MAST.DL-PLAN-CATEGORY = HIS350A1.DL-PLAN-CATEGORY 
3764         AND HIS350A1.DL-EFF-DATE-N NE #WORK-N 
3765       HIS350A1.DL-EFF-DATE-N := #WORK-N 
3766     END-IF 
3767   END-IF 
3768 END-IF 
3769 * 
3770 IF HIS350A1.DL-STATUS = MASK('T'.) 
3771     AND #FOUND-DEP-DL 
3772     AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
3773   #E-MSG := 'Dependent Life Coverage must be selected because it' 
3774     -' was activated on the Dependent page.' 
3775   #E-FLD := 'DL-PLAN-CATEGORY' 
3776   PERFORM ADD-ERROR 
3777 END-IF 
3778 * 
3779 IF NOT(HIS350A1.DL-STATUS = MASK('T'.) OR = ' ') 
3780   IF SUBSCR-MAST.DL-STATUS = MASK('T'.) 
3781     #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
3782     MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
3783     IF #WORK-D < SUBSCR-MAST.DL-EFF-DATE 
3784       MOVE EDITED SUBSCR-MAST.DL-EFF-DATE(EM=MM-DD-YYYY) 
3785         TO #DISPLAY-DATE1 
3786       COMPRESS 'Cannot activate Dependent Life (child) Coverage prior to' 
3787         #DISPLAY-DATE1 '- Send to EIP for processing.' INTO #E-MSG 
3788       PERFORM ADD-ERROR 
3789       ESCAPE ROUTINE 
3790     END-IF 
3791   END-IF 
3792 * 
3793   IF #NOT-YET-BORN 
3794     #E-MSG := 'Dependent Date of Birth must be before today''s date' 
3795     #E-FLD := 'DL-PLAN-CATEGORY' 
3796     PERFORM ADD-ERROR 
3797   END-IF 
3798   IF HIS350A1.DL-STATUS NE MASK('T')  /* ACTIVE DEP LIFE 
3799     MOVE HIS350A1.DL-PLAN-CATEGORY TO #PLAN-CAT 
3800     HTB808A1.PLAN-NAME := 'DL' 
3801     PERFORM CHECK-PLANS /* Read and return an array of all plans 
3802 * 
3803     IF HTB808A1.PLAN-BEG-DATE = 0 
3804       #E-MSG := 'Dependent Life Plan not found' 
3805       #E-FLD := 'DL-PLAN-CATEGORY' 
3806       PERFORM ADD-ERROR 
3807     ELSE /* (3803) 
3808       IF HTB808A1.PLAN-BEG-DATE > HIS350A1.EFFECTIVE-DATE-N 
3809         #E-MSG := 'Dependent Life Plan not offered before effective date' 
3810         #E-FLD := 'DL-PLAN-CATEGORY' 
3811         PERFORM ADD-ERROR 
3812       ELSE 
3813         IF HTB808A1.PLAN-END-DATE = 0 
3814             OR HIS350A1.EFFECTIVE-DATE-N < HTB808A1.PLAN-END-DATE 
3815           IGNORE 
3816         ELSE 
3817           #E-MSG := 'Dependent Life Plan not offered any more' 
3818           #E-FLD := 'DL-PLAN-CATEGORY' 
3819           PERFORM ADD-ERROR 
3820         END-IF 
3821       END-IF 
3822     END-IF /* (3803) 
3823     IF NOT #FOUND-DEP-DL 
3824       #E-MSG := 'No dependent selected for dependent life coverage' 
3825       #E-FLD := 'DL-PLAN-CATEGORY' 
3826       PERFORM ADD-ERROR 
3827     END-IF 
3828   END-IF /* (3798) 
3829 END-IF /* (3779) 
3830 END-SUBROUTINE /* (3728) depend-life-validations 
3831 ************************************************************************ 
3832 DEFINE SUBROUTINE OPT-LIFE-VALIDATIONS 
3833 ************************************************************************ 
3834 IF HIS350A1.OL-STATUS NE SUBSCR-MAST.OL-STATUS 
3835   #LAST-EFF-DATE := SUBSCR-MAST.OL-EFF-DATE 
3836   #WORK-N := HIS350A1.EFFECTIVE-DATE-N 
3837   MOVE EDITED #WORK-A TO #EFF-D(EM=YYYYMMDD) 
3838   IF #LAST-EFF-DATE GT #EFF-D 
3839     MOVE EDITED #LAST-EFF-DATE(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
3840     MOVE EDITED #EFF-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE2 
3841     COMPRESS 'The Optional Life Effective Date (' #DISPLAY-DATE2 
3842       ') may not be prior to the Coverage Effective Date on file (' 
3843       #DISPLAY-DATE1 ').  Send to EIP for processing.' 
3844       INTO HIS350A1.CRITICAL-ERROR 
3845   END-IF 
3846 END-IF 
3847 IF HIS350A1.OL-END-DATE-N NE 0 
3848     AND HIS350A1.OL-PLAN-COVER-LEVEL NE SUBSCR-MAST.OL-PLAN-COVER-LEVEL 
3849   HIS350A1.CRITICAL-ERROR := 'Optional Life is in waiver status.  ' 
3850     -'Send to EIP for processing.' 
3851 END-IF 
3852 IF ((SUBSCR-MAST.OL-STATUS NE HIS350A1.OL-STATUS 
3853     AND HIS350A1.OL-STATUS NE ' ') 
3854     OR (SUBSCR-MAST.OL-PLAN-COVER-LEVEL NE HIS350A1.OL-PLAN-COVER-LEVEL 
3855     AND HIS350A1.OL-PLAN-COVER-LEVEL NE ' ')) 
3856     OR (HIS350A1.TRXN-TYPE = 'EN' 
3857     AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
3858   HIS350A1.OL-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
3859 ELSE 
3860   IF SUBSCR-MAST.OL-EFF-DATE > 0 
3861     MOVE EDITED SUBSCR-MAST.OL-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
3862     IF SUBSCR-MAST.OL-STATUS = HIS350A1.OL-STATUS 
3863         AND SUBSCR-MAST.OL-PLAN-COVER-LEVEL = 
3864         HIS350A1.OL-PLAN-COVER-LEVEL 
3865         AND HIS350A1.OL-EFF-DATE-N NE #WORK-N 
3866       HIS350A1.OL-EFF-DATE-N := #WORK-N 
3867     END-IF 
3868   END-IF 
3869 END-IF 
3870 * 
3871 IF NOT(HIS350A1.OL-STATUS = MASK('T'.) OR = ' ') 
3872   IF SUBSCR-MAST.OL-STATUS = MASK('T'.) 
3873     #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
3874     MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
3875     IF #WORK-D < SUBSCR-MAST.OL-EFF-DATE 
3876       MOVE EDITED SUBSCR-MAST.OL-EFF-DATE(EM=MM-DD-YYYY) 
3877         TO #DISPLAY-DATE1 
3878       COMPRESS 'Cannot activate Optional Life Coverage prior to' 
3879         #DISPLAY-DATE1 '- Send to EIP for processing.' INTO #E-MSG 
3880       PERFORM ADD-ERROR 
3881       ESCAPE ROUTINE 
3882     END-IF 
3883   END-IF 
3884 * 
3885   IF HIS350A1.DATE-OF-BIRTH-N > 0 
3886       or (his350a1.change-reason = 'OE' or = 'AE' 
3887       and his350a1.ol-status = 'A1' 
3888       and SUBSCR-MAST.ol-status ne 'A1') 
3889     MOVE HIS350A1.DATE-OF-BIRTH-N TO #DATE-WORK 
3890     MOVE EDITED #BILL-DATE(EM=YYYY) TO #BILL-YEAR 
3891     #BILL-YEAR-N := #BILL-YEAR-N - 1 
3892     COMPRESS #BILL-YEAR '1231' INTO #1231-DATE 
3893       LEAVING NO 
3894     #COMP-AGE := (VAL(#1231-DATE) - VAL(#DATE-WORK)) / 10000 
3895     INCLUDE HIS805C1 /* DETERMINE #OL-AGE-GRP 
3896     HIS350A1.OL-AGE-GROUP := #OL-AGE-GRP 
3897   END-IF 
3898   HTB808A1.PLAN-NAME := 'OL' 
3899   PERFORM CHECK-PLANS /* Return an array of all plans 
3900 * 
3901   IF HTB808A1.PLAN-BEG-DATE = 0 
3902     #E-MSG := 'Optional Life Plan not found' 
3903     #E-FLD := 'OL-PLAN-COVER-LEVEL' 
3904     PERFORM ADD-ERROR 
3905   ELSE /* (3901) 
3906     IF HTB808A1.PLAN-BEG-DATE > HIS350A1.EFFECTIVE-DATE-N 
3907       #E-MSG := 
3908         'Optional Life Plan not offered before effective date' 
3909       #E-FLD := 'OL-PLAN-COVER-LEVEL' 
3910       PERFORM ADD-ERROR 
3911     ELSE 
3912       IF HTB808A1.PLAN-END-DATE = 0 
3913           OR HIS350A1.EFFECTIVE-DATE-N < HTB808A1.PLAN-END-DATE 
3914         IGNORE 
3915       ELSE 
3916         #E-MSG := 'Optional Life Plan not offered any more' 
3917         #E-FLD := 'OL-PLAN-CATEGORY' 
3918         PERFORM ADD-ERROR 
3919       END-IF 
3920     END-IF 
3921   END-IF /* (3901) 
3922   IF HIS350A1.OL-PLAN-COVER-LEVEL = ' ' 
3923     #E-MSG := 'Optional Life Coverage Level must be selected' 
3924     #E-FLD := 'OL-PLAN-COVER-LEVEL' 
3925     PERFORM ADD-ERROR 
3926     ESCAPE ROUTINE 
3927   END-IF 
3928 * 
3929   IF HIS350A1.TRXN-TYPE = 'CH' 
3930     IF HIS350A1.CHANGE-REASON NE 'OE' 
3931       #OL-INCREASE := 50 
3932     ELSE 
3933 **    #OL-INCREASE := 30 
3934       #OL-INCREASE := 50   /* gsd20070820a 
3935     END-IF 
3936     IF HIS350A1.FLEX-BENEFITS-IND = 'N' OR = ' ' /* No MoneyPlu$ 
3937       IF ((SUBSCR-MAST.OL-STATUS = MASK('T'.) OR = ' ' 
3938           AND HIS350A1.OL-STATUS = 'A1') 
3939           OR (VAL(HIS350A1.OL-PLAN-COVER-LEVEL) GT 
3940           VAL(SUBSCR-MAST.OL-PLAN-COVER-LEVEL))) 
3941           AND HIS350A1.IS-OL-MEDICAL-EVID-RECEIVED NE 'Y' 
3942           AND not (HIS350A1.CHANGE-REASON = 'OE' or = 'AE') 
3943         #E-MSG := 'You must provide medical evidence to activate ' 
3944           -'Optional Life' 
3945         #E-FLD := 'OL-PLAN-COVER-LEVEL' 
3946         PERFORM ADD-ERROR 
3947       END-IF 
3948     ELSE /* (3930) MoneyPlu$ 
3949       IF #SPEC-ELIG 
3950         IF #NOT-ON-FILE OR SUBSCR-MAST.OL-PLAN-COVER-LEVEL = ' ' 
3951           #MAX-OL-COVER := VAL(HIS350A1.OL-PLAN-COVER-LEVEL) 
3952             + #OL-INCREASE 
3953         ELSE 
3954           #MAX-OL-COVER := VAL(SUBSCR-MAST.OL-PLAN-COVER-LEVEL) 
3955             + #OL-INCREASE 
3956         END-IF 
3957         IF VAL(HIS350A1.OL-PLAN-COVER-LEVEL) > #MAX-OL-COVER 
3958             AND HIS350A1.IS-OL-MEDICAL-EVID-RECEIVED NE 'Y' 
3959             AND not (hIS350A1.CHANGE-REASON = 'OE' or = 'AE') 
3960           #E-MSG := 'You must provide medical evidence to activate ' 
3961             -'Optional Life' 
3962           #E-FLD := 'OL-PLAN-COVER-LEVEL' 
3963           PERFORM ADD-ERROR 
3964         END-IF 
3965         if #max-ol-cover > 500                  /* gsd20071106a start 
3966           #max-ol-cover := 500 
3967         end-if                                  /* gsd20071106a end 
3968       END-IF 
3969     END-IF /* (3930) 
3970   END-IF /* (3929) 
3971 END-IF /* (3845) 
3972 END-SUBROUTINE /* (3832) opt-life-validations 
3973 ************************************************************************ 
3974 DEFINE SUBROUTINE DEPEND-LIFE-SP-VALIDATIONS 
3975 ************************************************************************ 
3976 IF HIS350A1.OLS-STATUS NE SUBSCR-MAST.OLS-STATUS 
3977   #LAST-EFF-DATE := SUBSCR-MAST.OLS-EFF-DATE 
3978   #WORK-N := HIS350A1.EFFECTIVE-DATE-N 
3979   MOVE EDITED #WORK-A TO #EFF-D(EM=YYYYMMDD) 
3980   IF #LAST-EFF-DATE GT #EFF-D 
3981     MOVE EDITED #LAST-EFF-DATE(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
3982     MOVE EDITED #EFF-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE2 
3983     COMPRESS 'The Dependent Life Spouse Effective Date (' #DISPLAY-DATE2 
3984       ') may not be prior to the Coverage Effective Date on file (' 
3985       #DISPLAY-DATE1 ').  Send to EIP for processing.' 
3986       INTO HIS350A1.CRITICAL-ERROR 
3987   END-IF 
3988 END-IF 
3989 IF (((SUBSCR-MAST.OLS-STATUS NE HIS350A1.OLS-STATUS 
3990     AND HIS350A1.OLS-STATUS NE ' ') 
3991     OR SUBSCR-MAST.OLS-COVER-LEVEL NE HIS350A1.OLS-COVER-LEVEL) 
3992     OR HIS350A1.TRXN-TYPE = 'EN') 
3993     AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
3994   HIS350A1.OLS-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
3995   IF HIS350A1.OLS-STATUS = ' ' 
3996       AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
3997     MOVE 'T4' TO HIS350A1.OLS-STATUS 
3998   END-IF 
3999 ELSE 
4000   IF SUBSCR-MAST.OLS-EFF-DATE > 0 
4001     MOVE EDITED SUBSCR-MAST.OLS-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
4002     IF SUBSCR-MAST.OLS-STATUS = HIS350A1.OLS-STATUS 
4003         AND SUBSCR-MAST.OLS-COVER-LEVEL = HIS350A1.OLS-COVER-LEVEL 
4004         AND HIS350A1.OLS-EFF-DATE-N NE #WORK-N 
4005         AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
4006       HIS350A1.OLS-EFF-DATE-N := #WORK-N 
4007     END-IF 
4008   END-IF 
4009 END-IF 
4010 * 
4011 IF HIS350A1.OLS-STATUS = MASK('T'.) 
4012     AND #FOUND-SPOUSE-OLS 
4013     AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
4014   #E-MSG := 'Dependent Life (spouse) Coverage must be selected' 
4015     -' because it was activated on the Dependent page.' 
4016   #E-FLD := 'DL-PLAN-CATEGORY' 
4017   PERFORM ADD-ERROR 
4018 END-IF 
4019 * 
4020 IF NOT(HIS350A1.OLS-STATUS = MASK('T'.) OR = ' ') 
4021   IF SUBSCR-MAST.OLS-STATUS = MASK('T'.) 
4022     #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
4023     MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
4024     IF #WORK-D < SUBSCR-MAST.OLS-EFF-DATE 
4025       MOVE EDITED SUBSCR-MAST.OLS-EFF-DATE(EM=MM-DD-YYYY) 
4026         TO #DISPLAY-DATE1 
4027       COMPRESS 'Cannot activate Dependent Life (spouse) Coverage prior to' 
4028         #DISPLAY-DATE1 '- Send to EIP for processing.' INTO #E-MSG 
4029       PERFORM ADD-ERROR 
4030       ESCAPE ROUTINE 
4031     END-IF 
4032   END-IF 
4033 * 
4034   DECIDE FOR FIRST CONDITION 
4035     WHEN SUBSCR-MAST.OLS-STATUS = 'A1'             /* ols is prev active 
4036         AND NOT(HIS350A1.OLS-STATUS = MASK('T'.) OR = ' ') 
4037       IGNORE                                  /* do not update age group 
4038     WHEN (HIS350A1.OLS-STATUS = 'A1'           /* ols activated AFTER ol 
4039         AND SUBSCR-MAST.OLS-STATUS = MASK('T'.) OR = ' ') 
4040       if his350a1.ol-status = 'A1' 
4041         his350a1.ols-age-group := his350a1.ol-age-group 
4042       else 
4043         IF HIS350A1.DATE-OF-BIRTH-N > 0  /* ol based on subscr age last yr 
4044             AND #EFF-YYYY-N > 0 
4045           #1231-LAST-YEAR-N := #EFF-YYYY-N - 1  /* 20080516 
4046           COMPRESS #1231-LAST-YEAR-N '1231' INTO #1231-LAST-YEAR 
4047           #COMP-AGE := 
4048             (#1231-LAST-YEAR-n  - HIS350A1.DATE-OF-BIRTH-N) / 10000 
4049           INCLUDE HIS805C1 /* DETERMINE #OL-AGE-GRP 
4050           HIS350A1.OLS-AGE-GROUP := #OL-AGE-GRP 
4051         END-IF 
4052       end-if 
4053     WHEN NONE  IGNORE 
4054   END-DECIDE 
4055   HTB808A1.PLAN-NAME := 'OS' 
4056   PERFORM CHECK-PLANS /* Read and return an array of all plans 
4057 * 
4058   IF HTB808A1.PLAN-BEG-DATE = 0 
4059     #E-MSG := 'Dependent Life (spouse) Plan not found' 
4060     #E-FLD := 'OLS-PLAN-CATEGORY' 
4061     PERFORM ADD-ERROR 
4062   ELSE /* (4058) 
4063     IF HTB808A1.PLAN-BEG-DATE > HIS350A1.EFFECTIVE-DATE-N 
4064       #E-MSG := 'Dependent Life (spouse) Plan not offered before ' 
4065         -'effective date' 
4066       #E-FLD := 'OLS-COVER-LEVEL' 
4067       PERFORM ADD-ERROR 
4068     ELSE 
4069       IF HTB808A1.PLAN-END-DATE = 0 
4070           OR HIS350A1.EFFECTIVE-DATE-N < HTB808A1.PLAN-END-DATE 
4071         IGNORE 
4072       ELSE 
4073         #E-MSG := 'Dependent Life (spouse) Plan not offered any more' 
4074         #E-FLD := 'OLS-COVER-LEVEL' 
4075         PERFORM ADD-ERROR 
4076       END-IF 
4077     END-IF 
4078   END-IF /* (4058) 
4079   IF HIS350A1.OLS-COVER-LEVEL = ' ' 
4080     #E-MSG := 'Dependent Life (spouse) Coverage Level ' 
4081       -'must be selected' 
4082     #E-FLD := 'OLS-COVER-LEVEL' 
4083     PERFORM ADD-ERROR 
4084     ESCAPE ROUTINE 
4085   END-IF 
4086   IF HIS350A1.TRXN-TYPE = 'EN' 
4087       AND HIS350A1.SUBSCR-TRANSFER = ' ' 
4088     IF VAL(HIS350A1.OLS-COVER-LEVEL) > 20 
4089       #E-MSG := 'Dependent Life (spouse) Coverage Level cannot exceed ' 
4090         -'$20,000 during an enroll' 
4091       PERFORM ADD-ERROR 
4092     END-IF 
4093   END-IF 
4094   IF HIS350A1.TRXN-TYPE = 'CH' 
4095     if his350a1.ol-status = mask('T'.)          /* gsd20070927a start 
4096         and his350a1.ols-status = 'A1' 
4097       find (1) subscr with ssn = his350a1.ssn 
4098         if subscr.ol-status = 'A1' 
4099             and val(his350a1.ols-cover-level) gt 20 
4100           #e-msg := 'Dependent Life Spouse coverage level must be ' 
4101             -'reduced to $20,000' 
4102           perform add-error 
4103         end-if 
4104       end-find 
4105     end-if                                      /* gsd20070927a end 
4106     if his350a1.ol-status = 'A1'                /* gsd20070927b start 
4107         and his350a1.ols-status = 'A1' 
4108       #max-ols-cover := VAL(HIS350A1.OL-PLAN-COVER-LEVEL) / 2 
4109       if #max-ols-cover lt 20 
4110         #max-ols-cover := 20 
4111       end-if 
4112       if val(his350a1.ols-cover-level) gt #max-ols-cover 
4113         #e-msg := 'Dependent Life Spouse coverage cannot exceed half ' 
4114           -'of Optional Life coverage' 
4115         perform add-error 
4116       end-if 
4117     end-if                                      /* gsd20070927b end 
4118     IF HIS350A1.OL-STATUS = 'A1' 
4119       IF #NOT-ON-FILE OR SUBSCR-MAST.OL-PLAN-COVER-LEVEL = ' ' 
4120         #MAX-OLS-COVER := VAL(HIS350A1.OL-PLAN-COVER-LEVEL) / 2 
4121       ELSE 
4122         #MAX-OLS-COVER := VAL(HIS350A1.OL-PLAN-COVER-LEVEL) / 2 
4123       END-IF 
4124       IF #MAX-OLS-COVER < 20 
4125         #MAX-OLS-COVER := 20 
4126       END-IF 
4127       IF #MAX-OLS-COVER > 100                   /* gsd20071106b start 
4128         #MAX-OLS-COVER := 100 
4129       END-IF                                    /* gsd20071106b end 
4130     ELSE 
4131       #MAX-OLS-COVER := 20 
4132     END-IF 
4133     IF HIS350A1.OLS-COVER-LEVEL = ' ' 
4134       #E-MSG := 'Dependent Life (spouse) coverage level is required' 
4135       #E-FLD := 'OLS-COVER-LEVEL' 
4136       PERFORM ADD-ERROR 
4137     ELSE /* (4133) 
4138       IF SUBSCR-MAST.OLS-COVER-LEVEL NE HIS350A1.OLS-COVER-LEVEL 
4139         IF VAL(HIS350A1.OLS-COVER-LEVEL) > #MAX-OLS-COVER 
4140           IF #MAX-OLS-COVER = 20 
4141             #DISPLAY-VALUE := '$20,000' 
4142           ELSE 
4143             #DISPLAY-VALUE := 'half of Optional Life Coverage' 
4144           END-IF 
4145           COMPRESS 'Dependent Life (spouse) Coverage Level cannot' 
4146             'exceed' #DISPLAY-VALUE INTO #E-MSG 
4147           #E-FLD := 'OLS-COVER-LEVEL' 
4148           PERFORM ADD-ERROR 
4149         ELSE /* (4139) 
4150           IF ((HIS350A1.CHANGE-REASON = 'MA' OR = 'CM' 
4151               AND VAL(HIS350A1.OLS-COVER-LEVEL) GT 20) 
4152               OR NOT(HIS350A1.CHANGE-REASON = 'MA' OR = 'CM' OR = 'LS')) 
4153               AND HIS350A1.IS-OLS-MEDICAL-EVID-RECEIVED NE 'Y' 
4154               AND not (HIS350A1.CHANGE-REASON = 'OE' or = 'AE') 
4155             #E-MSG := 'Dependent Life (spouse) Coverage Level ' 
4156               -'requires medical evidence.' 
4157             #E-FLD := 'OLS-COVER-LEVEL' 
4158             PERFORM ADD-ERROR 
4159           END-IF /* (4150) 
4160         END-IF /* (4139) 
4161       END-IF /* (4138) 
4162     END-IF 
4163   END-IF /* (4133) 
4164   IF NOT #FOUND-SPOUSE-OLS 
4165     #E-MSG := 
4166       'No dependent selected for Dependent Life (spouse) coverage' 
4167     #E-FLD := 'OLS-COVER-LEVEL' 
4168     PERFORM ADD-ERROR 
4169   END-IF 
4170 END-IF /* (4020) 
4171 END-SUBROUTINE /* (3974) depend-life-sp-validations 
4172 ************************************************************************ 
4173 DEFINE SUBROUTINE SLTD-VALIDATIONS 
4174 ************************************************************************ 
4175 IF HIS350A1.SLTD-STATUS NE SUBSCR-MAST.SLTD-STATUS 
4176   #LAST-EFF-DATE := SUBSCR-MAST.SLTD-EFF-DATE 
4177   #WORK-N := HIS350A1.EFFECTIVE-DATE-N 
4178   MOVE EDITED #WORK-A TO #EFF-D(EM=YYYYMMDD) 
4179   IF #LAST-EFF-DATE GT #EFF-D 
4180     MOVE EDITED #LAST-EFF-DATE(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
4181     MOVE EDITED #EFF-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE2 
4182     COMPRESS 'The SLTD Effective Date (' #DISPLAY-DATE2 
4183       ') may not be prior to the Coverage Effective Date on file (' 
4184       #DISPLAY-DATE1 ').  Send to EIP for processing.' 
4185       INTO HIS350A1.CRITICAL-ERROR 
4186   END-IF 
4187 END-IF 
4188 IF HIS350A1.SLTD-WAIVER-DATE-N NE 0     /* gsd20070213b 
4189 **IF his350a1.sltd-waiver = 'Y'         /* gsd20070213b 
4190     AND HIS350A1.SLTD-COVER-LEVEL NE SUBSCR-MAST.SLTD-COVER-LEVEL 
4191   HIS350A1.CRITICAL-ERROR := 'SLTD is in waiver status.  ' 
4192     -'Send to EIP for processing.' 
4193 END-IF 
4194 IF ((SUBSCR-MAST.SLTD-STATUS NE HIS350A1.SLTD-STATUS 
4195     AND HIS350A1.SLTD-STATUS NE ' ') 
4196     OR (SUBSCR-MAST.SLTD-COVER-LEVEL NE HIS350A1.SLTD-COVER-LEVEL 
4197     AND HIS350A1.SLTD-COVER-LEVEL NE ' ')) 
4198     OR (HIS350A1.TRXN-TYPE = 'EN' 
4199     AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
4200   HIS350A1.SLTD-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
4201 ELSE 
4202   IF SUBSCR-MAST.SLTD-EFF-DATE > 0 
4203     MOVE EDITED SUBSCR-MAST.SLTD-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
4204     IF SUBSCR-MAST.SLTD-STATUS = HIS350A1.SLTD-STATUS 
4205         AND SUBSCR-MAST.SLTD-COVER-LEVEL = HIS350A1.SLTD-COVER-LEVEL 
4206         AND HIS350A1.SLTD-EFF-DATE-N NE #WORK-N 
4207       HIS350A1.SLTD-EFF-DATE-N := #WORK-N 
4208     END-IF 
4209   END-IF 
4210 END-IF 
4211 * 
4212 IF NOT(HIS350A1.SLTD-STATUS = MASK('T'.) OR = ' ') 
4213   IF SUBSCR-MAST.SLTD-STATUS = MASK('T'.) 
4214     #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
4215     MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
4216     IF #WORK-D < SUBSCR-MAST.SLTD-EFF-DATE 
4217       MOVE EDITED SUBSCR-MAST.SLTD-EFF-DATE(EM=MM-DD-YYYY) 
4218         TO #DISPLAY-DATE1 
4219       COMPRESS 'Cannot activate SLTD Coverage prior to' 
4220         #DISPLAY-DATE1 '- Send to EIP for processing.' INTO #E-MSG 
4221       PERFORM ADD-ERROR 
4222       ESCAPE ROUTINE 
4223     END-IF 
4224   END-IF 
4225 * 
4226   IF HIS350A1.TRXN-TYPE = 'CH' 
4227     IF SUBSCR-MAST.SLTD-STATUS = MASK('T'.) OR = ' ' 
4228         AND HIS350A1.SLTD-STATUS = 'A1' 
4229       IF HIS350A1.IS-SLTD-MEDICAL-EVID-RECEIVED NE 'Y' 
4230           AND HIS350A1.CHANGE-REASON NE 'OE' /* Open Enrollment 
4231         #E-MSG := 'Medical evidence is required when activating ' 
4232           -'SLTD Coverage' 
4233         PERFORM ADD-ERROR 
4234       END-IF 
4235     END-IF 
4236     IF HIS350A1.CHANGE-REASON = 'OE' 
4237         AND HIS350A1.SLTD-SALARY GT 147692 
4238       HIS350A1.SLTD-SALARY := 147692 
4239     END-IF 
4240     IF (HIS350A1.CHANGE-REASON = 'SL' 
4241         AND HIS350A1.CHANGE-REASON-EXT = 'IS') 
4242       IF HIS350A1.SLTD-SALARY = 0 
4243         COMPRESS 'Salary cannot be blank on Enrollee Data page' 
4244           SUBSCR-MAST.SLTD-SALARY INTO #E-MSG 
4245         PERFORM ADD-ERROR 
4246       END-IF 
4247       IF HIS350A1.SLTD-SALARY NE SUBSCR-MAST.SLTD-SALARY 
4248         COMPRESS 'SLTD Salary cannot be changed from' 
4249           SUBSCR-MAST.SLTD-SALARY INTO #E-MSG 
4250         PERFORM ADD-ERROR 
4251       END-IF 
4252       IF HIS350A1.SALARY GT 147692 
4253         #E-MSG := 'SLTD Salary cannot exceed $147,692' 
4254         PERFORM ADD-ERROR 
4255       END-IF 
4256     END-IF 
4257     IF (HIS350A1.SLTD-COVER-LEVEL = '90' 
4258         AND SUBSCR-MAST.SLTD-COVER-LEVEL = '180') 
4259       IF HIS350A1.CHANGE-REASON-EXT = 'AS' 
4260         IF HIS350A1.SLTD-SALARY = 0 
4261           COMPRESS 'Salary cannot be blank on Enrollee Data page' 
4262             SUBSCR-MAST.SLTD-SALARY INTO #E-MSG 
4263           PERFORM ADD-ERROR 
4264         END-IF 
4265         IF HIS350A1.SLTD-SALARY NE SUBSCR-MAST.SLTD-SALARY 
4266           COMPRESS 'SLTD Salary cannot be changed from' 
4267             SUBSCR-MAST.SLTD-SALARY INTO #E-MSG 
4268           PERFORM ADD-ERROR 
4269         END-IF 
4270       END-IF 
4271       IF HIS350A1.IS-SLTD-MEDICAL-EVID-RECEIVED NE 'Y' 
4272           AND HIS350A1.CHANGE-REASON NE 'OE' /* Open Enrollment 
4273         #E-MSG := 'Medical evidence is required when changing' 
4274           -' SLTD Coverage Type from 180 days to 90 days' 
4275         PERFORM ADD-ERROR 
4276       END-IF 
4277     END-IF /* (4257) 
4278   END-IF 
4279 * 
4280   HTB808A1.PLAN-NAME := 'SD' 
4281   PERFORM CHECK-PLANS /* Read and return an array of all plans 
4282 * 
4283   IF HTB808A1.PLAN-BEG-DATE = 0 
4284     #E-MSG := 'SLTD Plan not found' 
4285     #E-FLD := 'SLTD-COVER-LEVEL' 
4286     PERFORM ADD-ERROR 
4287   ELSE /* (4283) 
4288     IF HTB808A1.PLAN-BEG-DATE > HIS350A1.EFFECTIVE-DATE-N 
4289       #E-MSG := 'SLTD Plan not offered before effective date' 
4290       #E-FLD := 'SLTD-COVER-LEVEL' 
4291       PERFORM ADD-ERROR 
4292     ELSE 
4293       IF HTB808A1.PLAN-END-DATE = 0 
4294           OR HIS350A1.EFFECTIVE-DATE-N < HTB808A1.PLAN-END-DATE 
4295         IGNORE 
4296       ELSE 
4297         #E-MSG := 'SLTD Plan not offered any more' 
4298         #E-FLD := 'SLTD-COVER-LEVEL' 
4299         PERFORM ADD-ERROR 
4300       END-IF 
4301     END-IF 
4302   END-IF /* (4283) 
4303   IF HIS350A1.DATE-OF-BIRTH-N > 0 
4304     MOVE HIS350A1.DATE-OF-BIRTH-N TO #DATE-WORK 
4305     MOVE EDITED #BILL-DATE(EM=YYYY) TO #BILL-YEAR 
4306     #BILL-YEAR-N := #BILL-YEAR-N - 1 
4307     COMPRESS #BILL-YEAR '1231' INTO #1231-DATE 
4308       LEAVING NO 
4309     #COMP-AGE := (VAL(#1231-DATE) - VAL(#DATE-WORK)) / 10000 
4310   END-IF 
4311   DECIDE FOR FIRST CONDITION 
4312     WHEN #COMP-AGE < 31   HIS350A1.SLTD-AGE-GROUP := '1' 
4313     WHEN #COMP-AGE < 41   HIS350A1.SLTD-AGE-GROUP := '2' 
4314     WHEN #COMP-AGE < 51   HIS350A1.SLTD-AGE-GROUP := '3' 
4315     WHEN #COMP-AGE < 61   HIS350A1.SLTD-AGE-GROUP := '4' 
4316     WHEN #COMP-AGE < 66   HIS350A1.SLTD-AGE-GROUP := '5' 
4317     WHEN #COMP-AGE > 65   HIS350A1.SLTD-AGE-GROUP := '6' 
4318     WHEN NONE 
4319       #DATE-WORK := HIS350A1.DATE-OF-BIRTH-N 
4320       MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
4321       MOVE EDITED #WORK-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
4322       COMPRESS 'Invalid Date of Birth (' HIS350A1.DATE-OF-BIRTH-N 
4323         ')' INTO #E-MSG 
4324       PERFORM ADD-ERROR 
4325   END-DECIDE /* (4307) 
4326 END-IF /* (4212) 
4327 END-SUBROUTINE /* (4173) sltd-validations 
4328 ************************************************************************ 
4329 *********************************************************************** 
4330 DEFINE SUBROUTINE CHECK-PLANS 
4331 *********************************************************************** 
4332 CALLNAT 'HTB808N1' 
4333   HTB808A1 
4334 END-SUBROUTINE /* (4330) check-plans 
4335 ************************************************************************ 
4336 DEFINE SUBROUTINE CHECK-FOR-TRANSFERS 
4337 ************************************************************************ 
4338 IF #TERMINATED 
4339     and not #no-transfer                        /* gsd20070910a 
4340     AND HIS350A1.TRXN-TYPE = 'EN' 
4341   MOVE EDITED #LAST-EFF-DATE(EM=YYYYMMDD) TO #LAST-EFF-DATE-A 
4342   IF #LAST-EFF-DATE-N = HIS350A1.EFFECTIVE-DATE-N 
4343     #DATES-MATCH := TRUE 
4344     PERFORM CHECK-FOR-ACADEMIC 
4345   ELSE 
4346     MOVE HIS350A1.EFFECTIVE-DATE-N TO #EFF-A 
4347     IF (#LAST-EFF-DATE-MMDD = '0601' OR = '0701' OR = '0801') 
4348         AND (#EFF-MMDD-A = '0701' OR = '0801' OR = '0901') 
4349       IF #LAST-EFF-DATE-YYYY-N = #EFF-YYYY-N 
4350         PERFORM CHECK-FOR-ACADEMIC 
4351       END-IF 
4352       IF NOT #ACADEMIC 
4353         PERFORM CHECK-FOR-BREAK 
4354       END-IF 
4355     ELSE 
4356       PERFORM CHECK-FOR-BREAK 
4357     END-IF 
4358   END-IF 
4359   PERFORM SET-PART-TIME-IND 
4360   DECIDE FOR FIRST CONDITION 
4361     WHEN #DATES-MATCH 
4362       If (subscr-mast.subscriber-type ne 'AR'  
4363            and his350a1.trxn-type = 'EN')  
4364        ignore  
4365       else  
4366       HIS350A1.SUBSCR-TRANSFER := 'T' /* prevent coverage changes 
4367       END-IF  
4368       IF #ACADEMIC 
4369           AND (HIS350A1.PART-TIME-SUBSCR NE SUBSCR-MAST.PART-TIME-SUBSCR 
4370           AND SUBSCR-MAST.PART-TIME-SUBSCR NE ' ') 
4371           AND NOT(HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
4372         HIS350A1.CRITICAL-ERROR := 'The subscriber is a Part-time ' 
4373           -'Teacher employee. This request reflects a change in the ' 
4374           -'part-time status. Please forward this enrollment to EIP ' 
4375           -'for processing.' 
4376       END-IF 
4377       /*MWS20080226 START 
4378       IF HIS350A1.PART-TIME-IND NE SUBSCR-MAST.PART-TIME-IND 
4379         RESET HIS350A1.SUBSCR-TRANSFER /* ALLOW COVERAGE CHANGES FOR 
4380           his350a1.hlth-status     /* PT TO FT AND VICE-VERSA. 
4381           his350a1.dntl-status 
4382           his350a1.dntp-status 
4383           his350a1.ol-status 
4384           his350a1.sltd-status 
4385       END-IF /*MWS20080226 END 
4386     WHEN #ACADEMIC 
4387         AND HIS350A1.MODULE(*) = 'DEMOGRAPHIC' 
4388       HIS350A1.SUBSCR-TRANSFER := 'A' /* 
4389       #W-MSG := 'This employee is an Academic Transfer.  This request ' 
4390         -'will result in a break in coverage.  A 12-month ' 
4391         -'pre-existing condition limitation may apply.  Payroll ' 
4392         -'deductions for LTC, if applicable, may be forfeited.' 
4393         -'Consult the employee before continuing.' 
4394       PERFORM ADD-WARNING 
4395     WHEN #BREAK-IN-COV /* 1 month break 
4396         AND HIS350A1.MODULE(*) = 'DEMOGRAPHIC' 
4397       HIS350A1.SUBSCR-TRANSFER := 'B' /* 
4398       #W-MSG := 'The effective date requested will cause a one-month''s' 
4399         -' break in coverage.  If your last day with the previous group' 
4400         -' is within 15 days of the date of hire with this group, ' 
4401         -'change the Date of Hire and effective date ' 
4402         -'to show no break in coverage.' 
4403       PERFORM ADD-WARNING 
4404     WHEN NONE 
4405       RESET HIS350A1.SUBSCR-TRANSFER HIS350A1.CRITICAL-ERROR 
4406   END-DECIDE /* (4360) 
4407 END-IF /* (4338) 
4408 IF HIS350A1.SUBSCR-TRANSFER = 'T' OR = 'A' 
4409   PERFORM PRE-LOAD-TRANSFER-COVERAGES 
4410 END-IF 
4411 END-SUBROUTINE /* (4336) check-for-transfers 
4412 ************************************************************************ 
4413 DEFINE SUBROUTINE CHECK-SUBSCR-MAST-STATUS 
4414 ************************************************************************ 
4415 IF (SUBSCR-MAST.HLTH-STATUS = MASK('T'.) OR = ' ') 
4416     AND (SUBSCR-MAST.DNTL-STATUS = MASK('T'.) OR = ' ') 
4417     AND (SUBSCR-MAST.DL-STATUS = MASK('T'.) OR = ' ') 
4418     AND (SUBSCR-MAST.OL-STATUS = MASK('T'.) OR = ' ') 
4419     AND (SUBSCR-MAST.OLS-STATUS = MASK('T'.) OR = ' ') 
4420     AND (SUBSCR-MAST.LTC-STATUS = MASK('T'.) OR = ' ') 
4421     AND (SUBSCR-MAST.LTC-SP-STATUS = MASK('T'.) OR = ' ') 
4422     AND (SUBSCR-MAST.SLTD-STATUS = MASK('T'.) OR = ' ') 
4423   #ALL-TERM := TRUE 
4424 ELSE 
4425   #ALL-TERM := FALSE 
4426 END-IF 
4427 if subscr-mast.subscriber-type ne 'AR'          /* gsd20070910a start 
4428     and subscr-mast.subscriber-type ne ' ' /*mws20080213 
4429   #no-transfer := TRUE 
4430 else 
4431   #no-transfer := FALSE 
4432 end-if                                          /* gsd20070910a end 
4433 END-SUBROUTINE /* (4413) check-subscr-mast-status 
4434 ************************************************************************ 
4435 DEFINE SUBROUTINE CHECK-TERMINATION-STATUS 
4436 ************************************************************************ 
4437 PERFORM CHECK-SUBSCR-MAST-STATUS /* determine if no coverage is active 
4438 IF #ALL-TERM 
4439   #TERMINATED := TRUE 
4440   PERFORM GET-LATEST-EFF-DATE 
4441 ELSE 
4442   #TERMINATED := FALSE 
4443 END-IF 
4444 * 
4445 IF HIS350A1.EFFECTIVE-DATE-N <> 0 
4446   #EFF-N := HIS350A1.EFFECTIVE-DATE-N 
4447   MOVE EDITED #EFF-A TO #EFF-D(EM=YYYYMMDD) 
4448   IF SUBSCR-MAST.LTC-STATUS = MASK('T'.) 
4449       AND SUBSCR-MAST.LTC-STATUS-EFF-DATE < #EFF-D 
4450     #BREAK-IN-LTC := TRUE 
4451   END-IF 
4452 END-IF /* (4451) 
4453 END-SUBROUTINE /* (4435) check-termination-status 
4454 ************************************************************************ 
4455 DEFINE SUBROUTINE GET-LATEST-EFF-DATE 
4456 ************************************************************************ 
4457 FSM3. FIND SUBSCR-MAST WITH SSN = HIS350A1.SSN 
4458   IF NO RECORDS FOUND 
4459     #NOT-ON-FILE := TRUE 
4460     ESCAPE BOTTOM (FSM3.) 
4461   END-NOREC 
4462 END-FIND /* (4457) FSM3. SUBSCR-MAST 
4463 * 
4464 RESET #LAST-EFF-DATE 
4465 DECIDE FOR EVERY CONDITION /* get latest effective date 
4466   WHEN SUBSCR-MAST.HLTH-EFF-DATE GT #LAST-EFF-DATE 
4467     #LAST-EFF-DATE := SUBSCR-MAST.HLTH-EFF-DATE 
4468   WHEN SUBSCR-MAST.DNTL-EFF-DATE GT #LAST-EFF-DATE 
4469     #LAST-EFF-DATE := SUBSCR-MAST.DNTL-EFF-DATE 
4470   WHEN SUBSCR-MAST.DL-EFF-DATE GT #LAST-EFF-DATE 
4471     #LAST-EFF-DATE := SUBSCR-MAST.DL-EFF-DATE 
4472   WHEN SUBSCR-MAST.OL-EFF-DATE GT #LAST-EFF-DATE 
4473     #LAST-EFF-DATE := SUBSCR-MAST.OL-EFF-DATE 
4474   WHEN SUBSCR-MAST.OLS-EFF-DATE GT #LAST-EFF-DATE 
4475     #LAST-EFF-DATE := SUBSCR-MAST.OLS-EFF-DATE 
4476   WHEN SUBSCR-MAST.LTC-STATUS-EFF-DATE GT #LAST-EFF-DATE 
4477     #LAST-EFF-DATE := SUBSCR-MAST.LTC-STATUS-EFF-DATE 
4478   WHEN SUBSCR-MAST.LTC-SP-STATUS-EFF-DATE GT #LAST-EFF-DATE 
4479     #LAST-EFF-DATE := SUBSCR-MAST.LTC-SP-STATUS-EFF-DATE 
4480   WHEN SUBSCR-MAST.SLTD-EFF-DATE GT #LAST-EFF-DATE 
4481     #LAST-EFF-DATE := SUBSCR-MAST.SLTD-EFF-DATE 
4482   WHEN NONE  IGNORE 
4483 END-DECIDE /* (4465) 
4484 END-SUBROUTINE /* (4455) get-latest-eff-date 
4485 ************************************************************************ 
4486 DEFINE SUBROUTINE GET-LATEST-DEP-EFF-DATE /* gsd20060224a 
4487 ************************************************************************ 
4488 #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
4489 MOVE EDITED #DATE-WORK TO #EFF-D(EM=YYYYMMDD) 
4490 #MAX-SEQ-NUM1 := *MAXVAL(HIS350A1.DEP-SEQ-NUM(*)) 
4491 IF #MAX-SEQ-NUM1 GT 0 
4492   FOR #I 1 TO #MAX-SEQ-NUM1 
4493     IF HIS350A1.DEP-HLTH-STATUS(#I) = 'A1' 
4494         OR HIS350A1.DEP-DNTL-STATUS(#I) = 'A1' 
4495         OR HIS350A1.DEP-DL-STATUS(#I) = 'A1' 
4496         OR HIS350A1.DEP-OLS-STATUS(#I) = 'A1' 
4497       ESCAPE bottom 
4498     END-IF 
4499     RESET #LAST-DEP-EFF-DATE #LAST-DEP-EFF-DATE-D 
4500     IF HIS350A1.DEP-RELATION(#I) NE MASK(.'1'.) /* always show spouse 
4501       DECIDE FOR EVERY CONDITION /* get latest dependent effective date 
4502         WHEN HIS350A1.DEP-HLTH-STATUS(#I) NE 'A1' 
4503             and his350a1.dep-hlth-pending-st(#i) = 'A1' 
4504             and HIS350A1.DEP-HLTH-EFF-DATE-N(#I) > #LAST-DEP-EFF-DATE 
4505           #LAST-DEP-EFF-DATE := HIS350A1.DEP-HLTH-EFF-DATE-N(#I) 
4506         WHEN HIS350A1.DEP-DNTL-STATUS(#I) NE 'A1' 
4507             and his350a1.dep-dntl-pending-st(#i) = 'A1' 
4508             and HIS350A1.DEP-DNTL-EFF-DATE-N(#I) > #LAST-DEP-EFF-DATE 
4509           #LAST-DEP-EFF-DATE := HIS350A1.DEP-DNTL-EFF-DATE-N(#I) 
4510         WHEN HIS350A1.DEP-DL-STATUS(#I) NE 'A1' 
4511             and his350a1.dep-dl-pending-st(#i) = 'A1' 
4512             and HIS350A1.DEP-DL-EFF-DATE-N(#I) > #LAST-DEP-EFF-DATE 
4513           #LAST-DEP-EFF-DATE := HIS350A1.DEP-DL-EFF-DATE-N(#I) 
4514 **      WHEN HIS350A1.DEP-OLS-STATUS(#I) NE 'A1'  
4515 **          and his350a1.dep-ltc-pending-st(#i) = 'A1'  
4516 **          and HIS350A1.DEP-OLS-EFF-DATE-N(#I) > #LAST-DEP-EFF-DATE  
4517 **        #LAST-DEP-EFF-DATE := HIS350A1.DEP-OLS-EFF-DATE-N(#I)  
4518         WHEN ANY 
4519           IF #LAST-DEP-EFF-DATE GT 0 
4520             MOVE EDITED #LAST-DEP-EFF-DATE-A 
4521               TO #LAST-DEP-EFF-DATE-D(EM=YYYYMMDD) 
4522             ADD 180 TO #LAST-DEP-EFF-DATE-D 
4523           END-IF 
4524         WHEN NONE  IGNORE 
4525       END-DECIDE /* (4497) 
4526     END-IF /* (4497) 
4527   END-FOR /* (4492) 
4528 END-IF /* (4489) 
4529 END-SUBROUTINE /* (4486) get-latest-dep-eff-date 
4530 ************************************************************************ 
4531 DEFINE SUBROUTINE CHECK-FOR-ACADEMIC 
4532 ************************************************************************ 
4533 IF (SUBSCR-MAST.EMPLOYER-GROUP-ID = MASK('H'......) 
4534     OR SUBSCR-MAST.EMPLOYER-GROUP-ID = MASK('5'......)) 
4535     AND (HIS350A1.EMPLOYER-GROUP-ID = MASK('5'......) 
4536     OR HIS350A1.EMPLOYER-GROUP-ID = MASK('H'......)) 
4537   IF (HIS350A1.EMPLOYER-GROUP-ID = 'H030000' OR = 'H060000' 
4538       OR = 'H510000' OR = 'H590000' OR = 'H630000' OR = 'H670000' 
4539       OR = 'H730000' OR = 'H790000' OR = 'H870000' OR = 'H910000') 
4540       OR (SUBSCR-MAST.EMPLOYER-GROUP-ID = 'H030000' OR = 'H060000' 
4541       OR = 'H510000' OR = 'H590000' OR = 'H630000' OR = 'H670000' 
4542       OR = 'H730000' OR = 'H790000' OR = 'H870000' OR = 'H910000') 
4543     #ACADEMIC := FALSE 
4544   ELSE 
4545     #ACADEMIC := TRUE 
4546   END-IF 
4547 END-IF /* (4488) 
4548 END-SUBROUTINE /* (4486) check-for-academic 
4549 ************************************************************************ 
4550 DEFINE SUBROUTINE CHECK-FOR-BREAK /* 1 month break 
4551 ************************************************************************ 
4552 **#BREAK-IN-COV := TRUE 
4553 #BREAK-IN-COV := FALSE 
4554 IF #EFF-MM-N > 1 
4555   IF #EFF-YYYY-A = #LAST-EFF-DATE-YYYY 
4556       AND #EFF-MM-N = (#LAST-EFF-DATE-MM + 1) 
4557       AND #EFF-DD-A = #LAST-EFF-DATE-DD 
4558 * add 1 to #last-eff-date-mm 
4559 * if #eff-n gt #last-eff-date-n 
4560     #BREAK-IN-COV := TRUE 
4561   END-IF 
4562 ELSE 
4563   IF #EFF-YYYY-N = (#LAST-EFF-DATE-YYYY-N + 1) 
4564       AND #LAST-EFF-DATE-MM = 12 
4565       AND #EFF-DD-A = #LAST-EFF-DATE-DD 
4566 * add 1 to #last-eff-date-yyyy-n 
4567 * #last-eff-date-mm := 12 
4568 * if #eff-n gt #last-eff-date-n 
4569     #BREAK-IN-COV := TRUE 
4570   END-IF 
4571 END-IF 
4572 END-SUBROUTINE /* (4550) check-for-break 
4573 ************************************************************************ 
4574 DEFINE SUBROUTINE VALIDATE-MANUAL-EFF-DATE 
4575 ************************************************************************ 
4576 IF #COMP-D = #HIRE-D 
4577   ESCAPE ROUTINE 
4578 ELSE 
4579   IF (#COMP-D - 90) > #HIRE-D 
4580       OR (#COMP-D + 90) < #HIRE-D 
4581     #E-MSG := 'Hire Date and Coverage Effective Date conflict' 
4582     PERFORM ADD-ERROR 
4583   END-IF 
4584   /*mws20080226a start 
4585   move edited #HIRE-d (em=yyyymmdd) to #date-check-a 
4586   add 1 to #mm 
4587   if #mm = 13 
4588     add 1 to #yyyy 
4589     #mm := 1 
4590   end-if 
4591   #dd := 1 
4592   move edited #date-check-a to #date-check-d (em=yyyymmdd) 
4593   if #comp-d > #date-check-d 
4594     #e-msg := 'Invalid Coverage Effective date' 
4595     Perform add-error 
4596   end-if 
4597   /*mws20080226a end 
4598 END-IF 
4599 END-SUBROUTINE /* (*8118) validate-manual-eff-date 
4600 ************************************************************************ 
4601 DEFINE SUBROUTINE YYYYMMDD-TO-MMDDYYYY 
4602 ************************************************************************ 
4603 IF HIS808A1.DATE-HIRED = '0' 
4604   HIS808A1.DATE-HIRED := ' ' 
4605 END-IF 
4606 IF HIS808A1.DATE-HIRED = MASK(YYYYMMDD) 
4607     AND HIS808A1.DATE-HIRED = '15820000' THRU '26990000' 
4608   MOVE EDITED HIS808A1.DATE-HIRED TO #WORK-D(EM=YYYYMMDD) 
4609   MOVE EDITED #WORK-D(EM=MMDDYYYY) TO HIS808A1.DATE-HIRED 
4610 END-IF 
4611 IF HIS808A1.HLTH-EFF-DATE = '0' 
4612   HIS808A1.HLTH-EFF-DATE := ' ' 
4613 END-IF 
4614 IF HIS808A1.HLTH-EFF-DATE = MASK(YYYYMMDD) 
4615     AND HIS808A1.HLTH-EFF-DATE > '15820000' 
4616     AND HIS808A1.HLTH-EFF-DATE < '26990000' 
4617   MOVE EDITED HIS808A1.HLTH-EFF-DATE TO #WORK-D(EM=YYYYMMDD) 
4618   MOVE EDITED #WORK-D(EM=MMDDYYYY) TO HIS808A1.HLTH-EFF-DATE 
4619 END-IF 
4620 IF HIS808A1.PRIOR-SRVC-BEG-DATE = '0' 
4621   HIS808A1.PRIOR-SRVC-BEG-DATE := ' ' 
4622 END-IF 
4623 IF HIS808A1.PRIOR-SRVC-BEG-DATE = MASK(YYYYMMDD) 
4624     AND HIS808A1.PRIOR-SRVC-BEG-DATE > '15820000' 
4625     AND HIS808A1.PRIOR-SRVC-BEG-DATE < '26990000' 
4626   MOVE EDITED HIS808A1.PRIOR-SRVC-BEG-DATE TO #BEG-D(EM=YYYYMMDD) 
4627   MOVE EDITED #BEG-D(EM=MMDDYYYY) TO HIS808A1.PRIOR-SRVC-BEG-DATE 
4628 ELSE 
4629   IF NOT(HIS808A1.PRIOR-SRVC-BEG-DATE = '0' OR = ' ') 
4630     #E-MSG := 'Credible Coverage From Date is invalid' 
4631     #E-FLD := 'prior-srvc-beg-date' 
4632     PERFORM ADD-ERROR 
4633     #ESCAPE := TRUE 
4634   END-IF 
4635 END-IF 
4636 IF HIS350A1.HLTH-EFF-DATE-N > 0 
4637   #WORK-A := HIS350A1.HLTH-EFF-DATE-N 
4638   MOVE EDITED #WORK-A TO #WORK-D(EM=YYYYMMDD) 
4639   IF #BEG-D > #WORK-D 
4640     MOVE EDITED #WORK-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
4641     COMPRESS 'Credible Coverage From Date cannot be greater than ' 
4642       'Health Effective Date (' #DISPLAY-DATE1 ')' INTO #E-MSG 
4643     #E-FLD := 'prior-srvc-beg-date' 
4644     PERFORM ADD-ERROR 
4645     #ESCAPE := TRUE 
4646   END-IF 
4647 END-IF 
4648 IF HIS808A1.PRIOR-SRVC-END-DATE = '0' 
4649   HIS808A1.PRIOR-SRVC-END-DATE := ' ' 
4650 END-IF 
4651 IF HIS808A1.PRIOR-SRVC-END-DATE = MASK(YYYYMMDD) 
4652     AND HIS808A1.PRIOR-SRVC-END-DATE > '15820000' 
4653     AND HIS808A1.PRIOR-SRVC-END-DATE < '26990000' 
4654   MOVE EDITED HIS808A1.PRIOR-SRVC-END-DATE TO #END-D(EM=YYYYMMDD) 
4655   MOVE EDITED #END-D(EM=MMDDYYYY) TO HIS808A1.PRIOR-SRVC-END-DATE 
4656 ELSE 
4657   IF NOT(HIS808A1.PRIOR-SRVC-END-DATE = '0' OR = ' ') 
4658     #E-MSG := 'Credible Coverage To Date is invalid' 
4659     #E-FLD := 'prior-srvc-end-date' 
4660     PERFORM ADD-ERROR 
4661     #ESCAPE := TRUE 
4662   END-IF 
4663 END-IF 
4664 IF HIS350A1.HLTH-EFF-DATE-N > 0 
4665   #WORK-A := HIS350A1.HLTH-EFF-DATE-N 
4666   MOVE EDITED #WORK-A TO #WORK-D(EM=YYYYMMDD) 
4667   IF #END-D > #WORK-D 
4668     MOVE EDITED #WORK-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
4669     COMPRESS 'Credible Coverage To Date cannot be greater than ' 
4670       'Health Effective Date (' #DISPLAY-DATE1 ')' INTO #E-MSG 
4671     #E-FLD := 'prior-srvc-beg-date' 
4672     PERFORM ADD-ERROR 
4673     #ESCAPE := TRUE 
4674   END-IF 
4675 END-IF 
4676 IF #END-D NE 0 
4677     AND #BEG-D NE 0 
4678     AND #END-D < #BEG-D 
4679   #E-MSG := 'Credible Coverage To Date cannot be greater than ' 
4680     -'Credible Coverage From Date' 
4681   #E-FLD := 'prior-srvc-beg-date' 
4682   PERFORM ADD-ERROR 
4683   #ESCAPE := TRUE 
4684 END-IF 
4685 IF HIS808A1.PRE-EX-END-DATE = '0' 
4686   HIS808A1.PRE-EX-END-DATE := ' ' 
4687 END-IF 
4688 IF HIS808A1.PRE-EX-END-DATE = MASK(YYYYMMDD) 
4689     AND HIS808A1.PRE-EX-END-DATE > '15820000' 
4690     AND HIS808A1.PRE-EX-END-DATE < '26990000' 
4691   MOVE EDITED HIS808A1.PRE-EX-END-DATE TO #WORK-D(EM=YYYYMMDD) 
4692   MOVE EDITED #WORK-D(EM=MMDDYYYY) TO HIS808A1.PRE-EX-END-DATE 
4693 ELSE 
4694   IF NOT(HIS808A1.PRE-EX-END-DATE = '0' OR = ' ') 
4695     #E-MSG := 'Pre-existing Condition End Date is invalid' 
4696     #E-FLD := 'pre-ex-end-date' 
4697     PERFORM ADD-ERROR 
4698     #ESCAPE := TRUE 
4699   END-IF 
4700 END-IF 
4701 * 
4702 IF #I = 1 THRU 15 
4703   IF HIS350A1.DEP-OTHER-INS-IND(#I) = 'Y' 
4704       AND HIS350A1.DEP-INS-EFF-DATE-N(#I) = 0 
4705       AND HIS350A1.DEP-INS-POLICY-HOLDER-DOB-N(#I) = 0 
4706       AND HIS350A1.DEP-INS-COMPANY-NAME(#I) = ' ' 
4707     #E-MSG := 'All Other Coverage fields are required' 
4708     PERFORM ADD-ERROR 
4709   END-IF 
4710   IF HIS350A1.DEP-INS-EFF-DATE-N(#I) NE 0 
4711       AND (NOT(HIS350A1.DEP-INS-EFF-DATE-N(#I) = MASK(YYYYMMDD)) 
4712       OR HIS350A1.DEP-INS-EFF-DATE-N(#I) < 15820000 
4713       OR HIS350A1.DEP-INS-EFF-DATE-N(#I) > 26990000) 
4714     COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4715       '| Effective Date of Other Coverage is invalid' INTO #E-MSG 
4716     #E-FLD := 'dep-ins-eff-date-n' 
4717     PERFORM ADD-ERROR 
4718     #ESCAPE := TRUE 
4719   END-IF 
4720   IF HIS350A1.DEP-INS-POLICY-HOLDER-DOB-N(#I) NE 0 
4721       AND (NOT(HIS350A1.DEP-INS-POLICY-HOLDER-DOB-N(#I) = 
4722       MASK(YYYYMMDD)) 
4723       OR HIS350A1.DEP-INS-POLICY-HOLDER-DOB-N(#I) < 15820000 
4724       OR HIS350A1.DEP-INS-POLICY-HOLDER-DOB-N(#I) > 26990000) 
4725     COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4726       '| Policy Holder Date of Birth is invalid' INTO #E-MSG 
4727     #E-FLD := 'dep-ins-policy-holder-dob-n' 
4728     PERFORM ADD-ERROR 
4729     #ESCAPE := TRUE 
4730   END-IF 
4731   IF HIS350A1.DEP-INS-POLICY-HOLDER-DOB-N(#I) > 0 
4732     #WORK-A := HIS350A1.DEP-INS-POLICY-HOLDER-DOB-N(#I) 
4733     IF #WORK-A = MASK (YYYYMMDD) 
4734       MOVE EDITED #WORK-A TO #WORK-D(EM=YYYYMMDD) 
4735       IF #WORK-D > *DATX 
4736         COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4737           '| Policy Holder Date of Birth' 
4738           'cannot be later than today' INTO #E-MSG 
4739         #E-FLD := 'dep-ins-policy-holder-dob-n' 
4740         PERFORM ADD-ERROR 
4741         #ESCAPE := TRUE 
4742       END-IF 
4743     END-IF 
4744   END-IF 
4745   IF (HIS350A1.DEP-MEDICARE-NUMBER(#I) <> ' ' 
4746       OR HIS350A1.DEP-MEDICARE-EFF-DATE-A-N(#I) <> 0 
4747       OR HIS350A1.DEP-MEDICARE-REASON(#I) <> ' ') 
4748       AND HIS350A1.DEP-MEDICARE-REASON(#I) = ' ' 
4749     COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4750       '| Medicare Reason is required' INTO #E-MSG 
4751     PERFORM ADD-ERROR 
4752     #ESCAPE := TRUE 
4753   END-IF 
4754   IF HIS350A1.DEP-MEDICARE-NUMBER(#I) <> ' ' 
4755       OR HIS350A1.DEP-MEDICARE-EFF-DATE-A-N(#I) <> 0 
4756       OR HIS350A1.DEP-MEDICARE-REASON(#I) <> ' ' 
4757     IF HIS350A1.DEP-MEDICARE-NUMBER(#I) = ' ' 
4758       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4759         '| Medicare Number is required' INTO #E-MSG 
4760       PERFORM ADD-ERROR 
4761       #ESCAPE := TRUE 
4762     ELSE 
4763       EXAMINE HIS350A1.DEP-MEDICARE-NUMBER(#I) FOR ' ' GIVING LENGTH #LEN 
4764       IF #LEN < 4 
4765         COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4766           '| Medicare Number is invalid' INTO #E-MSG 
4767         PERFORM ADD-ERROR 
4768       END-IF 
4769     END-IF 
4770   END-IF 
4771   IF (HIS350A1.DEP-MEDICARE-NUMBER(#I) <> ' ' 
4772       OR HIS350A1.DEP-MEDICARE-EFF-DATE-A-N(#I) <> 0 
4773       OR HIS350A1.DEP-MEDICARE-REASON(#I) <> ' ') 
4774       AND HIS350A1.DEP-MEDICARE-EFF-DATE-A-N(#I) = 0 
4775     COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4776       '| Medicare Effective Date Part A is required' INTO #E-MSG 
4777     PERFORM ADD-ERROR 
4778     #ESCAPE := TRUE 
4779   END-IF 
4780   IF HIS350A1.DEP-MEDICARE-EFF-DATE-A-N(#I) NE 0 
4781       AND (NOT(HIS350A1.DEP-MEDICARE-EFF-DATE-A-N(#I) = MASK(YYYYMMDD)) 
4782       OR HIS350A1.DEP-MEDICARE-EFF-DATE-A-N(#I) < 15820000 
4783       OR HIS350A1.DEP-MEDICARE-EFF-DATE-A-N(#I) > 26990000) 
4784     COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4785       '| Medicare Effective Date Part A ' 
4786       'End Date is invalid' INTO #E-MSG 
4787     #E-FLD := 'dep-medicare-eff-date-a-n' 
4788     PERFORM ADD-ERROR 
4789     #ESCAPE := TRUE 
4790   END-IF 
4791   IF HIS350A1.DEP-MEDICARE-EFF-DATE-B-N(#I) NE 0 
4792       AND (NOT(HIS350A1.DEP-MEDICARE-EFF-DATE-B-N(#I) = MASK(YYYYMMDD)) 
4793       OR HIS350A1.DEP-MEDICARE-EFF-DATE-B-N(#I) < 15820000 
4794       OR HIS350A1.DEP-MEDICARE-EFF-DATE-B-N(#I) > 26990000) 
4795     COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4796       '| Medicare Effective Date Part B ' 
4797       'End Date is invalid' INTO #E-MSG 
4798     #E-FLD := 'dep-medicare-eff-date-b-n' 
4799     PERFORM ADD-ERROR 
4800     #ESCAPE := TRUE 
4801   END-IF 
4802   IF HIS808A1.DEP-HLTH-EFF-DATE(#I) = '0' 
4803     HIS808A1.DEP-HLTH-EFF-DATE(#I) := ' ' 
4804   END-IF 
4805   IF HIS808A1.DEP-HLTH-EFF-DATE(#I) = MASK(YYYYMMDD) 
4806       AND HIS808A1.DEP-HLTH-EFF-DATE(#I) > '15820000' 
4807       AND HIS808A1.DEP-HLTH-EFF-DATE(#I) < '26990000' 
4808     MOVE EDITED HIS808A1.DEP-HLTH-EFF-DATE(#I) TO #WORK-D(EM=YYYYMMDD) 
4809     MOVE EDITED #WORK-D(EM=MMDDYYYY) TO HIS808A1.DEP-HLTH-EFF-DATE(#I) 
4810   END-IF 
4811   IF HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) = '0' 
4812     HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) := ' ' 
4813   END-IF 
4814   IF HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) = MASK(YYYYMMDD) 
4815       AND HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) > '15820000' 
4816       AND HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) < '26990000' 
4817     MOVE EDITED HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) TO 
4818       #WORK-D(EM=YYYYMMDD) 
4819     MOVE EDITED #WORK-D(EM=MMDDYYYY) TO 
4820       HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) 
4821     IF #WORK-D > #EFF-D 
4822       #DATE-WORK := HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) 
4823       MOVE EDITED #DATE-WORK TO #WORK-D(EM=MMDDYYYY) 
4824       MOVE EDITED #WORK-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
4825       MOVE EDITED #EFF-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
4826       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4827         '| Creditable Coverage From Date' 
4828         'cannot be later than Coverage Effective Date (' 
4829         #DISPLAY-DATE1 ')' INTO #E-MSG 
4830       #E-FLD := 'dep-prior-srvc-end-date' 
4831       PERFORM ADD-ERROR 
4832       #ESCAPE := TRUE 
4833     END-IF 
4834   ELSE /* (4814) 
4835     IF NOT(HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) = '0' OR = ' ') 
4836       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4837         '| Credible Coverage To Date is invalid' INTO #E-MSG 
4838       #E-FLD := 'dep-prior-srvc-end-date' 
4839       PERFORM ADD-ERROR 
4840       #ESCAPE := TRUE 
4841     END-IF 
4842   END-IF /* (4814) 
4843   IF HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) = '0' 
4844     HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) := ' ' 
4845   END-IF 
4846   IF HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) = MASK(YYYYMMDD) 
4847       AND HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) > '15820000' 
4848       AND HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) < '26990000' 
4849     MOVE EDITED HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) TO 
4850       #WORK-D(EM=YYYYMMDD) 
4851     MOVE EDITED #WORK-D(EM=MMDDYYYY) TO 
4852       HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) 
4853     IF HIS350A1.DEP-PRIOR-SRVC-END-DATE-N(#I) < 
4854         HIS350A1.DEP-PRIOR-SRVC-BEG-DATE-N(#I) 
4855       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4856         '| Creditable Coverage To Date is' 
4857         'required and cannot be earlier than Creditable Coverage' 
4858         'From Date' INTO #E-MSG 
4859       #E-FLD := 'dep-prior-srvc-end-date' 
4860       PERFORM ADD-ERROR 
4861       #ESCAPE := TRUE 
4862     END-IF 
4863   ELSE /* (4846) 
4864     IF NOT(HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) = '0' OR = ' ') 
4865       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4866         '| Credible Coverage From Date is invalid' INTO #E-MSG 
4867       #E-FLD := 'dep-prior-srvc-beg-date' 
4868       PERFORM ADD-ERROR 
4869       #ESCAPE := TRUE 
4870     END-IF 
4871   END-IF /* (4846) 
4872   IF HIS808A1.DEP-PRE-EX-END-DATE(#I) = '0' 
4873     HIS808A1.DEP-PRE-EX-END-DATE(#I) := ' ' 
4874   END-IF 
4875   IF HIS808A1.DEP-PRE-EX-END-DATE(#I) = MASK(YYYYMMDD) 
4876       AND HIS808A1.DEP-PRE-EX-END-DATE(#I) > '15820000' 
4877       AND HIS808A1.DEP-PRE-EX-END-DATE(#I) < '26990000' 
4878     MOVE EDITED HIS808A1.DEP-PRE-EX-END-DATE(#I) TO #WORK-D(EM=YYYYMMDD) 
4879     MOVE EDITED #WORK-D(EM=MMDDYYYY) TO HIS808A1.DEP-PRE-EX-END-DATE(#I) 
4880   END-IF 
4881   IF HIS808A1.DEP-DOB(#I) = '0' 
4882     HIS808A1.DEP-DOB(#I) := ' ' 
4883   END-IF 
4884   IF HIS808A1.DEP-DOB(#I) = MASK(YYYYMMDD) 
4885       AND HIS808A1.DEP-DOB(#I) > '15820000' 
4886       AND HIS808A1.DEP-DOB(#I) < '26990000' 
4887     MOVE EDITED HIS808A1.DEP-DOB(#I) TO #WORK-D(EM=YYYYMMDD) 
4888     MOVE EDITED #WORK-D(EM=MMDDYYYY) TO HIS808A1.DEP-DOB(#I) 
4889   ELSE 
4890     IF NOT(HIS808A1.DEP-DOB(#I) = '0' OR = ' ') 
4891       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4892         '| Date of Birth is invalid' INTO #E-MSG 
4893       #E-FLD := 'dep-dob' 
4894       PERFORM ADD-ERROR 
4895       #ESCAPE := TRUE 
4896     END-IF 
4897   END-IF 
4898 END-IF /* (4702) 
4899 END-SUBROUTINE /* (4582) yyyymmdd-to-mmddyyyy 
4900 ************************************************************************ 
4901 DEFINE SUBROUTINE MMDDYYYY-TO-YYYYMMDD 
4902 ************************************************************************ 
4903 IF HIS808A1.DATE-HIRED = MASK(MMDDYYYY) 
4904   MOVE EDITED HIS808A1.DATE-HIRED TO #WORK-D(EM=MMDDYYYY) 
4905   MOVE EDITED #WORK-D(EM=YYYYMMDD) TO HIS808A1.DATE-HIRED 
4906 END-IF 
4907 IF HIS808A1.HLTH-EFF-DATE = MASK(MMDDYYYY) 
4908   MOVE EDITED HIS808A1.HLTH-EFF-DATE TO #WORK-D(EM=MMDDYYYY) 
4909   MOVE EDITED #WORK-D(EM=YYYYMMDD) TO HIS808A1.HLTH-EFF-DATE 
4910 END-IF 
4911 IF HIS808A1.PRIOR-SRVC-BEG-DATE = MASK(MMDDYYYY) 
4912   MOVE EDITED HIS808A1.PRIOR-SRVC-BEG-DATE TO #WORK-D(EM=MMDDYYYY) 
4913   MOVE EDITED #WORK-D(EM=YYYYMMDD) TO HIS808A1.PRIOR-SRVC-BEG-DATE 
4914 END-IF 
4915 IF HIS808A1.PRIOR-SRVC-END-DATE = MASK(MMDDYYYY) 
4916   MOVE EDITED HIS808A1.PRIOR-SRVC-END-DATE TO #WORK-D(EM=MMDDYYYY) 
4917   MOVE EDITED #WORK-D(EM=YYYYMMDD) TO HIS808A1.PRIOR-SRVC-END-DATE 
4918 END-IF 
4919 IF HIS808A1.PRE-EX-END-DATE = MASK(MMDDYYYY) 
4920   MOVE EDITED HIS808A1.PRE-EX-END-DATE TO #WORK-D(EM=MMDDYYYY) 
4921   MOVE EDITED #WORK-D(EM=YYYYMMDD) TO HIS808A1.PRE-EX-END-DATE 
4922 END-IF 
4923 IF HIS808A1.DEP-HLTH-EFF-DATE(#I) = MASK(MMDDYYYY) 
4924   MOVE EDITED HIS808A1.DEP-HLTH-EFF-DATE(#I) TO #WORK-D(EM=MMDDYYYY) 
4925   MOVE EDITED #WORK-D(EM=YYYYMMDD) TO HIS808A1.DEP-HLTH-EFF-DATE(#I) 
4926 END-IF 
4927 IF HIS808A1.DEP-DOB(#I) = MASK(MMDDYYYY) 
4928   MOVE EDITED HIS808A1.DEP-DOB(#I) TO #WORK-D(EM=MMDDYYYY) 
4929   MOVE EDITED #WORK-D(EM=YYYYMMDD) TO HIS808A1.DEP-DOB(#I) 
4930 END-IF 
4931 IF HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) = MASK(MMDDYYYY) 
4932   MOVE EDITED HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) TO 
4933     #WORK-D(EM=MMDDYYYY) 
4934   MOVE EDITED #WORK-D(EM=YYYYMMDD) TO 
4935     HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) 
4936 END-IF 
4937 IF HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) = MASK(MMDDYYYY) 
4938   MOVE EDITED HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) TO 
4939     #WORK-D(EM=MMDDYYYY) 
4940   MOVE EDITED #WORK-D(EM=YYYYMMDD) TO 
4941     HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) 
4942 END-IF 
4943 IF HIS808A1.DEP-PRE-EX-END-DATE(#I) = MASK(MMDDYYYY) 
4944   MOVE EDITED HIS808A1.DEP-PRE-EX-END-DATE(#I) TO #WORK-D(EM=MMDDYYYY) 
4945   MOVE EDITED #WORK-D(EM=YYYYMMDD) TO HIS808A1.DEP-PRE-EX-END-DATE(#I) 
4946 END-IF 
4947 END-SUBROUTINE /* (4901) mmddyyyy-to-yyyymmdd 
4948 ************************************************************************ 
4949 DEFINE SUBROUTINE ADD-ERROR 
4950 ************************************************************************ 
4951 HIS350A1.HAS-ERROR := TRUE 
4952 ADD 1 TO HIS350A1.ERROR-COUNT 
4953 #J := HIS350A1.ERROR-COUNT 
4954 HIS350A1.ERROR-MESSAGE(#J) := #E-MSG 
4955 HIS350A1.ERROR-FIELDS(#J)  := #E-FLD 
4956 HIS350A1.ERROR-INDEX(#J) := #E-NDX 
4957 RESET ERROR-HANDLING-FIELDS 
4958 END-SUBROUTINE /* (4949) ADD-ERROR 
4959 ************************************************************************ 
4960 DEFINE SUBROUTINE ADD-WARNING 
4961 ************************************************************************ 
4962 HIS350A1.HAS-WARNING := TRUE 
4963 ADD 1 TO #W 
4964 HIS350A1.WARNING-MESSAGE(#W) := #W-MSG 
4965 RESET #W-MSG 
4966 END-SUBROUTINE /* (4960) ADD-warning 
4967 ************************************************************************ 
4968 DEFINE SUBROUTINE SET-EMPLOYMENT-STATUS 
4969 ************************************************************************ 
4970 IF HIS350A1.SSN-NOT-ON-FILE 
4971     AND NOT HIS350A1.DATA-FROM-SUSPENSE 
4972   ESCAPE ROUTINE 
4973 END-IF 
4974 IF #NOT-ON-FILE 
4975     or HIS350A1.DATA-FROM-SUSPENSE 
4976   DECIDE FOR FIRST CONDITION 
4977     WHEN HIS350A1.PART-TIME-SUBSCR = '1' 
4978       HIS350A1.EMPLOYMENT-STATUS := '15' 
4979     WHEN HIS350A1.PART-TIME-SUBSCR = '2' 
4980       HIS350A1.EMPLOYMENT-STATUS := '20' 
4981     WHEN HIS350A1.PART-TIME-SUBSCR = '3' 
4982       HIS350A1.EMPLOYMENT-STATUS := '25' 
4983     WHEN HIS350A1.PART-TIME-IND = 'Y' 
4984       HIS350A1.EMPLOYMENT-STATUS := 'P' 
4985     WHEN HIS350A1.PART-TIME-IND = ' ' 
4986         AND HIS350A1.PART-TIME-SUBSCR = ' ' 
4987       HIS350A1.EMPLOYMENT-STATUS := 'F' 
4988     WHEN NONE IGNORE 
4989   END-DECIDE /* (4975) 
4990 ELSE /* (4974) 
4991   DECIDE FOR FIRST CONDITION 
4992     WHEN SUBSCR-MAST.PART-TIME-IND = 'Y' 
4993       HIS350A1.EMPLOYMENT-STATUS := 'P' 
4994     WHEN SUBSCR-MAST.PART-TIME-SUBSCR = '1' 
4995       HIS350A1.EMPLOYMENT-STATUS := '15' 
4996     WHEN SUBSCR-MAST.PART-TIME-SUBSCR = '2' 
4997       HIS350A1.EMPLOYMENT-STATUS := '20' 
4998     WHEN SUBSCR-MAST.PART-TIME-SUBSCR = '3' 
4999       HIS350A1.EMPLOYMENT-STATUS := '25' 
5000     WHEN SUBSCR-MAST.PART-TIME-IND NE 'Y' 
5001       HIS350A1.EMPLOYMENT-STATUS := 'F' 
5002     WHEN NONE IGNORE 
5003   END-DECIDE /* (4991) 
5004 END-IF /* (4974) 
5005 END-SUBROUTINE /* (4968) SET-EMPLOYMENT-STATUS 
5006 ************************************************************************ 
5007 DEFINE SUBROUTINE SET-EMPLOYMENT-STATUS-OPTIONS 
5008 ************************************************************************ 
5009 IF HIS350A1.TRXN-TYPE = 'EN' 
5010   COMPRESS 'A1' HIS350A1.EMPLOYER-GROUP-ID INTO #TABLE-KEY LEAVING NO 
5011   FTM1. FIND TABLE-MAST WITH SP-TBL-GROUP-KEY = #TABLE-KEY 
5012     IF NO RECORD FOUND 
5013       COMPRESS 'Employer Group ID (' HIS350A1.EMPLOYER-GROUP-ID 
5014         ') is invalid' INTO #E-MSG 
5015       #E-FLD := 'EMPLOYER-GROUP-ID' 
5016       PERFORM ADD-ERROR 
5017       ESCAPE ROUTINE 
5018     END-NOREC 
5019     #GRP-FOUND := TRUE 
5020     #I := 1 
5021     HIS350A1.EMPLOYMENT-STATUS-OPTIONS(#I) := '1' 
5022     ADD 1 TO #I 
5023     IF TBL-PT-TEACHER = 'Y' 
5024       HIS350A1.EMPLOYMENT-STATUS-OPTIONS(#I) := '3' 
5025       ADD 1 TO #I 
5026       HIS350A1.EMPLOYMENT-STATUS-OPTIONS(#I) := '4' 
5027       ADD 1 TO #I 
5028       HIS350A1.EMPLOYMENT-STATUS-OPTIONS(#I) := '5' 
5029     END-IF 
5030     IF TBL-GROUP-COVERAGE-IND(*) = 'R' 
5031       HIS350A1.EMPLOYMENT-STATUS-OPTIONS(#I) := '2' 
5032       ADD 1 TO #I 
5033     END-IF 
5034     PERFORM CHECK-TABLE-FILE 
5035   END-FIND /* (5011) ftm1. TABLE-MAST 
5036 END-IF /* (5009) 
5037 END-SUBROUTINE /* (5007) SET-EMPLOYMENT-STATUS-OPTIONS 
5038 ************************************************************************ 
5039 DEFINE SUBROUTINE CHECK-TABLE-FILE 
5040 ************************************************************************ 
5041 IF NOT(HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
5042     OR HIS350A1.FLEX-BENEFITS-IND = 'Y' 
5043   COMPRESS 'A1' HIS350A1.EMPLOYER-GROUP-ID INTO #TABLE-KEY LEAVING NO 
5044   FTM2. FIND TABLE-MAST WITH SP-TBL-GROUP-KEY = #TABLE-KEY 
5045     IF NO 
5046       ESCAPE BOTTOM(FTM2.) 
5047     END-NOREC 
5048     IF HIS350A1.EMPLOYMENT-STATUS = '15' OR = '20' OR = '25' 
5049         AND TABLE-MAST.TBL-PT-TEACHER NE 'Y' 
5050       COMPRESS 'Part-time teachers not allowed for group' 
5051         HIS350A1.EMPLOYER-GROUP-ID INTO #E-MSG 
5052       #E-FLD := 'EMPLOYMENT-STATUS' 
5053       PERFORM ADD-ERROR 
5054     END-IF 
5055     IF HIS350A1.EMPLOYMENT-STATUS = 'P' 
5056         AND TBL-GROUP-COVERAGE-IND(4) NE 'R' 
5057       COMPRESS '20 hour employee not allowed for group' 
5058         HIS350A1.EMPLOYER-GROUP-ID INTO #E-MSG 
5059       #E-FLD := 'EMPLOYMENT-STATUS' 
5060       PERFORM ADD-ERROR 
5061     END-IF 
5062     IF HIS350A1.FLEX-BENEFITS-IND = 'Y' 
5063         AND TABLE-MAST.TBL-GROUP-COVERAGE-IND (3) NE 'M' 
5064       COMPRESS 'Group ' HIS350A1.EMPLOYER-GROUP-ID 
5065         ' does not have Money Plus available' INTO #E-MSG 
5066       #E-FLD := 'FLEX-BENEFITS-IND' 
5067       PERFORM ADD-ERROR 
5068     END-IF 
5069   END-FIND /* (5044) ftm2. TABLE-MAST 
5070 END-IF /* (5041) 
5071 END-SUBROUTINE /* (5039) check-table-file 
5072 ************************************************************************ 
5073 DEFINE SUBROUTINE SET-PART-TIME-IND 
5074 ************************************************************************ 
5075 IF HIS350A1.EMPLOYMENT-STATUS NE ' ' 
5076     AND HIS350A1.TRXN-TYPE = 'EN' 
5077   DECIDE ON FIRST VALUE OF HIS350A1.EMPLOYMENT-STATUS 
5078     VALUE 'F' 
5079       HIS350A1.PART-TIME-IND := ' ' 
5080       HIS350A1.PART-TIME-SUBSCR := ' ' 
5081     VALUE 'P'   HIS350A1.PART-TIME-IND := 'Y' 
5082     VALUE '15'  HIS350A1.PART-TIME-SUBSCR := '1' 
5083     VALUE '20'  HIS350A1.PART-TIME-SUBSCR := '2' 
5084     VALUE '25'  HIS350A1.PART-TIME-SUBSCR := '3' 
5085     NONE VALUE  IGNORE 
5086   END-DECIDE 
5087 END-IF 
5088 END-SUBROUTINE /* (5073) SET-PART-TIME-IND 
5089 *********************************************************************** 
5090 DEFINE SUBROUTINE SUPPORTING-DOC 
5091 *********************************************************************** 
5092 DECIDE ON FIRST VALUE OF HIS350A1.CHANGE-REASON 
5093   VALUE 'CM' 
5094     #DOC-TYPE := 'CL' 
5095     PERFORM ADD-SUPPORTING-DOC 
5096   VALUE 'AD' 
5097     #DOC-TYPE := 'AD' 
5098     PERFORM ADD-SUPPORTING-DOC 
5099 * VALUE 'CU' /* gsd20070202b start 
5100 *   #DOC-TYPE := 'CU' 
5101 *   PERFORM ADD-SUPPORTING-DOC /* gsd20070202b end 
5102   VALUE 'DV' 
5103     #DOC-TYPE := 'DD' 
5104     PERFORM ADD-SUPPORTING-DOC 
5105   VALUE 'SE' 
5106     #DOC-TYPE := 'SS' 
5107     PERFORM ADD-SUPPORTING-DOC 
5108   VALUE 'GO' 
5109     #DOC-TYPE := 'GO' 
5110     PERFORM ADD-SUPPORTING-DOC 
5111   VALUE 'LO' 
5112     #DOC-TYPE := 'LO' 
5113     PERFORM ADD-SUPPORTING-DOC 
5114   VALUE 'CO', 'SO' 
5115     #DOC-TYPE := 'CO' 
5116     PERFORM ADD-SUPPORTING-DOC 
5117   VALUE 'CE' 
5118     IF HIS350A1.CHANGE-REASON-EXT = 'FT' 
5119       #DOC-TYPE := 'SC' 
5120       PERFORM ADD-SUPPORTING-DOC 
5121     ELSE 
5122       IF HIS350A1.CHANGE-REASON-EXT = 'AN' 
5123         #DOC-TYPE := 'CD' 
5124         PERFORM ADD-SUPPORTING-DOC 
5125       ELSE 
5126         IF HIS350A1.CHANGE-REASON-EXT = 'US' 
5127           #DOC-TYPE := 'VI' 
5128           PERFORM ADD-SUPPORTING-DOC 
5129         else /* gsd20070209a start 
5130           if his350a1.change-reason-ext = 'HH' or = 'US' 
5131 **  removed tricare dependent code issue 1062  mws20080526 
5132 **          IF HIS350A1.HLTH-PLAN-CATEGORY = MASK('HT'.) /* TriCare 
5133 **            #age1 := 21 
5134 **            #age2 := 23 
5135 **          else 
5136             #age1 := 19 
5137             #age2 := 24 
5138 **          end-if /* (5131) 
5139             for #i 1 15 
5140               if his350a1.dep-new-add-pending(#i) 
5141                 #DEP-AGE := (HIS350A1.EFFECTIVE-DATE-N - 
5142                   HIS350A1.DEP-DATE-OF-BIRTH-N(#I)) / 10000 
5143                 if #dep-age ge #age1 
5144                     and #dep-age le #age2 
5145                   #doc-type := 'SC' 
5146                   perform add-supporting-doc 
5147                   escape bottom 
5148                 end-if /* (5143) 
5149               end-if /* (5140) 
5150             end-for /* (5139) #i 
5151           end-if /* (5130) 
5152         END-IF 
5153       END-IF 
5154     END-IF 
5155   VALUE 'SL' 
5156     IF HIS350A1.CHANGE-REASON-EXT = 'AS' 
5157       #DOC-TYPE := 'TS' 
5158       PERFORM ADD-SUPPORTING-DOC 
5159     END-IF 
5160   VALUE 'OL' 
5161     IF HIS350A1.CHANGE-REASON-EXT = 'AM' 
5162       #DOC-TYPE := 'TH' 
5163       PERFORM ADD-SUPPORTING-DOC 
5164     END-IF 
5165   VALUE 'OP' 
5166     #DOC-TYPE := 'HM' 
5167     PERFORM ADD-SUPPORTING-DOC 
5168   VALUE 'DL' 
5169     IF HIS350A1.CHANGE-REASON-EXT = 'AM' 
5170       #DOC-TYPE := 'TH' 
5171       PERFORM ADD-SUPPORTING-DOC 
5172     END-IF 
5173   VALUE 'CC' 
5174     #DOC-TYPE := 'CC' 
5175     PERFORM ADD-SUPPORTING-DOC 
5176   value 'OE'                                    /* gsd20070925b start 
5177     for #i 1 15 
5178       if his350a1.dep-new-add-pending(#i) 
5179         #DEP-AGE := (HIS350A1.EFFECTIVE-DATE-N - 
5180           HIS350A1.DEP-DATE-OF-BIRTH-N(#I)) / 10000 
5181         if #dep-age ge 19 
5182             and #dep-age le 24 
5183           #doc-type := 'SC' 
5184           perform add-supporting-doc 
5185           escape bottom 
5186         end-if 
5187       end-if 
5188     end-for                                     /* gsd20070925b end 
5189   NONE IGNORE 
5190 END-DECIDE /* (5092) 
5191 END-SUBROUTINE /* (5090) supporting-doc 
5192 *********************************************************************** 
5193 DEFINE SUBROUTINE ADD-SUPPORTING-DOC 
5194 *********************************************************************** 
5195 F9. FOR #DOC 1 35 
5196   IF HIS350A1.SUPPORTING-DOC-TYPE(#DOC) = ' ' 
5197     ESCAPE BOTTOM(F9.) 
5198   ELSE 
5199     IF HIS350A1.SUPPORTING-DOC-TYPE(#DOC) = #DOC-TYPE 
5200         OR (#DOC-TYPE = 'AC' AND HIS350A1.SUPPORTING-DOC-TYPE(1) = 'AD') 
5201         OR (#DOC-TYPE = 'DS' AND HIS350A1.SUPPORTING-DOC-TYPE(1) = 'DD') 
5202 /* gsd20070202b start 
5203 *       OR (#DOC-TYPE = 'OC' AND HIS350A1.SUPPORTING-DOC-TYPE(1) = 'CU') 
5204 /* gsd20070202b end 
5205         OR (#DOC-TYPE = 'FT' OR = 'FN' 
5206         AND HIS350A1.SUPPORTING-DOC-TYPE(#doc) = 'SC' OR = 'CD') 
5207 /* MWS20080228 
5208         OR (#DOC-TYPE = 'SC' OR = 'CD' 
5209         AND HIS350A1.SUPPORTING-DOC-TYPE(#doc) = 'FN' OR = 'FT') 
5210       #SKIP := TRUE 
5211       ESCAPE BOTTOM(F9.) 
5212     END-IF 
5213   END-IF 
5214 END-FOR /* f9. (5195) 
5215 IF NOT #SKIP 
5216   HIS350A1.SUPPORTING-DOC-TYPE(#DOC) := #DOC-TYPE 
5217 END-IF 
5218 RESET #DOC-TYPE #SKIP 
5219 END-SUBROUTINE /* (5193) add-supporting-doc 
5220 *********************************************************************** 
5221 DEFINE SUBROUTINE CHECK-SUPP-DOC 
5222 *********************************************************************** 
5223 DECIDE FOR EVERY CONDITION /* supporting documentation 
5224   WHEN #DEP-RELATION = MASK(.'1B') /* Former Spouse 
5225 *     AND HIS350A1.ACTION = 'EN' 
5226 *   #DOC-TYPE := 'SO' 
5227 *   PERFORM ADD-SUPPORTING-DOC 
5228 /* gsd20070816a start 
5229     find (1) dep-supp-doc with dep-ssn = his350a1.dep-ssn(#i) 
5230         where dep-supp-doc.dep-subscriber-ssn = his350a1.ssn 
5231     end-find 
5232     if (dep-supp-doc.dep-relation ne mask(.'1B') /* gsd20080921 start 
5233         or HIS350A1.ACTION = 'EN') 
5234         and (his350a1.dep-hlth-pending-st(#i) = 'A1' 
5235         or (his350a1.dep-hlth-status(#i) = 'A1' 
5236         and his350a1.dep-hlth-pending-st(#i) = ' ')) 
5237         and (his350a1.dep-dntl-pending-st(#i) = 'A1' 
5238         or (his350a1.dep-dntl-status(#i) = 'A1' 
5239         and his350a1.dep-dntl-pending-st(#i) = ' ')) 
5240         and (his350a1.dep-ols-pending-st(#i) = 'A1' 
5241         or (his350a1.dep-ols-status(#i) = 'A1' 
5242         and his350a1.dep-ols-pending-st(#i) = ' ')) /* gsd20070921 end 
5243       #DOC-TYPE := 'SO' 
5244       PERFORM ADD-SUPPORTING-DOC 
5245     end-if 
5246 /* gsd20070816a end 
5247 * WHEN #DEP-RELATION = MASK(.'2C') /* Natural Child /* gsd20070202b start 
5248 *     AND HIS350A1.CHANGE-REASON NE 'CO' 
5249 *     AND HIS350A1.LAST-NAME <> HIS350A1.DEP-LAST-NAME(#I) 
5250 *     and HIS350A1.DEP-RELATION(#I) ne MASK(.'1'..) /* Not spouse 
5251 *   #DOC-TYPE := 'NC' 
5252 *   PERFORM ADD-SUPPORTING-DOC 
5253 * WHEN #DEP-RELATION = MASK(.'2F') /* Step Child 
5254 *   #DOC-TYPE := 'ST' 
5255 *   PERFORM ADD-SUPPORTING-DOC /* gsd20070202b end 
5256   WHEN #DEP-RELATION = MASK(.'2D') /* Adopted Child 
5257     if his350a1.change-reason = 'AR' or = 'BE' /*mws20080129 
5258       ignore 
5259     ELSE 
5260       #DOC-TYPE := 'AC' 
5261       PERFORM ADD-SUPPORTING-DOC 
5262     END-IF 
5263   WHEN #DEP-RELATION = MASK(.'2E') /* Temporary Custody 
5264     #DOC-TYPE := 'TC' 
5265     PERFORM ADD-SUPPORTING-DOC 
5266   WHEN #DEP-RELATION = MASK(.'2G') /* Foster Child 
5267     #DOC-TYPE := 'FC' 
5268     PERFORM ADD-SUPPORTING-DOC 
5269   WHEN #DEP-RELATION = MASK(.'2H') /* Other /* gsd20070202b start 
5270     #DOC-TYPE := 'OC' 
5271     PERFORM ADD-SUPPORTING-DOC/* gsd20070202b end 
5272   WHEN #DEP-ELIGIBILITY = MASK('4'.) /* Perminate Incapacitated Child 
5273     #DOC-TYPE := 'PI' 
5274     PERFORM ADD-SUPPORTING-DOC 
5275   WHEN #DEP-ELIGIBILITY = MASK('3'.) /* Tempory Incapacitated Child 
5276     #DOC-TYPE := 'TI' 
5277     PERFORM ADD-SUPPORTING-DOC 
5278   WHEN #DEP-ELIGIBILITY = MASK('2'.) /* Full time Studend under 25 
5279       and #student-cert-req = TRUE           /* gsd20070924a 
5280 **    and #no-student-cert-req = FALSE          /* gsd20070924a 
5281 **    and #orig-dep-eligibility = mask('2'.)  /* gsd20070913a 
5282     IF HIS350A1.HLTH-PLAN-CATEGORY = MASK('HT'.) /* TriCare 
5283       #DOC-TYPE := 'FT' 
5284       examine his350a1.supporting-doc-type(*) for 'FN' 
5285         giving index #doc 
5286       if #doc > 0 
5287         his350a1.supporting-doc-type(#doc) := 'FT' 
5288       else 
5289         PERFORM ADD-SUPPORTING-DOC 
5290       end-if 
5291     END-IF 
5292 /* gsd20070516a start 
5293     #DEP-AGE := (HIS350A1.EFFECTIVE-DATE-N - 
5294       HIS350A1.DEP-DATE-OF-BIRTH-N(#I)) / 10000 
5295     if (#dep-age > 18 and #dep-age < 22 
5296         and not(HIS350A1.HLTH-PLAN-CATEGORY = MASK('HT'.))) 
5297       IF NOT(HIS350A1.HLTH-PLAN-CATEGORY = MASK('HT'.)) /* Not TriCare 
5298         #DOC-TYPE := 'FN' 
5299         examine his350a1.supporting-doc-type(*) for 'FT' 
5300           giving index #doc 
5301         if #doc > 0 
5302           his350a1.supporting-doc-type(#doc) := 'FN' 
5303         else 
5304           PERFORM ADD-SUPPORTING-DOC 
5305         end-if 
5306       END-IF 
5307     end-if 
5308 /* gsd20050516a end 
5309   WHEN NONE  IGNORE 
5310 END-DECIDE /* (5260) 
5311 RESET #DOC-TYPE 
5312 END-SUBROUTINE /* (5221) check-supp-doc 
5313 *********************************************************************** 
5314 DEFINE SUBROUTINE CHECK-FOR-DECEASED 
5315 *********************************************************************** 
5316 DECIDE FOR FIRST CONDITION 
5317   WHEN SUBSCR-MAST.DL-STATUS = 'T1' 
5318       AND HIS350A1.DL-STATUS = 'A1' 
5319     #TYPE := 'Dependent Life (child)' 
5320     #E-FLD := 'DL-PLAN-CATEGORY' 
5321   WHEN SUBSCR-MAST.OLS-STATUS = 'T1' 
5322       AND HIS350A1.OLS-STATUS = 'A1' 
5323     #TYPE := 'Dependent Life (spouse)' 
5324     #E-FLD := 'OLS-PLAN-CATEGORY' 
5325   WHEN ANY 
5326     PERFORM CONFIRM-DECEASED 
5327     IF #DECEASED 
5328       IGNORE 
5329     ELSE 
5330       COMPRESS 'You are activating a' #TYPE 
5331         'terminated due to death.  Contact EIP if incorrect.' 
5332         INTO #E-MSG 
5333       PERFORM ADD-ERROR 
5334     END-IF 
5335   WHEN NONE IGNORE 
5336 END-DECIDE /* (5288) 
5337 END-SUBROUTINE /* (5287) check-for-deceased 
5338 *********************************************************************** 
5339 DEFINE SUBROUTINE CONFIRM-DECEASED 
5340 *********************************************************************** 
5341 FOR #I 1 15 
5342   IF HIS350A1.DEP-RELATION(#I) = MASK(.'2'..) 
5343       AND HIS350A1.DEP-DL-STATUS(#I) <> 'T1' 
5344     #DECEASED := FALSE 
5345     ESCAPE BOTTOM 
5346   ELSE 
5347     #DECEASED := TRUE 
5348   END-IF 
5349 END-FOR /* (5341) #i 
5350 IF #DECEASED 
5351   FD2. FIND DEPEND WITH DEP-SUBSCRIBER-SSN = HIS350A1.SSN 
5352     IF NO RECORD 
5353       ESCAPE BOTTOM(FD2.) 
5354     END-NOREC 
5355     IF DEPEND.DEP-RELATION = MASK(.'2'..) 
5356         AND DEPEND.DEP-DL-STATUS <> 'T1' 
5357       #DECEASED := FALSE 
5358     ELSE 
5359       #DECEASED := TRUE 
5360     END-IF 
5361   END-FIND /* (5351) fd2. depend 
5362 END-IF /* (5350) 
5363 END-SUBROUTINE /* (5339) confirm-deceased 
5364 *********************************************************************** 
5365 DEFINE SUBROUTINE PRE-LOAD-TRANSFER-COVERAGES 
5366 *********************************************************************** 
5367 #EFF-A := HIS350A1.EFFECTIVE-DATE-N 
5368 MOVE EDITED #EFF-A TO #EFF-D(EM=YYYYMMDD) 
5369 DECIDE FOR EVERY CONDITION 
5370   WHEN #EFF-D = SUBSCR-MAST.HLTH-EFF-DATE 
5371       AND HIS350A1.OTHER-HLTH-INS NE '+' /* Only run on first pass 
5372     HIS350A1.HLTH-STATUS := 'A1' 
5373     MOVE EDITED SUBSCR-MAST.HLTH-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5374     HIS350A1.HLTH-EFF-DATE-N := #WORK-N 
5375     IF HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
5376       HIS350A1.SL-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
5377       HIS350A1.LTD-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
5378     END-IF 
5379   WHEN #EFF-D = SUBSCR-MAST.HLTH-EFF-DATE 
5380       AND HIS350A1.HLTH-STATUS = 'A1' 
5381     #PLAN-CAT := SUBSCR-MAST.HLTH-PLAN-CATEGORY 
5382     #NEW-PLAN-CAT := HIS350A1.HLTH-PLAN-CATEGORY 
5383     IF #PLAN NE #NEW-PLAN 
5384       #W-MSG := 'Health Plan may change during a transfer ' 
5385         -'but Category must remain the same' 
5386       PERFORM ADD-WARNING 
5387     END-IF 
5388     IF #CAT NE #NEW-CAT 
5389       #E-MSG := 'Health Category cannot be changed during a transfer' 
5390       PERFORM ADD-ERROR 
5391     END-IF 
5392   when #EFF-D = SUBSCR-MAST.HLTH-EFF-DATE 
5393       and SUBSCR-MAST.HLTH-status = mask('T'.) 
5394       and his350a1.hlth-status ne 'A1' 
5395       and his350a1.subscr-transfer ne ' ' 
5396     #E-MSG := 'Health status cannot change to refused during a transfer' 
5397     PERFORM ADD-ERROR 
5398   WHEN HIS350A1.SUBSCR-TRANSFER NE 'A' 
5399       and HIS350A1.TRXN-TYPE = 'EN' 
5400       AND #EFF-D NE SUBSCR-MAST.HLTH-EFF-DATE 
5401     HIS350A1.HLTH-STATUS := SUBSCR-MAST.HLTH-STATUS 
5402     IF HIS350A1.HLTH-STATUS = ' ' 
5403       HIS350A1.HLTH-STATUS := 'T4' 
5404       HIS350A1.HLTH-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
5405       IF HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
5406         HIS350A1.SL-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
5407         HIS350A1.LTD-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
5408       END-IF 
5409     ELSE 
5410       MOVE EDITED SUBSCR-MAST.HLTH-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5411       HIS350A1.HLTH-EFF-DATE-N := #WORK-N 
5412       IF HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
5413         HIS350A1.SL-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
5414         HIS350A1.LTD-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
5415       END-IF 
5416     END-IF 
5417   WHEN HIS350A1.SUBSCR-TRANSFER = 'A' 
5418     MOVE EDITED SUBSCR-MAST.HLTH-EFF-DATE(EM=MMDD) 
5419       TO #ORIG-MMDD 
5420     #NEW-DATE := HIS350A1.HLTH-EFF-DATE-N 
5421     IF #ORIG-MMDD = '0601' OR = '0701' OR = '0801' 
5422         AND #NEW-MMDD = '0701' OR = '0801' OR = '0901' 
5423       HIS350A1.HLTH-STATUS := 'A1' 
5424     ELSE 
5425       HIS350A1.HLTH-STATUS := SUBSCR-MAST.HLTH-STATUS 
5426     END-IF 
5427   WHEN #EFF-D = SUBSCR-MAST.DNTL-EFF-DATE 
5428       OR (#ORIG-MMDD = '0601' OR = '0701' OR = '0801' 
5429       AND #NEW-MMDD = '0701' OR = '0801' OR = '0901') 
5430     HIS350A1.DNTL-STATUS := 'A1' 
5431     MOVE EDITED SUBSCR-MAST.DNTL-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5432     HIS350A1.DNTL-EFF-DATE-N := #WORK-N 
5433   WHEN HIS350A1.SUBSCR-TRANSFER NE 'A' 
5434       AND #EFF-D NE SUBSCR-MAST.DNTL-EFF-DATE 
5435     HIS350A1.DNTL-STATUS := SUBSCR-MAST.DNTL-STATUS 
5436     IF HIS350A1.DNTL-STATUS = ' ' 
5437       HIS350A1.DNTL-STATUS := 'T4' 
5438       HIS350A1.DNTL-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
5439     ELSE 
5440       MOVE EDITED SUBSCR-MAST.DNTL-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5441       HIS350A1.DNTL-EFF-DATE-N := #WORK-N 
5442     END-IF 
5443   WHEN HIS350A1.SUBSCR-TRANSFER = 'A' 
5444     MOVE EDITED SUBSCR-MAST.DNTL-EFF-DATE(EM=MMDD) 
5445       TO #ORIG-MMDD 
5446     #NEW-DATE := HIS350A1.DNTL-EFF-DATE-N 
5447     IF #ORIG-MMDD = '0601' OR = '0701' OR = '0801' 
5448         AND #NEW-MMDD = '0701' OR = '0801' OR = '0901' 
5449       HIS350A1.DNTL-STATUS := 'A1' 
5450     ELSE 
5451       HIS350A1.DNTL-STATUS := 'T4' 
5452     END-IF 
5453   WHEN #EFF-D = SUBSCR-MAST.DNTP-EFF-DATE 
5454     HIS350A1.DNTP-STATUS := 'A1' 
5455     MOVE EDITED SUBSCR-MAST.DNTP-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5456     HIS350A1.DNTP-EFF-DATE-N := #WORK-N 
5457   WHEN #EFF-D NE SUBSCR-MAST.DNTP-EFF-DATE 
5458       AND HIS350A1.OTHER-HLTH-INS NE '+' /* Only run on first pass 
5459     HIS350A1.DNTP-STATUS := SUBSCR-MAST.DNTP-STATUS 
5460     MOVE EDITED SUBSCR-MAST.DNTP-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5461     HIS350A1.DNTP-EFF-DATE-N := #WORK-N 
5462   WHEN HIS350A1.SUBSCR-TRANSFER = 'A' 
5463     MOVE EDITED SUBSCR-MAST.DNTP-EFF-DATE(EM=MMDD) 
5464       TO #ORIG-MMDD 
5465     #NEW-DATE := HIS350A1.DNTP-EFF-DATE-N 
5466     IF #ORIG-MMDD = '0601' OR = '0701' OR = '0801' 
5467         AND #NEW-MMDD = '0701' OR = '0801' OR = '0901' 
5468       HIS350A1.DNTP-STATUS := 'A1' 
5469     ELSE 
5470       HIS350A1.DNTP-STATUS := 'T4' 
5471     END-IF 
5472   WHEN #EFF-D = SUBSCR-MAST.OL-EFF-DATE 
5473     HIS350A1.OL-STATUS := 'A1' 
5474     MOVE EDITED SUBSCR-MAST.OL-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5475     HIS350A1.OL-EFF-DATE-N := #WORK-N 
5476   WHEN HIS350A1.SUBSCR-TRANSFER NE 'A' 
5477       and HIS350A1.TRXN-TYPE = 'EN' 
5478       AND #EFF-D NE SUBSCR-MAST.OL-EFF-DATE 
5479     HIS350A1.OL-STATUS := SUBSCR-MAST.OL-STATUS 
5480     IF HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
5481       IF HIS350A1.OL-STATUS = ' ' 
5482         HIS350A1.OL-STATUS := 'T4' 
5483         HIS350A1.OL-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
5484       ELSE 
5485         MOVE EDITED SUBSCR-MAST.OL-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5486         HIS350A1.OL-EFF-DATE-N := #WORK-N 
5487       END-IF 
5488     END-IF 
5489   WHEN HIS350A1.SUBSCR-TRANSFER = 'A' 
5490     MOVE EDITED SUBSCR-MAST.OL-EFF-DATE(EM=MMDD) 
5491       TO #ORIG-MMDD 
5492     #NEW-DATE := HIS350A1.OL-EFF-DATE-N 
5493     IF #ORIG-MMDD = '0601' OR = '0701' OR = '0801' 
5494         AND #NEW-MMDD = '0701' OR = '0801' OR = '0901' 
5495       HIS350A1.OL-STATUS := 'A1' 
5496     ELSE 
5497       HIS350A1.OL-STATUS := 'T4' 
5498     END-IF 
5499   WHEN #EFF-D = SUBSCR-MAST.DL-EFF-DATE 
5500     HIS350A1.DL-STATUS := 'A1' 
5501     MOVE EDITED SUBSCR-MAST.DL-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5502     HIS350A1.DL-EFF-DATE-N := #WORK-N 
5503   WHEN HIS350A1.SUBSCR-TRANSFER NE 'A' 
5504       and HIS350A1.TRXN-TYPE = 'EN' 
5505       AND #EFF-D NE SUBSCR-MAST.DL-EFF-DATE 
5506     HIS350A1.DL-STATUS := SUBSCR-MAST.DL-STATUS 
5507     IF HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
5508       IF HIS350A1.DL-STATUS = ' ' 
5509         HIS350A1.DL-STATUS := 'T4' 
5510         HIS350A1.DL-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
5511       ELSE 
5512         MOVE EDITED SUBSCR-MAST.DL-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5513         HIS350A1.DL-EFF-DATE-N := #WORK-N 
5514       END-IF 
5515     END-IF 
5516   WHEN HIS350A1.SUBSCR-TRANSFER = 'A' 
5517     MOVE EDITED SUBSCR-MAST.DL-EFF-DATE(EM=MMDD) 
5518       TO #ORIG-MMDD 
5519     #NEW-DATE := HIS350A1.DL-EFF-DATE-N 
5520     IF #ORIG-MMDD = '0601' OR = '0701' OR = '0801' 
5521         AND #NEW-MMDD = '0701' OR = '0801' OR = '0901' 
5522       HIS350A1.DL-STATUS := 'A1' 
5523     ELSE 
5524       HIS350A1.DL-STATUS := 'T4' 
5525     END-IF 
5526   WHEN #EFF-D = SUBSCR-MAST.OLS-EFF-DATE 
5527     HIS350A1.OLS-STATUS := 'A1' 
5528     MOVE EDITED SUBSCR-MAST.OLS-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5529     HIS350A1.OLS-EFF-DATE-N := #WORK-N 
5530   WHEN HIS350A1.SUBSCR-TRANSFER NE 'A' 
5531       and HIS350A1.TRXN-TYPE = 'EN' 
5532       AND #EFF-D NE SUBSCR-MAST.OLS-EFF-DATE 
5533     HIS350A1.OLS-STATUS := SUBSCR-MAST.OLS-STATUS 
5534     IF HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
5535       IF HIS350A1.OLS-STATUS = ' ' OR = MASK('T'.) 
5536         HIS350A1.OLS-STATUS := 'T4' 
5537         HIS350A1.OLS-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
5538       ELSE 
5539         MOVE EDITED SUBSCR-MAST.OLS-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5540         HIS350A1.OLS-EFF-DATE-N := #WORK-N 
5541       END-IF 
5542     END-IF 
5543   WHEN HIS350A1.SUBSCR-TRANSFER = 'A' 
5544     MOVE EDITED SUBSCR-MAST.OLS-EFF-DATE(EM=MMDD) 
5545       TO #ORIG-MMDD 
5546     #NEW-DATE := HIS350A1.OLS-EFF-DATE-N 
5547     IF #ORIG-MMDD = '0601' OR = '0701' OR = '0801' 
5548         AND #NEW-MMDD = '0701' OR = '0801' OR = '0901' 
5549       HIS350A1.OLS-STATUS := 'A1' 
5550     ELSE 
5551       HIS350A1.OLS-STATUS := 'T4' 
5552     END-IF 
5553   WHEN #EFF-D = SUBSCR-MAST.SLTD-EFF-DATE 
5554     HIS350A1.SLTD-STATUS := 'A1' 
5555     MOVE EDITED SUBSCR-MAST.SLTD-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5556     HIS350A1.SLTD-EFF-DATE-N := #WORK-N 
5557   WHEN HIS350A1.SUBSCR-TRANSFER NE 'A' 
5558       and HIS350A1.TRXN-TYPE = 'EN' 
5559       AND #EFF-D NE SUBSCR-MAST.SLTD-EFF-DATE 
5560     HIS350A1.SLTD-STATUS := SUBSCR-MAST.SLTD-STATUS 
5561     IF HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
5562       IF HIS350A1.SLTD-STATUS = ' ' 
5563         HIS350A1.SLTD-STATUS := 'T4' 
5564         HIS350A1.SLTD-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
5565       ELSE 
5566         MOVE EDITED SUBSCR-MAST.SLTD-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5567         HIS350A1.SLTD-EFF-DATE-N := #WORK-N 
5568       END-IF 
5569     END-IF 
5570   WHEN HIS350A1.SUBSCR-TRANSFER = 'A' 
5571     MOVE EDITED SUBSCR-MAST.SLTD-EFF-DATE(EM=MMDD) 
5572       TO #ORIG-MMDD 
5573     #NEW-DATE := HIS350A1.SLTD-EFF-DATE-N 
5574     IF #ORIG-MMDD = '0601' OR = '0701' OR = '0801' 
5575         AND #NEW-MMDD = '0701' OR = '0801' OR = '0901' 
5576       HIS350A1.SLTD-STATUS := 'A1' 
5577     ELSE 
5578       HIS350A1.SLTD-STATUS := 'T4' 
5579     END-IF 
5580   WHEN NONE  IGNORE 
5581 END-DECIDE /* (5369) 
5582 IF HIS350A1.DNTP-STATUS = ' ' 
5583   HIS350A1.DNTP-STATUS := 'T4' 
5584   HIS350A1.DNTP-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
5585 END-IF 
5586 HIS350A1.OTHER-HLTH-INS := '+' /* No longer first pass 
5587 END-SUBROUTINE /* (5365) pre-load-transfer-coverages 
5588 *********************************************************************** 
5589 define subroutine get-ssn                       /* gsd20070731 
5590 *********************************************************************** 
5591 find subscr-bin with bin = his350a1.bin 
5592   his350a1.ssn := subscr-bin.ssn 
5593 end-find 
5594 end-subroutine /* (5589) get-ssn 
5595 END 
