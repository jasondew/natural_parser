0001 ************************************************************************ 
0002 ** SUBPROGRAM: HIS350N1  PGMERS: Johnson 
0003 ** DATE: June 10, 2004 
0004 ** 
0005 ** AES Enrollment Driver 
0006 ** 
0007 ************************************************************************ 
0008 ** Latest Modifications - Scheduled For Production 
0009 ** =============================================== 
0010 ** MM/DD/YY    NAME      SCAN FOR    PURPOSE 
0011 ** --------  --------  ------------  ----------------------------------- 
0012 ** 05/26/08  SAMS      mws20080526   corrected end date bug track 1062 
0013 ** 05/16/08  SAMS      20080516      corrected ols age calc for spouse 
0014 ** 03/20/08  sams      mws20080320   bug tracker 797 
0015 ** 03/05/08  nolff     ron20080305 
0016 ** 02/28/08  sams      MWS20080228   bug tracker  721 
0017 ** 02/27/08  sams      MWS20080227   ALLOW PREV DEPENDENT OF ACTIVE EMP 
0018 **                     TO BE ADDED AS A SUBSCRIBER 
0019 ** 02/26/08  sams      MWS20080226   ALLOW NEW ENROLL OF PT TO FT AND 
0020 **                                   FT TO PT TO WORK TO ALLOW ENTRY 
0021 **                                   OF COVERAGES FOR DEPENDENTS. 
0022 ** 02/26/08  sams      MWS20080226A  EIP bug tracker 723 
0023 ** 02/25/08  SAMS      MWS20080225   Commented out lines 712 thru 
0024 **                     736 to prevent requirements for student certs 
0025 **                     for all break in coverage situations. 
0026 ** 02/13/08  SAMS      mws20080213   bug tracker 705 
0027 ** 02/12/08  SAMS      mws20080212   bug tracker 704 
0028 ** 01/29/08  SAMS      mws20080129   bug tracker 671 
0029 ** 11/06/07  Dinsmore  gsd20071106c  Bug Tracker 656 
0030 ** 11/06/07  Dinsmore  gsd20071106b  Bug Tracker 655 
0031 ** 11/06/07  Dinsmore  gsd20071106a  Bug Tracker 654 
0032 ** 09/25/07  Dinsmore  gsd20070925b  Bug Tracker 617 
0033 ** 09/25/07  Dinsmore  gsd20070925a  Require SSN if over 1 year, not 2 
0034 ** 09/24/07  Dinsmore  gsd20070924a  Bug Tracker 601 
0035 ** 09/21/07  Dinsmore  gsd20070915   Bug Tracker 578 
0036 ***** MIGRATED TO PRODUCTION SEPTEMBER 17, 2007 ***** 
0037 ** 09/15/07  Dinsmore  gsd20070915   Improve performance 
0038 ** 09/13/07  Dinsmore  60020070913a  Bug tracker 511 
0039 ** 09/12/07  Dinsmore  gsd20070912a  Bug tracker 465 
0040 ** 09/11/07  Dinsmore  gsd20070911b  Bug tracker 506 
0041 ** 09/11/07  Dinsmore  gsd20070911a  Req Student Cert when changing from 
0042 **                                   Under 19 to Full-time Student 
0043 ** 09/10/07  Dinsmore  gsd20070910a  Bug Tracker 170 
0044 ** 09/07/07  Dinsmore  gsd20070907a  Req Creditable Coverage supp doc 
0045 ** 09/05/07  Dinsmore  gsd20070905a  If module(5) = 'SUBSCR', change 
0046 **                                   suspense-code to 'S' 
0047 ** 08/31/07  Dinsmore  gsd20070831b  Bug Tracker 170 
0048 ** 08/31/07  Dinsmore  gsd20070831a  Fix covered deps notification 
0049 ** 08/30/07  Dinsmore  gsd20070830b  Change Plan-Cat to Plan 
0050 ** 08/30/07  Dinsmore  gsd20070830a  Stop state emp dep from hlth & dntl 
0051 ** 08/20/07  Dinsmore  gsd20070820a  Increase OL from 30 to 50 
0052 ** 08/16/07  Dinsmore  gsd20070816a  Require supp doc for former spouses 
0053 ** 08/14/07  Dinsmore  gsd20070814a  No pre-ex for adopted children 
0054 ** 08/06/07  Dinsmore  gsd20070806   Remove periods from suffix 
0055 ** 07/31/07  Dinsmore  gsd20070731   Allow GET by BIN 
0056 ** 05/16/07  Dinsmore  gsd20070516a  EIP Bug Tracker Issue 20 
0057 **                                   1 mo break requires Student Cert 
0058 ** 03/21/07  Dinsmore  gsd20070321a  Allow for BEN-SEQ-NUM(*) 
0059 ** 02/13/07  Dinsmore  gsd20070213b  EIP Bug Tracker Issue 19 
0060 **         **commented out**         SLTD Waiver should not cancel 
0061 ** 02/09/07  Dinsmore  gsd20070209a  EIP Bug Tracker Issue 32 
0062 **                                   Add Stdnt Cert Supp Doc CE-HH/US 
0063 ** 02/02/07  Dinsmore  gsd20070202b  EIP Bug Tracker Issue 50 
0064 **                                   Remove Custody form 
0065 ** 02/02/07  Dinsmore  gsd20070202a  EIP Bug Tracker Issue 34 
0066 **                                   Remove Diff Last Name form 
0067 ** 12/01/06  Dinsmore  gsd20061201a  On Bene Chg, only do enrollee and 
0068 **                                   bene edits 
0069 ************************************************************************ 
0070 DEFINE DATA 
0071 PARAMETER USING his650A1  
0072 LOCAL USING HIS001L3 /* GENERAL-WORK-FIELDS 
0073 lOCAL USING HTB100L0 /* TABLE-MAST VIEW OF HIS-TABLE 
0074 LOCAL USING HIS100L0 /* SUBSCR-MAST VIEW OF HIS-SUBSCR-MASTER 
0075 LOCAL USING HIS120L0 /* DEPEND-MAST VIEW OF HIS-DEPEND-MASTER 
0076 LOCAL USING mws355a1 /* subscriber module  
0077 LOCAL USING HIS356A1 /* coverage module 
0078 LOCAL USING HIS357A1 /* dependent module 
0079 LOCAL USING HIS358A1 /* beneficiary module 
0080 LOCAL USING mws369A1 /* suspense object pda  
0081 LOCAL USING HTB808A1 /* RETREIVE PLAN BEG AND END DATES 
0082 LOCAL USING HIS369A2 /* suspense object pda-r 
0083 LOCAL USING HIS390a1 /* subscr-master hold 
0084 LOCAL USING mws350A2 /* enrollment date conversion  
0085 LOCAL USING HIS808A1 /* CALCULATE PRE-EX-DATE for Subscriber 
0086 LOCAL USING HIS808A2 /* NOE ENTRY DEPENDENT END DATE 
0087 LOCAL USING CDAOBJ2 
0088 LOCAL USING CDPDA-M 
0089 LOCAL 
0090 1 ACT-DEPEND-MAST VIEW OF HIS-DEPEND-MASTER 
0091   2 DEP-SEQ-NUM 
0092   2 DEP-SUBSCRIBER-SSN 
0093   2 DEP-HLTH-STATUS 
0094   2 DEP-HLTH-EFF-DATE 
0095   2 DEP-HLTH-END-DATE 
0096   2 DEP-DNTL-STATUS 
0097   2 DEP-DNTL-EFF-DATE 
0098   2 DEP-DNTL-END-DATE 
0099   2 DEP-DL-STATUS 
0100   2 DEP-DL-EFF-DATE 
0101   2 DEP-DL-END-DATE 
0102   2 DEP-OLS-STATUS 
0103   2 DEP-OLS-EFF-DATE 
0104   2 DEP-OLS-END-DATE 
0105 1 SUBSCR VIEW OF HIS-SUBSCR-MASTER 
0106   2 hlth-status                                 /* gsd20070907a 
0107   2 ol-status                                   /* gsd20070927a 
0108 1 SUBSCR-PLAN-CAT VIEW OF HIS-SUBSCR-MASTER 
0109   2 HLTH-PLAN-CATEGORY 
0110 1 ACT-SUBSCR-MAST  VIEW OF HIS-SUBSCR-MASTER 
0111   2 SUBSCRIBER-TYPE 
0112   2 EMPLOYER-GROUP-ID 
0113   2 HLTH-STATUS 
0114   2 DNTL-STATUS 
0115   2 DL-STATUS 
0116   2 SL-STATUS 
0117   2 LTD-STATUS 
0118   2 OL-STATUS 
0119   2 OL-END-DATE 
0120   2 OLS-STATUS 
0121   2 SLTD-STATUS 
0122 1 DEP VIEW OF HIS-DEPEND-MASTER 
0123   2 DEP-SUBSCRIBER-SSN 
0124   2 DEP-SSN 
0125   2 DEP-LAST-NAME 
0126   2 DEP-FIRST-NAME 
0127   2 DEP-DATE-OF-BIRTH 
0128   2 DEP-ELIGIBILITY 
0129   2 dep-hlth-status 
0130   2 dep-dntl-status 
0131   2 dep-dl-status 
0132   2 dep-ols-status 
0133   2 dep-hlth-eff-date 
0134   2 dep-dntl-eff-date 
0135   2 dep-dl-eff-date 
0136   2 dep-ols-eff-date 
0137 1 DEPEND VIEW OF HIS-DEPEND-MASTER 
0138   2 DEP-SUBSCRIBER-SSN 
0139   2 DEP-RELATION 
0140   2 DEP-DL-STATUS 
0141 1 dep-supp-doc VIEW OF HIS-DEPEND-MASTER 
0142   2 dep-subscriber-ssn 
0143   2 dep-relation 
0144 1 EBS-INTERNET-SECURITY VIEW OF EBS-INTERNET-SECURITY 
0145   2 ACC-GROUPS     (99) 
0146   2 ALL-SSN-ACCESS 
0147 1 HIS-SUSPENSE-TRANS VIEW OF HIS-SUSPENSE-TRANS-TEMP 
0148   2 SSN 
0149   2 TRANSACTION-CODE 
0150   2 SUSPENSE-CODE 
0151   2 trxn-type 
0152   2 employer-group-id 
0153 1 RET-ACC-VIEW  VIEW OF HIS-RET-ACC-MSTR 
0154   2 BEG-BALANCE           (N6.2/12) 
0155   2 PAYMENTS-RECVD        (N6.2/12) 
0156   2 DISBURSEMENTS         (N6.2/12) 
0157   2 ACCTING-ADJUST        (N6.2/12) 
0158   2 TOTAL-PREMIUMS-BILLED (N6.2/12) 
0159 1 SUBSCR-ADDR VIEW OF HIS-SUBSCR-MASTER /* for Address Changes 
0160   2 LAST-NAME 
0161   2 FIRST-NAME 
0162   2 MIDDLE-INITIAL 
0163   2 SUFFIX 
0164   2 STREET-1 
0165   2 STREET-2 
0166   2 CITY 
0167   2 STATE 
0168   2 ZIP 
0169   2 ZIP-PLUS-4 
0170   2 COUNTY-CODE 
0171   2 COUNTRY-NAME 
0172   2 TELEPHONE-NUMBER 
0173 1 SUBSCR-SP VIEW OF HIS-SUBSCR-MASTER /* for LTC Spouse 
0174   2 HLTH-STATUS 
0175   2 DNTL-STATUS 
0176   2 DL-STATUS 
0177   2 OL-STATUS 
0178   2 OLS-STATUS 
0179 1 subscr-bin view of his-subscr-master 
0180   2 ssn 
0181 * 
0182 1 #ON-FILE-INDICATORS 
0183   2 #NOT-ACTIVELY-EMPLOYED (L) 
0184   2 #ACT-ON-SUBSCR-HLTH    (L) 
0185   2 #ACT-ON-SUBSCR-DNTL    (L) 
0186   2 #ACT-ON-SUBSCR-DL      (L) 
0187   2 #ACT-ON-SUBSCR-OLS     (L) 
0188   2 #ACT-ON-SUBSCR-LTC     (L) 
0189   2 #DEP-ON-LTD            (L) 
0190   2 #ON-OL-WAIVER          (L) 
0191 1 #16TH-YR                 (A4) 
0192 1 REDEFINE #16TH-YR 
0193   2 #16TH-YRN              (N4) 
0194 1 #16TH-BD                 (A8) 
0195 1 #NUM1                    (N2) 
0196 1 #NUM2                    (N2) 
0197 1 #NUM3                    (N2) 
0198 1 #TABLE-KEY               (A11) 
0199 1 #J                       (I4) 
0200 1 #x                       (I4) 
0201 1 #w                       (I2) 
0202 1 #GRP-FOUND               (L) 
0203 1 #NOT-ON-FILE             (L)   INIT <FALSE> 
0204 1 #ON-SLTD-WAIVER          (L) 
0205 1 #ON-LTC-WAIVER           (L) 
0206 1 #ON-LTC-SP-WAIVER        (L) 
0207 1 #RET-BILL-DTE            (D) 
0208 1 #BILL-YEAR               (A4) 
0209 1 REDEFINE #BILL-YEAR 
0210   2 #BILL-YEAR-N           (N4) 
0211 1 #BILL-DATE               (D) 
0212 1 #1231-DATE               (A8) /* Dec 31 of Bill Year 
0213 1 #1231-LAST-YEAR          (A8) /* Dec 31 of Year Previous to Eff Date 
0214 1 REDEFINE #1231-LAST-YEAR 
0215   2 #1231-LAST-YEAR-N      (N8) 
0216   2 REDEFINE #1231-LAST-YEAR-N 
0217     3 #1231-LAST-YEAR-YYYY (N4) 
0218     3 #1231-LAST-YEAR-MMDD (N4) 
0219 1 #BILL-MO                 (A2) 
0220 1 #MO                      (N2) 
0221 1 #MO-NAME                 (A9) 
0222 1 #FISCAL-YEAR             (A9) 
0223 1 #RET-KEY                 (A13) 
0224 1 #ACC-AMT                 (N7.2) 
0225 1 #PLAN-CAT                (A3) 
0226 1 REDEFINE #PLAN-CAT 
0227   2 #PLAN                  (A2) 
0228   2 REDEFINE #PLAN 
0229     3 #PLAN-1              (A1) 
0230     3 #PLAN-2              (A1) 
0231   2 #CAT                   (A1) 
0232 1 #DNTL-CAT                (A1) 
0233 1 #DATE-CHECK              (N8) 
0234 1 REDEFINE #DATE-CHECK 
0235   2 #YYYY                  (N4) 
0236   2 #MM                    (N2) 
0237   2 #DD                    (N2) 
0238 1 REDEFINE #DATE-CHECK                          /* gsd20070806a 
0239   2 #DATE-CHECK-A          (A8) 
0240 1 #date-check-d            (d)                  /* gsd20070806a 
0241 1 #DEPEND-STATUS 
0242   2 #SP-AGE                (P8) 
0243   2 #SAME-SEX              (L)   INIT<FALSE> 
0244   2 #SPOUSE-EXISTS         (L)   INIT<FALSE> 
0245   2 #FOUND-SPOUSE-H        (L)   INIT<FALSE> 
0246   2 #FOUND-SPOUSE-D        (L)   INIT<FALSE> 
0247   2 #FOUND-SPOUSE-OLS      (L)   INIT<FALSE> 
0248   2 #FOUND-SPOUSE-LTC      (L)   INIT<FALSE> 
0249   2 #FOUND-DEP-H           (L)   INIT<FALSE> 
0250   2 #FOUND-DEP-D           (L)   INIT<FALSE> 
0251   2 #FOUND-DEP-DL          (L)   INIT<FALSE> 
0252   2 #SPOUSE-MEDICARE       (A11) 
0253 1 #COMP-AGE                (N8) 
0254 1 #OL-AGE-GRP              (A2) 
0255 1 #MAX-OL-COVER            (N6) 
0256 1 #MAX-OLS-COVER           (N6) 
0257 1 #SPOUSE-DOB-N            (N8) 
0258 1 #DEP-SUBSCR-TYPE         (A7) 
0259 1 #DEP-REC-FOUND           (A1) 
0260 1 #DEP-FOUND-ARRAY (L/15) 
0261 1 #DEP-HLTH-EFF-DATE-N     (N8) 
0262 1 REDEFINE #DEP-HLTH-EFF-DATE-N 
0263   2 #DEP-HLTH-EFF-DATE     (A8) 
0264 1 #DEP-HLTH-END-DATE-N     (N8) 
0265 1 REDEFINE #DEP-HLTH-END-DATE-N 
0266   2 #DEP-HLTH-END-DATE     (A8) 
0267 1 #DEP-DNTL-EFF-DATE-N     (N8) 
0268 1 REDEFINE #DEP-DNTL-EFF-DATE-N 
0269   2 #DEP-DNTL-EFF-DATE     (A8) 
0270 1 #DEP-DNTL-END-DATE-N     (N8) 
0271 1 REDEFINE #DEP-DNTL-END-DATE-N 
0272   2 #DEP-DNTL-END-DATE     (A8) 
0273 1 #DEP-DL-EFF-DATE-N       (N8) 
0274 1 REDEFINE #DEP-DL-EFF-DATE-N 
0275   2 #DEP-DL-EFF-DATE       (A8) 
0276 1 #DEP-DL-END-DATE-N       (N8) 
0277 1 REDEFINE #DEP-DL-END-DATE-N 
0278   2 #DEP-DL-END-DATE       (A8) 
0279 1 #DEP-OLS-EFF-DATE-N      (N8) 
0280 1 REDEFINE #DEP-OLS-EFF-DATE-N 
0281   2 #DEP-OLS-EFF-DATE      (A8) 
0282 1 #DEP-OLS-END-DATE-N      (N8) 
0283 1 REDEFINE #DEP-OLS-END-DATE-N 
0284   2 #DEP-OLS-END-DATE      (A8) 
0285 1 #BEN-IDX                 (N2) INIT <1> 
0286 1 #WORKING-FIELDS 
0287   2 #BEN-BL-PRIM-COUNT     (N4) 
0288   2 #BEN-BL-PRIM-PERCENT   (N4) 
0289   2 #BEN-OL-PRIM-COUNT     (N4) 
0290   2 #BEN-OL-PRIM-PERCENT   (N4) 
0291   2 #COMPUTE-BL-PRIM       (L)  INIT<FALSE> 
0292   2 #COMPUTE-OL-PRIM       (L) 
0293   2 #COMPUTE-LTC-PRIM      (L) 
0294   2 #COMP-BL-PRIM-COUNT    (N4) 
0295   2 #COMP-BL-PRIM-PERCENT  (N3) 
0296   2 #COMP-OL-PRIM-COUNT    (N4) 
0297   2 #COMP-OL-PRIM-PERCENT  (N3) 
0298   2 #COMP-LTC-PRIM-COUNT   (N4) 
0299   2 #COMP-LTC-PRIM-PERCENT (N3) 
0300   2 #BEN-BL-CON-COUNT      (N4) 
0301   2 #BEN-BL-CON-PERCENT    (N4) 
0302   2 #BEN-OL-CON-COUNT      (N4) 
0303   2 #BEN-OL-CON-PERCENT    (N4) 
0304   2 #COMPUTE-BL-CON        (L) 
0305   2 #COMPUTE-OL-CON        (L) 
0306   2 #COMPUTE-LTC-CON       (L) 
0307   2 #COMP-BL-CON-COUNT     (N4) 
0308   2 #COMP-BL-CON-PERCENT   (N3) 
0309   2 #COMP-OL-CON-COUNT     (N4) 
0310   2 #COMP-OL-CON-PERCENT   (N3) 
0311   2 #COMP-LTC-CON-COUNT    (N4) 
0312   2 #COMP-LTC-CON-PERCENT  (N3) 
0313   2 #BEN-BL-PRIM-ENTERED   (L) 
0314   2 #BEN-BL-CON-ENTERED    (L) 
0315   2 #BEN-OL-PRIM-ENTERED   (L) 
0316   2 #BEN-OL-CON-ENTERED    (L) 
0317 1 #DATE-TRANSFER-A         (A8) 
0318 1 REDEFINE #DATE-TRANSFER-A 
0319   2 #DATE-TRANSFER-N       (N8) 
0320 1 #LAST-SEQ-NUM            (N2) 
0321 * 
0322 /* enrollment suspense fields 
0323 1 #NEW-SUSP-CODE           (A1) 
0324 1 #NEW-TRXN-CODE           (A2) 
0325 * 
0326 1 ERROR-HANDLING-FIELDS 
0327   2 #E-MSG                 (A100)  
0328   2 #E-FLD                 (A50) 
0329   2 #E-NDX                 (I4) 
0330 1 #W-MSG                   (A250) 
0331 * 
0332 /* New fields 
0333 1 #DT (D) 
0334 1 #6-MO-BRK        (L)  INIT <FALSE> /* 6 month for subscriber 
0335 1 #6-MO-BRK-DEP    (L)  INIT <FALSE> /* 6 month break 0or dependent 
0336 1 #ACADEMIC        (L)  INIT <FALSE> /* 
0337 1 #ALL-TERM        (L)  INIT <FALSE> 
0338 1 #ALPHA-CHECK     (A1) /* check first character of transaction-code 
0339 1 #BEG-D           (D)  /* prior-service-beg-date D format 
0340 1 #BREAK-IN-COV    (L)  INIT <FALSE> /* 
0341 1 #BREAK-IN-LTC    (L)  INIT <FALSE> /* 
0342 1 #CALC-DATE-N     (N8) /* 
0343 1 #CODE            (A10) 
0344 1 #COMP-D          (D)  /* compare-date for age checking 
0345 1 #COMP-DATE       (N8) 
0346 1 REDEFINE #COMP-DATE 
0347   2 #COMP-YYYY     (N4) 
0348   2 #COMP-MM       (N2) 
0349   2 #COMP-DD       (N2) 
0350 1 #COMP-LTC-SP-TOTAL-UNITS (N4) /* compare total ltc spouse units 
0351 1 #ORIG-LTC-SP-TOTAL-UNITS (N4) /* original total ltc spouse units 
0352 1 #COMP-LTC-TOTAL-UNITS    (N4) /* compare total ltc units 
0353 1 #ORIG-LTC-TOTAL-UNITS    (N4) /* original total ltc units 
0354 1 #DATES-MATCH     (L)  INIT <FALSE> /* 
0355 1 #DENY-DEP-DL     (L)  INIT<FALSE> 
0356 1 #DENY-DEP-LTC    (L)  INIT<FALSE> 
0357 1 #DENY-DEP-OLS    (L)  INIT<FALSE> 
0358 1 #DEP-AGE         (N3) /* age of dependent 
0359 1 #DEP-DOB-D       (D)  /* dependent date of birth 
0360 1 #DEP-DATE-OF-BIRTH-N (N8) 
0361 1 #DEP-ELIGIBILITY     (A2) 
0362 1 #DEP-NEW-ADD-PENDING (L) 
0363 1 #DEP-RELATION        (A4) 
0364 1 #orig-DEP-ELIGIBILITY     (A2)                /* gsd20070913a 
0365 1 #student-cert-req      (l)                    /* gsd20070913a 
0366 1 #DISPLAY-DATE1   (A10) 
0367 1 #DISPLAY-DATE2   (A10) 
0368 1 #DPH-DOB-A       (A8) 
0369 1 #DPH-DOB-D       (D) 
0370 1 #DPH-DOB-MMDD-A  (A4) 
0371 1 REDEFINE #DPH-DOB-MMDD-A 
0372   2 #DPH-DOB-MMDD-N(N4) 
0373 1 #SUB-DOB-A       (A8) 
0374 1 #SUB-DOB-D       (D) 
0375 1 #SUB-DOB-MMDD-A  (A4) 
0376 1 REDEFINE #SUB-DOB-MMDD-A 
0377   2 #SUB-DOB-MMDD-N(N4) 
0378 1 #DOC             (N2) 
0379 1 #DOC-COUNT       (N2) 
0380 1 #DOC-TYPE        (A2) 
0381 1 #EFF-A           (A8) /* effective date 
0382 1 REDEFINE #EFF-A 
0383   2 #EFF-YYYY-A    (A4) 
0384   2 REDEFINE #EFF-YYYY-A 
0385     3 #EFF-YYYY-N  (N4) 
0386   2 #EFF-MMDD-A    (A4) 
0387   2 REDEFINE #EFF-MMDD-A 
0388     3 #EFF-MM-N    (N2) 
0389     3 #EFF-DD-A    (A2) 
0390 1 REDEFINE #EFF-A 
0391   2 #EFF-N         (N8) /* effective date 
0392 1 #EFF-D           (D)  /* effective date 
0393 1 #EFF-DATES-MATCH (L)  INIT <FALSE> /* effective dates match 
0394 1 #END-D           (D)  /* prior-service-end-date D format 
0395 1 #ESCAPE          (L)  INIT <FALSE> 
0396 1 #G               (N2) /* index for date format changes 
0397 1 #GENDER          (A6) /* gender 
0398 1 #HIRE-DATE       (N8) 
0399 1 REDEFINE #HIRE-DATE 
0400   2 #HIRE-YYYY     (N4) 
0401   2 #HIRE-MM       (N2) 
0402   2 #HIRE-DD       (N2) 
0403 1 #HIRE-SPAN       (I2) /* # of days since hire 
0404 1 #HOLD-EFF-DATE-N (N8) /* hold effective date so it doesn't get lost 
0405 1 #HOLD-EMP-GROUP  (A7) /* hold employer-group-id so it doesn't get lost 
0406 1 #MAX-SEQ-NUM1             (N2) 
0407 1 #MAX-SEQ-NUM2             (N2) 
0408 1 #MAX-USED                 (N2) 
0409 1 #MATCH                    (L) INIT <FALSE> 
0410 1 #LAST-DEP-EFF-DATE-D      (D)  /* most recent dep effective date 
0411 1 #LAST-DEP-EFF-DATE        (N8) /* most recent dep effective date 
0412 1 REDEFINE #LAST-DEP-EFF-DATE 
0413   2 #LAST-DEP-EFF-DATE-A    (A8) 
0414 1 #LAST-EFF-DATE            (D)  /* most recent subscr effective date 
0415 1 #LAST-EFF-DATE-A          (A8) /* most recent subscr effective date 
0416 1 REDEFINE #LAST-EFF-DATE-A 
0417   2 #LAST-EFF-DATE-YYYY     (A4) 
0418   2 REDEFINE #LAST-EFF-DATE-YYYY 
0419     3 #LAST-EFF-DATE-YYYY-N (N4) 
0420   2 #LAST-EFF-DATE-MMDD     (A4) 
0421   2 REDEFINE #LAST-EFF-DATE-MMDD 
0422     3 #LAST-EFF-DATE-MM     (N2) 
0423     3 #LAST-EFF-DATE-DD     (A2) 
0424 1 REDEFINE #LAST-EFF-DATE-A 
0425   2 #LAST-EFF-DATE-N        (N8) 
0426 1 #LEN                      (N2) 
0427 1 #HLTH-SELECTED            (L)  INIT<FALSE> 
0428 1 #OL-SELECTED              (L)  INIT<FALSE> 
0429 1 #NEW-PLAN-CAT             (A3) 
0430 1 REDEFINE #NEW-PLAN-CAT 
0431   2 #NEW-PLAN               (A2) 
0432   2 REDEFINE #NEW-PLAN 
0433     3 #NEW-PLAN-1           (A1) 
0434     3 #NEW-PLAN-2           (A1) 
0435   2 #NEW-CAT                (A1) 
0436 1 #DECEASED                 (L)  /* dependent is deceased 
0437 1 #NOT-YET-BORN             (L)  /* dependent was not born before today 
0438 1 #PHONE                    (A10) 
0439 1 #PHONE-TYPE               (A5) 
0440 1 #SKIP                     (L)  INIT <FALSE> 
0441 1 #SPOUSE-SSN               (A9) 
0442 1 #TERMINATED               (L)  INIT <FALSE> /* 
0443 1 #SAME                     (L)  INIT <FALSE> 
0444 1 #TYPE                     (A23) 
0445 1 #WORK-A                   (A8) /* work area for a-format dates 
0446 1 REDEFINE #WORK-A 
0447   2 #WORK-N                 (N8) /* work area for n-format dates 
0448 1 #WORK-D                   (D)  /* work area for d-format dates 
0449 1 #NEW-DATE                 (A8) 
0450 1 REDEFINE #NEW-DATE 
0451   2 #NEW-YYYY               (A4) 
0452   2 #NEW-MMDD               (A4) 
0453 1 #ORIG-MMDD                (A4) 
0454 1 #HOLD-VAL                 (N6) 
0455 1 #COVER-TYPE               (A24) 
0456 1 #DISPLAY-NUM              (A7) 
0457 1 #DISPLAY-VALUE            (A34) 
0458 1 #Q                        (N2) 
0459 1 #NON-QUAL                 (L) INIT <FALSE> /* Non-qualifying event 
0460 1 #QUAL                     (L) INIT <FALSE> /* Qualifying event 
0461 1 #SPEC-ELIG                (L) INIT <FALSE> /* Special Eligibility 
0462 1 #OL-INCREASE              (N2) /* Maximum increase to Opt Life 
0463 1 #CURR-DATE                (N8) 
0464 1 REDEFINE #CURR-DATE 
0465   2 #CURR-YYYY              (N4) 
0466   2 #CURR-MMDD              (A4) 
0467 1 #VALIDATE-EFF-DATE-N      (N8) 
0468 1 REDEFINE #VALIDATE-EFF-DATE-N 
0469   2 #VALIDATE-EFF-YYYY      (N4) 
0470   2 #VALIDATE-EFF-MM        (N2) 
0471   2 #VALIDATE-EFF-DD        (N2) 
0472 1 #HOLD-DEP-SSN             (A9) 
0473 1 #HOLD-SUSPENSE-INFO 
0474   2 SUSPENSE-TIMESTMP       (B8) 
0475   2 SUSPENSE-HELD-ID        (A12) 
0476   2 DATA-FROM-SUSPENSE      (L) 
0477   2 SUSPENSE-MESSAGE        (A100) 
0478   2 SUSPENSE-REASON         (A2/1:75) 
0479   2 SUSPENSE-OTHER-DESC     (A40/1:10) 
0480 *                        /* Fields associated with HIS380N3 
0481 1 #DATE-FLD-N               (N8) CONST <0> 
0482 1 #DATE-FLD-A               (A8) CONST <' '> 
0483 1 #DATE-FLD-D               (D)   /* 
0484 1 #DATE-FLD-NM              (A45) /* Date field name for messaging 
0485 1 #BLANK-INDEX              (N2) 
0486 1 #SEQ-MATCH                (L)   INIT<FALSE> 
0487 * 
0488 1 #edit-for-update          (l)  init<FALSE> 
0489 1 #PT1 (N2) 
0490 1 #PT2 (A80) 
0491 1 #age1 (n2)                                    /* gsd20070207a 
0492 1 #age2 (n2)                                    /* gsd20070207a 
0493 1 #SUFFIX(A3)                                   /* gsd20070806 
0494 1 REDEFINE #SUFFIX 
0495   2 #SUFF-NAME (A1/3) 
0496 1 #p           (n1) 
0497 1 #no-transfer (l)                              /* gsd20070910a 
0498 1 #sp-med-num (a11) 
0499 1 #dep-med-num (a11) 
0500 END-DEFINE 
0501 * FORMAT (1) LS=133 PS=65 
0502 * DEFINE PRINTER (1) 
0503 * ASSIGN #PT1 = 1 
0504 * ASSIGN #PT2 = '-onb -din440001' 
0505 * CALLNAT 'HTB111N2' #PT1 #PT2 
0506 *********************************************************************** 
0507 * Error Handling 
0508 *********************************************************************** 
0509 /* 'Program' will always display HIS350N1, which may not be true, but 
0510 /* 'Error Line:' and 'Error Number:' are correct for whichever module 
0511 /* actually has the error 
0512 ON ERROR 
0513   #E-MSG := 'Error - Contact System Administrator with this info:' 
0514   PERFORM ADD-ERROR 
0515   COMPRESS 'Date:' *DATU 'Time:' *TIME INTO #E-MSG 
0516   PERFORM ADD-ERROR 
0517   COMPRESS 'Program:' *PROGRAM '~ Error Line:' *ERROR-LINE 
0518     '~ Error Number:' *ERROR-NR INTO #E-MSG 
0519   PERFORM ADD-ERROR 
0520   ESCAPE ROUTINE 
0521 END-ERROR /* (0512) 
0522 * 
0523 RESET HIS350A1.ERROR-INFO HIS350A1.MESSAGE HIS350A1.SUSPENSE-MESSAGE 
0524   HIS350A1.HAS-WARNING HIS350A1.WARNING-MESSAGE(*) 
0525   HIS350A1.CRITICAL-ERROR 
0526 * 
0527 INCLUDE mws350C1 /* translate alpha fields to upper case  
0528 * 
0529 CALLNAT 'KTB804NN' /* GET CURRENT BILL DATE FOR "ACTIVES" 
0530   #PROCESS-ERROR #BILL-DATE 
0531 * 
0532 IF HIS350A1.ACTION = 'GET' /* SLJ 
0533     AND HIS350A1.DATA-FROM-SUSPENSE 
0534   RESET HIS350A1.DATA-FROM-SUSPENSE 
0535 END-IF 
0536 * 
0537 **if his350a1.change-reason = 'SL' /* gsd20070213b start 
0538 **    and his350a1.change-reason-ext = 'CS' 
0539 **  #e-msg := 'Subscriber is in waiver status.  Unable to cancel.' 
0540 **  perform add-error 
0541 **end-if /* gsd20070213b end 
0542 * 
0543 DECIDE ON FIRST VALUE OF HIS350A1.ACTION 
0544   VALUE 'GET' 
0545     if his350a1.ssn = ' '                       /* gsd20070731 start 
0546         and his350a1.bin ne ' ' 
0547       perform get-ssn 
0548     end-if                                      /* gsd20070731 end 
0549     write 'here1'  
0550     PERFORM CHECK-SUBSCRIBER-STATUS 
0551     PERFORM SET-EMPLOYMENT-STATUS 
0552     PERFORM SET-EMPLOYMENT-STATUS-OPTIONS 
0553     IF HIS350A1.HAS-ERROR 
0554         OR HIS350A1.SSN-NOT-ON-FILE 
0555         OR HIS350A1.DATA-FROM-SUSPENSE 
0556       ESCAPE ROUTINE 
0557     END-IF 
0558     write 'here2'  
0559     PERFORM MODULE-ACTIONS 
0560     IF HIS350A1.TRXN-TYPE = 'EN' 
0561         AND (#NOT-ON-FILE 
0562         OR HIS350A1.ON-DEPEND-FILE) 
0563       HIS350A1.SUBSCRIBER-TYPE := 'AR' 
0564     END-IF 
0565 /* if trnx-type=EN, check for suspense record.  If found, 
0566 /* overlay the existing data retrieved from the modules. 
0567     PERFORM CHECK-FOR-SUSPENSE-RECORD 
0568     IF HIS350A1.TRXN-TYPE = 'EN' 
0569         AND NOT HIS350A1.DATA-FROM-SUSPENSE 
0570       RESET HIS350A1.SALARY HIS350A1.DATE-HIRED-N HIS350A1.SLTD-SALARY 
0571     END-IF 
0572 * 
0573   VALUE 'EDIT' 
0574     IF HIS350A1.DATE-HIRED-N = 0 
0575       and his350a1.subscriber-type = 'AR'  
0576       #E-MSG := 'Date of Hire is required before you can continue' 
0577       #E-FLD := 'DATE-HIRED-N' 
0578       PERFORM ADD-ERROR 
0579       ESCAPE ROUTINE immediate 
0580     end-if 
0581     IF HIS350A1.MODULE(*) = 'DEMOGRAPHIC' 
0582       PERFORM COMPUTE-EFF-DATE 
0583     END-IF 
0584     if HIS350A1.change-reason = 'AE' or = 'OE'          /*mws20080825  
0585        and his350a1.user-id = 'BINUSER'       /*mws20080825  
0586        and his350a1.subscriber-type ne 'AR'  
0587        if his350a1.subscriber-type ne 'AR'  
0588           reset his350a1.employment-status  
0589        end-if  
0590        ignore                              /*mws20080825  
0591     else                                  /*mws20080825 
0592        HIS350A1.SUBSCRIBER-TYPE := 'AR' 
0593     end-if                                /*mws20080825 
0594     PERFORM MODULE-ACTIONS 
0595     if HIS350A1.MODULE(1) = 'DEMOGRAPHIC' 
0596         and HIS350A1.MODULE(2) = 'DEPENDENT' 
0597         and HIS350A1.MODULE(3) = 'COVERAGE' 
0598         and HIS350A1.MODULE(4) = 'BENEFICIARY' 
0599       reset HIS350A1.SUPPORTING-DOC-TYPE(*) 
0600       IF HIS350A1.CHANGE-REASON <> ' ' 
0601         PERFORM SUPPORTING-DOC /* does change reason warrant supp doc 
0602       END-IF 
0603       for #i 1 15 
0604         if his350a1.dep-seq-num(#i) = 0         /* gsd20070915 start 
0605           escape bottom 
0606         end-if                                  /* gsd20070915 end 
0607         IF HIS350A1.DEP-NEW-ADD-PENDING(#I) /* what if eligibility changes 
0608             or (HIS350A1.TRXN-TYPE = 'EN' 
0609             and HIS350A1.subscr-transfer = ' ' /* ) 
0610             or (HIS350A1.DEP-RELATION(*) = mask(.'1B')  /* gsd20070816a  
0611                 and his350a1.change-reason ne 'AE')  
0612             and (his350a1.dep-hlth-pending-st(#I) = 'A1' 
0613             or his350a1.dep-hlth-status(#I) = 'A1' 
0614             or his350a1.dep-dntl-pending-st(#I) = 'A1' 
0615             or his350a1.dep-dntl-status(#I) = 'A1' 
0616             or his350a1.dep-dl-pending-st(#I) = 'A1' 
0617             or his350a1.dep-dl-status(#I) = 'A1' 
0618             or his350a1.dep-ols-pending-st(#I) = 'A1' 
0619             or his350a1.dep-ols-status(#I) = 'A1')) 
0620           #DEP-RELATION := HIS350A1.DEP-RELATION(#I) 
0621           #DEP-ELIGIBILITY := HIS350A1.DEP-eligibility(#I) 
0622           #student-cert-req := FALSE /* gsdtest 
0623           find (1) dep with dep-subscriber-ssn = his350a1.ssn /* gsd20070913a start 
0624               where dep.dep-ssn = his350a1.dep-ssn(#i) 
0625             if no 
0626               #student-cert-req := TRUE 
0627               escape bottom 
0628             end-norec 
0629             if dep.DEP-eligibility = mask('2'.) 
0630               #student-cert-req := FALSE 
0631             else 
0632               #student-cert-req := TRUE 
0633             end-if 
0634             #orig-DEP-ELIGIBILITY := dep.DEP-eligibility 
0635           end-find                              /* gsd20070913a end 
0636           PERFORM CHECK-SUPP-DOC /* does elig/relation warrant supp doc 
0637         END-IF /* (0604) 
0638         if his350a1.DEP-ELIGIBILITY(#i) = MASK('2'.) 
0639 **        find (1) dep with dep-ssn = his350a1.dep-ssn(#i) /* gsd20070915 start 
0640 **            where dep-subscriber-ssn = his350a1.ssn 
0641           find (1) dep with dep-subscriber-ssn = his350a1.ssn 
0642               where dep.dep-ssn = his350a1.dep-ssn(#i) /* gsd20070915 end 
0643 /* gsd20070516a start 
0644 *           #eff-n := his350a1.effective-date-n 
0645 *           move edited #eff-a to #eff-d(em=yyyymmdd) 
0646             if (his350a1.dep-hlth-pending-st(#i) = 'A1' 
0647                 or his350a1.dep-dntl-pending-st(#i) = 'A1' 
0648                 or his350a1.dep-dl-pending-st(#i) = 'A1' 
0649                 or his350a1.dep-ols-pending-st(#i) = 'A1')  
0650                 and (his350a1.dep-hlth-status(#i) ne 'A1' 
0651                 and his350a1.dep-dntl-status(#i) ne 'A1' 
0652                 and his350a1.dep-dl-status(#i) ne 'A1' 
0653                 and his350a1.dep-ols-status(#i) ne 'A1')  
0654               reset #last-dep-eff-date-d 
0655               #doc-type := 'SC'                 /* gsd20070912a start 
0656               perform add-supporting-doc        /* gsd20070912a end 
0657               decide for every condition 
0658                 when dep.dep-hlth-eff-date gt #last-dep-eff-date-d 
0659                   #last-dep-eff-date-d := dep.dep-hlth-eff-date 
0660                 when dep.dep-dntl-eff-date gt #last-dep-eff-date-d 
0661                   #last-dep-eff-date-d := dep.dep-dntl-eff-date 
0662                 when dep.dep-dl-eff-date gt #last-dep-eff-date-d 
0663                   #last-dep-eff-date-d := dep.dep-dl-eff-date 
0664                 when dep.dep-ols-eff-date gt #last-dep-eff-date-d 
0665                   #last-dep-eff-date-d := dep.dep-ols-eff-date 
0666                 when any 
0667                   #break-in-cov := FALSE 
0668                   move edited #last-dep-eff-date-d(em=yyyymmdd) 
0669                     to #last-eff-date-a 
0670                   #eff-n := his350a1.effective-date-n 
0671                   perform check-for-break 
0672                   if #BREAK-IN-COV = TRUE /* gsd20070508a start 
0673                     #DEP-RELATION := HIS350A1.DEP-RELATION(#I) 
0674                     #DEP-ELIGIBILITY := HIS350A1.DEP-eligibility(#I) 
0675                     perform check-supp-doc 
0676                   end-if /* gsd20070508a end 
0677                 when none ignore 
0678               end-decide /* (0651) 
0679             end-if /* gsd20070516a end 
0680           end-find 
0681         end-if /* (0638)                       /* gsd moved from below 
0682         if his350a1.DEP-ELIGIBILITY(#i) = MASK('2'.) /* gsd20070911a sta 
0683             and dep.DEP-ELIGIBILITY = mask('1'.) 
0684           #DOC-TYPE := 'SC' 
0685           PERFORM ADD-SUPPORTING-DOC 
0686         end-if                                       /* gsd20070911a end 
0687 */ MWS20080225 
0688 **      if dep.DEP-ELIGIBILITY = mask('1'.)     /* gsd20070820a start 
0689 **          or #break-in-cov /* break in coverage /* gsd20070516a 
0690 *       if #break-in-cov /* break in coverage   /* gsd20070820a end 
0691 **          and not(dep.DEP-ELIGIBILITY = mask('2'.)) /* gsd20070913a 
0692 **          and dep.DEP-ELIGIBILITY = mask('2'.) /* gsdtest 
0693 *         IF HIS350A1.HLTH-PLAN-CATEGORY = MASK('HT'.) /* TriCare 
0694 *           #DOC-TYPE := 'FT' 
0695 *           examine his350a1.supporting-doc-type(*) for 'FN' 
0696 *             giving index #doc 
0697 *           if #doc > 0 
0698 *             his350a1.supporting-doc-type(#doc) := 'FT' 
0699 *           else 
0700 *             PERFORM ADD-SUPPORTING-DOC 
0701 *           end-if 
0702 *         END-IF /* (0665) 
0703 *         IF NOT(HIS350A1.HLTH-PLAN-CATEGORY = MASK('HT'.)) /* Not TriCare 
0704 *           #DOC-TYPE := 'FN' 
0705 *           examine his350a1.supporting-doc-type(*) for 'FT' 
0706 *             giving index #doc 
0707 *           if #doc > 0 
0708 *             his350a1.supporting-doc-type(#doc) := 'FN' 
0709 *           else 
0710 *             PERFORM ADD-SUPPORTING-DOC 
0711 *           end-if 
0712 *         END-IF /* (0703) 
0713 *       end-if /* (0664) 
0714 *       end-if /* (0638) 
0715       end-for /* (0603) #i 
0716 * 
0717       if his350a1.prior-srvc-beg-date-n ne 0 /* gsd20070907a start 
0718           or his350a1.dep-prior-srvc-beg-date-n(*) ne 0 
0719         find (1) subscr with ssn = his350a1.ssn 
0720         end-find 
0721         if his350a1.hlth-status = 'A1' 
0722             and subscr.hlth-status ne 'A1' 
0723             and his350a1.prior-srvc-beg-date-n ne 0 
0724           #doc-type := 'CC' 
0725           perform add-supporting-doc 
0726         else 
0727           for #i 1 15 
0728             if his350a1.dep-prior-srvc-beg-date-n(#i) ne 0 
0729                 and his350a1.dep-hlth-pending-st(#i) = 'A1' 
0730               #doc-type := 'CC' 
0731               perform add-supporting-doc 
0732               escape bottom 
0733             end-if 
0734           end-for 
0735         end-if 
0736       end-if /* gsd20070907a end 
0737     END-IF /* (0592) 
0738 * 
0739   VALUE 'UPDATE' /* Apply Button 
0740     PERFORM SET-PART-TIME-IND /*set part-time-ind from employment-stat  us 
0741     HIS350A1.ACTION := 'EDIT' /* start code to handle update by JR 
0742     #edit-for-update := TRUE 
0743     PERFORM COMPUTE-EFF-DATE 
0744 **  HIS350A1.SUBSCRIBER-TYPE := 'AR'       /*mws20080825 
0745     IF HIS350A1.USER-ID = 'BINUSER'        /*mws20080825 
0746     and his350a1.change-reason = 'AE'          /*mws20080825 
0747     and his350a1.subscriber-type ne 'AR' 
0748       if his350a1.subscriber-type ne 'AR'  
0749         reset his350a1.employment-status 
0750       end-if 
0751         ignore                             /*mws20080825 
0752     else  
0753         HIS350A1.SUBSCRIBER-TYPE := 'AR'  /*mws20080825  
0754     end-if                                 /*mws20080825 
0755     PERFORM MODULE-ACTIONS 
0756     HIS350A1.ACTION := 'UPDATE' 
0757     #edit-for-update := FALSE 
0758     IF NOT HIS350A1.HAS-ERROR /* start code to handle update by JR 
0759       IF HIS350A1.TRXN-TYPE = 'EN' 
0760 /* Since we are not updating data directly, the enrollment trxn 
0761 /*   will be stored as a pending suspense transaction. 
0762 /* If the data originally came from suspense, it is probably 
0763 /*   suspense-code = 4, since this is part of the key, we need to 
0764 /*   delete this record then store a suspense-code = 6. Even if 
0765 /*   it equaled 6, we will delete & store the record again. 
0766         IF #NOT-ON-FILE 
0767           #NEW-TRXN-CODE := 'A1' 
0768         END-IF 
0769         IF HIS350A1.ON-DEPEND-FILE 
0770           #NEW-TRXN-CODE := 'A3' 
0771         END-IF 
0772         IF HIS350A1.SUBSCR-BEFORE 
0773           #NEW-TRXN-CODE := 'A2' 
0774         END-IF 
0775         if his350a1.user-id NE 'BINUSER'   /*MWS20080825 
0776         and his350a1.subscriber-type = 'AR' /*MWS20080825  
0777            IF HIS350A1.ADVANCE-KEYED 
0778              #NEW-SUSP-CODE := 'A' 
0779            ELSE 
0780              #NEW-SUSP-CODE := 'G' 
0781            END-IF 
0782 **      ELSE #NEW-SUSP-CODE := 'O'         /*MWS20080825  
0783         END-IF    /*mws20081007 stop setting susp = 0  
0784         if his350a1.module(5) = 'SUBSCR'            /* gsd20070905a start 
0785           #NEW-SUSP-CODE := 'S' 
0786         end-if                                      /* gsd20070905a end 
0787         if his350a1.module(5) NE ' ' 
0788           #NEW-SUSP-CODE := his350a1.module(5) 
0789         end-if 
0790 /* Reset SLTD Salary if no SLTD info was entered 
0791         IF HIS350A1.SLTD-SALARY GT 0 
0792             AND HIS350A1.SLTD-STATUS = MASK('T'.) OR = ' ' 
0793             AND HIS350A1.SLTD-COVER-LEVEL = ' ' 
0794           RESET HIS350A1.SLTD-SALARY 
0795         END-IF 
0796         FSM1. FIND SUBSCR-MAST WITH SSN = HIS350A1.SSN 
0797           IF NO RECORDS FOUND 
0798             #6-MO-BRK := FALSE 
0799             ESCAPE BOTTOM(FSM1.) 
0800           END-NOREC 
0801           PERFORM CHECK-TERMINATION-STATUS 
0802           IF *DATX - 180 > #LAST-EFF-DATE 
0803               AND #LAST-EFF-DATE NE 0 
0804             #6-MO-BRK := TRUE /* terminated for over 6 mos - no data ret urn 
0805           END-IF 
0806         END-FIND /* (0796) fsm1. 
0807         PERFORM SETUP-STORE-SUSPENSE 
0808       ELSE /* (0759) 'CH' HIS350A1.TRXN-TYPE 
0809         PERFORM COMPUTE-EFF-DATE 
0810   FSM5. 
0811   FIND SUBSCR-MAST WITH SSN = HIS350A1.SSN 
0812     move by name subscr-mast to his390a1 
0813   END-FIND /* (0811) fsm5. subscr-mast 
0814 /* The Modules 355n1 thru 358n1 are set up to update & store 
0815 /* data correctly (UPDATE action will actually update and not 
0816 /* suspend like this process does).  Instead of changing the 
0817 /* modules, this routine will store the suspense record as a 
0818 /* completed, pending transaction. 
0819         DECIDE FOR FIRST CONDITION 
0820           WHEN HIS350A1.MODULE(*) = 'DEMOGRAPHIC' 
0821             #NEW-TRXN-CODE := 'C1' 
0822           WHEN HIS350A1.MODULE(*) = 'BENEFICIARY' 
0823             #NEW-TRXN-CODE := 'C2' 
0824           WHEN HIS350A1.MODULE(*) = 'COVERAGE' 
0825             #NEW-TRXN-CODE := 'C3' 
0826           WHEN HIS350A1.MODULE(*) = 'DEPENDENT' 
0827             #NEW-TRXN-CODE := 'C5' 
0828           WHEN NONE /* 'REVIEW' 
0829             #NEW-TRXN-CODE := 'C1' 
0830         END-DECIDE /* (0809) 
0831         if his350a1.user-id NE 'BINUSER'   /*MWS20080825 
0832         and his350a1.subscriber-type = 'AR' /*MWS20080825  
0833            IF HIS350A1.ADVANCE-KEYED 
0834              #NEW-SUSP-CODE := 'A' 
0835            ELSE 
0836              #NEW-SUSP-CODE := 'G' 
0837            END-IF 
0838         END-IF        /*mws20081007 stop setting susp = 0  
0839         if his350a1.module(5) = 'SUBSCR'            /* gsd20070905a start 
0840           #NEW-SUSP-CODE := 'S' 
0841         end-if                                      /* gsd20070905a end 
0842         if his350a1.module(5) NE ' ' 
0843           #NEW-SUSP-CODE := his350a1.module(5) 
0844         end-if 
0845 /* this is now a completed transaction, reset susp reasons 
0846         RESET HIS350A1.SUSP-OTHER-DESC(*) HIS350A1.SUSPENSE-REASON(*) 
0847         PERFORM SETUP-STORE-SUSPENSE 
0848       END-IF /* (0758) HIS350A1.TRXN-TYPE 
0849     END-IF /* (0759) NOT his350a1.has-error 
0850 * 
0851   VALUE 'SUSPEND' 
0852 /* save the entire transaction to suspense 
0853     PERFORM SET-PART-TIME-IND /* set part-time-ind from employment-stat 
0854 /* This data came from suspense, it could be a susp-code 4 or 6. 
0855 /* The record will be deleted and restored as a 4 
0856     #NEW-SUSP-CODE := 'X' 
0857     #NEW-TRXN-CODE := 'A1' 
0858 /* Reset SLTD Salary if no SLTD info was entered 
0859     IF HIS350A1.SLTD-SALARY GT 0 
0860         AND HIS350A1.SLTD-STATUS = MASK('T'.) OR = ' ' 
0861         AND HIS350A1.SLTD-COVER-LEVEL = ' ' 
0862       RESET HIS350A1.SLTD-SALARY 
0863     END-IF 
0864     PERFORM SETUP-STORE-SUSPENSE 
0865   NONE VALUE IGNORE 
0866 END-DECIDE /* (0543) 
0867 /* Groups beginning with '7' cannot have rates 
0868 IF NOT (HIS350A1.EMPLOYER-GROUP-ID = MASK('7'......)) 
0869   CALLNAT 'mws350n4' /* Calculate Rates  
0870     HIS350A1 
0871 END-IF 
0872 IF HIS350A1.ACTION = 'SUSPEND' OR = 'UPDATE' 
0873     AND NOT HIS350A1.HAS-ERROR 
0874   END TRANSACTION 
0875 END-IF 
0876 ************************************************************************ 
0877 DEFINE SUBROUTINE MODULE-ACTIONS 
0878 ************************************************************************ 
0879 write his350a1.module(*)  
0880 DECIDE FOR EVERY CONDITION 
0881   WHEN HIS350A1.MODULE(*) = 'DEMOGRAPHIC' 
0882     PERFORM DEMOGRAPHIC-MODULE 
0883   WHEN HIS350A1.MODULE(*) = 'COVERAGE' 
0884       OR HIS350A1.MODULE(*) = 'DEPENDENT' 
0885     IF HIS350A1.ACTION = 'EDIT' 
0886       IF HIS350A1.TRXN-TYPE = 'CH' 
0887           AND HIS350A1.EFFECTIVE-DATE-N = 0 
0888         #E-MSG := 'Must enter effective date of change' 
0889         #E-FLD := 'EFFECTIVE-DATE-N' 
0890         PERFORM ADD-ERROR 
0891         ESCAPE ROUTINE 
0892       END-IF 
0893     END-IF /* (0885) 
0894   WHEN HIS350A1.MODULE(*) = 'COVERAGE' 
0895     PERFORM COVERAGE-MODULE 
0896   WHEN HIS350A1.MODULE(*) = 'DEPENDENT' 
0897     PERFORM DEPENDENT-MODULE 
0898   WHEN HIS350A1.MODULE(*) = 'BENEFICIARY' 
0899     PERFORM BENEFICIARY-MODULE 
0900   WHEN NONE IGNORE 
0901 END-DECIDE /* (0879) 
0902 END-SUBROUTINE /* (0877) MODULE-ACTIONS 
0903 ************************************************************************ 
0904 DEFINE SUBROUTINE DEMOGRAPHIC-MODULE 
0905 ************************************************************************ 
0906 RESET his355a1  
0907 MOVE BY NAME HIS350A1 TO his355a1                                       
0908 #HOLD-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N /* eff date gets lost ??? 
0909 #HOLD-EMP-GROUP := HIS350A1.EMPLOYER-GROUP-ID /* grp gets lost ??? 
0910 * 
0911 write his355a1.ssn  
0912 write his355a1.action  
0913 CALLNAT 'HIS355N1' /* AES Demographic Driver 
0914   his355a1  
0915   write his355a1.last-name  
0916 IF his355a1.HAS-ERROR /* Handle errors from subroutine  
0917   FOR #I 1 his355a1.ERROR-COUNT  
0918   write #e-msg (al=70)  
0919   write #e-fld (al=70)  
0920     #E-MSG := his355a1.ERROR-MESSAGE(#I)  
0921     #E-FLD := his355a1.ERROR-FIELDS(#I)  
0922     PERFORM ADD-ERROR 
0923   END-FOR /* #I 
0924 END-IF 
0925 write 'demo'  
0926 * 
0927 IF #6-MO-BRK /* Return values below, but reset others for rekeying 
0928   HIS350A1.SSN := his355a1.SSN  
0929   HIS350A1.LAST-NAME := his355a1.LAST-NAME  
0930   HIS350A1.FIRST-NAME := his355a1.FIRST-NAME  
0931   HIS350A1.MIDDLE-INITIAL := his355a1.MIDDLE-INITIAL  
0932   HIS350A1.SUFFIX := his355a1.SUFFIX  
0933   HIS350A1.DATE-OF-BIRTH-N := his355a1.DATE-OF-BIRTH-N  
0934   HIS350A1.SEX := his355a1.SEX  
0935   his350a1.bin := his355a1.bin  /*mws 20080729  
0936 ELSE /* (0927) Return all values 
0937   MOVE BY NAME his355a1.DEMOGRAPHIC-INFO TO HIS350A1  
0938   MOVE BY NAME his355a1.SUSPENSE-INFO TO HIS350A1  
0939   MOVE BY NAME his355a1.MESSAGE-INFO TO HIS350A1  
0940   IF #HOLD-EFF-DATE-N NE 0 
0941     HIS350A1.EFFECTIVE-DATE-N := #HOLD-EFF-DATE-N  /* get lost eff date 
0942   END-IF 
0943   IF #HOLD-EMP-GROUP NE ' ' 
0944     HIS350A1.EMPLOYER-GROUP-ID := #HOLD-EMP-GROUP /* get lost grp 
0945   END-IF 
0946   reset his350a1.lwop-beg-date-n  
0947         his350a1.lwop-end-date-n  
0948         his350a1.tobacco-cert-date-n                                    
0949         his350a1.visn-eff-date-n  
0950         his350a1.visn-end-date-n  
0951         his350a1.dep-visn-eff-date-n(*)  
0952         his350a1.dep-visn-end-date-n(*)  
0953 END-IF /* (0927) 
0954 * 
0955 * 
0956 IF HIS350A1.ACTION = 'EDIT' 
0957   PERFORM SET-PART-TIME-IND /*set part-time-ind from employment-stat    us 
0958   PERFORM CHECK-TABLE-FILE 
0959   #suffix := his350a1.suffix                    /* gsd20070806 start 
0960   FOR #I 1 TO 3 
0961     IF #SUFF-NAME(#I) = '.' 
0962       #SUFF-NAME(#I) := ' ' 
0963     END-IF 
0964   END-FOR 
0965   his350a1.suffix := #suffix                    /* gsd20070806 end 
0966   IF SUBSCR-MAST.STREET-1 = SCAN 'C/O OIS JC' 
0967       AND HIS350A1.STREET-1 NE 'C/O OIS JC' 
0968     #E-MSG := 'This address cannot be changed - Contact EIP to update' 
0969     #E-FLD := 'STREET-1' 
0970     PERFORM ADD-ERROR 
0971   END-IF 
0972 /* Validate State values 
0973   DECIDE ON FIRST VALUE OF HIS350A1.COUNTRY-NAME 
0974     VALUE ' ' 
0975       IF HIS350A1.STATE = 'SC' 
0976         #PHONE := HIS350A1.TELEPHONE-NUMBER 
0977         #PHONE-TYPE := 'Phone' 
0978       END-IF /* (0978) 
0979     VALUE 'CANADA' 
0980       IF NOT (HIS350A1.STATE = 'AB' OR = 'BC' OR = 'MB' OR = 'NB' 
0981           OR = 'NL' OR = 'NT' OR = 'NS' OR = 'NU' OR = 'PE' OR = 'QC' 
0982           OR = 'SK' OR = 'YT') 
0983         #E-MSG := 'You must select a Canadian province from the state ' 
0984           -'list' 
0985         #E-FLD := 'STATE' 
0986         PERFORM ADD-ERROR 
0987       END-IF /* (0980) 
0988     NONE 
0989       IF HIS350A1.STATE NE ' ' 
0990         #E-MSG := 'State must be blank when country is neither United ' 
0991           -'States nor Canada' 
0992         #E-FLD := 'STATE' 
0993         PERFORM ADD-ERROR 
0994       END-IF /* (0989) 
0995   END-DECIDE /* (0973) 
0996   #PHONE := HIS350A1.WORKPHONE-NUMBER 
0997   #PHONE-TYPE := 'Work' 
0998 END-IF /* (0955) 
0999 /* DOB and Hire Date validations 
1000 IF HIS350A1.DATE-HIRED-N > 0 
1001     AND HIS350A1.DATE-OF-BIRTH-N > 0 
1002   #AGE := (*DATN - HIS350A1.DATE-OF-BIRTH-N) / 10000 
1003   #DATE-WORK := HIS350A1.DATE-HIRED-N 
1004   MOVE EDITED #DATE-WORK TO #HIRE-D(EM=YYYYMMDD) 
1005   #DATE-WORK := HIS350A1.DATE-OF-BIRTH-N 
1006   MOVE EDITED #DATE-WORK TO #DOB-D (EM=YYYYMMDD) 
1007   MOVE EDITED #DOB-D (EM=MMDDYYYY) TO #DATE-WORK 
1008   #16TH-YRN := VAL(#YR-WORK) + 16 
1009   COMPRESS #MO-WORK #DA-WORK #16TH-YRN INTO #16TH-BD LEAVING NO 
1010   MOVE EDITED #16TH-BD TO #DOB-D(EM=MMDDYYYY) 
1011   IF #HIRE-D LT #DOB-D 
1012     #E-MSG := 'Hire date must be greater than the 16th birthday' 
1013     #E-FLD := 'DATE-HIRED-N' 
1014     PERFORM ADD-ERROR 
1015   END-IF 
1016 END-IF /* (0998) 
1017 IF NOT(HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P')  
1018   if his350a1.subscriber-type = 'AR'  
1019   RESET HIS350A1.DEP-DL-STATUS(*) HIS350A1.DEP-DL-EFF-DATE-N(*) 
1020     HIS350A1.DEP-DL-END-DATE-N(*)  
1021     HIS350A1.DEP-OLS-STATUS(*) HIS350A1.DEP-OLS-EFF-DATE-N(*) 
1022     HIS350A1.DEP-OLS-END-DATE-N(*) 
1023     HIS350A1.sl-status HIS350A1.sl-EFF-DATE-N 
1024     HIS350A1.ltd-status HIS350A1.ltd-EFF-DATE-N 
1025     HIS350A1.dl-status HIS350A1.dl-EFF-DATE-N 
1026     HIS350A1.dl-plan-category 
1027     HIS350A1.ols-status HIS350A1.ols-EFF-DATE-N 
1028     HIS350A1.ols-age-group HIS350A1.ols-cover-level 
1029     HIS350A1.ol-status HIS350A1.ol-EFF-DATE-N 
1030     HIS350A1.ol-age-group HIS350A1.ol-plan-cover-level 
1031     HIS350A1.sltd-status HIS350A1.sltd-EFF-DATE-N 
1032     HIS350A1.sltd-age-group HIS350A1.sltd-cover-level 
1033     end-if  
1034 END-IF 
1035 IF HIS350A1.TRXN-TYPE = 'EN' 
1036   IF HIS350A1.SALARY GT 147692 
1037     HIS350A1.SLTD-SALARY := 147692 
1038   ELSE 
1039     HIS350A1.SLTD-SALARY := HIS350A1.SALARY 
1040   END-IF 
1041   IF HIS350A1.EFFECTIVE-DATE-N <> 0 
1042     #DATE-WORK := HIS350A1.DATE-HIRED-N 
1043     MOVE EDITED #DATE-WORK TO #HIRE-D(EM=YYYYMMDD) 
1044     #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
1045     MOVE EDITED #DATE-WORK TO #COMP-D(EM=YYYYMMDD) 
1046     PERFORM VALIDATE-MANUAL-EFF-DATE 
1047   END-IF 
1048   CALLNAT 'KTB805NN' /* GET CURRENT BILL DATE FOR "RETIREE" 
1049     #PROGRAM #PROCESS-ERROR #RET-BILL-DTE 
1050   MOVE EDITED #RET-BILL-DTE (EM=MM) TO #BILL-MO 
1051   IF #BILL-MO = '01' OR =  '1 ' 
1052     #MO := 12 
1053   ELSE 
1054     #MO := VAL(#BILL-MO) - 1 
1055   END-IF 
1056 * 
1057   CALLNAT 'KIS801NN' /* CONVERT TO FISCAL MONTH 
1058     #MO #MO-NAME 
1059   CALLNAT 'KIS800NN' /* FISCAL YEAR ROUTINE 
1060     #FISCAL-YEAR 
1061 * 
1062   COMPRESS #FISCAL-YEAR HIS350A1.SSN INTO #RET-KEY LEAVING NO 
1063   FRAV1. FIND RET-ACC-VIEW WITH SP-RET-SSN-KEY = #RET-KEY 
1064     IF NO 
1065       ESCAPE BOTTOM(FRAV1.) 
1066     END-NOREC 
1067     #ACC-AMT := BEG-BALANCE(#MO) + PAYMENTS-RECVD(#MO) 
1068       + DISBURSEMENTS(#MO) + ACCTING-ADJUST(#MO) 
1069       + TOTAL-PREMIUMS-BILLED(#MO) 
1070     IF #ACC-AMT NE 0 
1071       #E-MSG := 'Suscriber has a balance on retiree accounting master' 
1072       #E-FLD := 'HIRE-DATE-N' 
1073       PERFORM ADD-ERROR 
1074     END-IF 
1075   END-FIND /* (1062) FRAV1. RET-ACC-VIEW 
1076 END-IF /* (1035) 
1077 END-SUBROUTINE /* (0904) DEMOGRAPHIC-MODULE 
1078 ************************************************************************ 
1079 DEFINE SUBROUTINE COVERAGE-MODULE 
1080 ************************************************************************ 
1081 write 'here'  
1082 IF HIS350A1.ACTION = 'GET' 
1083     AND NOT #6-MO-BRK 
1084   IF HIS350A1.SUBSCR-BEFORE 
1085     MOVE BY NAME HIS350A1 TO HIS356A1 
1086     CALLNAT 'HIS356N1' /* AES Coverage Driver 
1087       HIS356A1 
1088     IF HIS356A1.HAS-ERROR /* Handle errors from subroutine 
1089       FOR #I 1 his355a1.ERROR-COUNT  
1090         #E-MSG := HIS356A1.ERROR-MESSAGE(#I) 
1091         #E-FLD := HIS356A1.ERROR-FIELDS(#I) 
1092         PERFORM ADD-ERROR 
1093       END-FOR /* #I 
1094     END-IF 
1095     write 'coverage2'  
1096     MOVE BY NAME HIS356A1.COVERAGE-INFO TO HIS350A1 
1097     MOVE BY NAME HIS356A1.SUSPENSE-INFO TO HIS350A1 
1098     MOVE BY NAME HIS356A1.MESSAGE-INFO TO HIS350A1 
1099   END-IF 
1100 END-IF /* (1088) 
1101 IF HIS350A1.ACTION = 'EDIT' 
1102  and not(his350a1.change-reason = 'AR' or = 'BE') /* gsd20061201a 
1103 ** 
1104   if his350a1.change-reason = 'OE' /* gsd20070820b start 
1105       and HIS350A1.HLTH-PLAN-CATEGORY = MASK('HT'.) /* TriCare 
1106       and his350a1.hlth-status = 'A1' 
1107     #e-msg := 'You must change your current health plan provider'  
1108     perform add-error 
1109   end-if /* gsd20070820b end 
1110   if his350a1.change-reason = 'AE' /* rn20080901  
1111       and HIS350A1.HLTH-PLAN-CATEGORY = MASK('HX'.) /* TriCare  
1112       and his350a1.hlth-status = 'A1'  
1113     #e-msg := 'You must change your current health plan provider'  
1114     perform add-error  
1115   end-if /* rn20080901  
1116 /* If enrollee was a spouse with LTC, copy LTC history to currrent LTC 
1117   PERFORM LTC-SP-CARRYOVER 
1118 * 
1119   PERFORM CHECK-FOR-DECEASED /* make sure not activating deceased deps 
1120   IF HIS350A1.EFFECTIVE-DATE-N > 0 
1121       AND NOT HIS350A1.EFFECTIVE-DATE-N = 15820000 THRU 26990000 
1122     #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
1123     MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
1124     MOVE EDITED #WORK-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
1125     COMPRESS 'Effective Date (' #DISPLAY-DATE1 
1126       ') is not a valid date' INTO #E-MSG 
1127     #E-FLD := 'EFFECTIVE-DATE-N' 
1128     PERFORM ADD-ERROR 
1129     ESCAPE ROUTINE 
1130   END-IF /* (1114) 
1131 /* Calculate subscriber's age 
1132   IF HIS350A1.DATE-OF-BIRTH-N > 0 
1133     #DATE-WORK := HIS350A1.DATE-OF-BIRTH-N 
1134     IF HIS350A1.EFFECTIVE-DATE-N > 0 
1135       #DATE-WORK2 := HIS350A1.EFFECTIVE-DATE-N 
1136     ELSE 
1137       #DATE-WORK2 := *DATN 
1138     END-IF 
1139     #AGE := (VAL(#DATE-WORK2) - VAL(#DATE-WORK)) / 10000 
1140   END-IF 
1141   RESET #DEPEND-STATUS 
1142   FR1. 
1143   FOR #I 1 TO 15 
1144     IF HIS350A1.DEP-RELATION(#I) = MASK(.'1'..) /* Spouse 
1145       IF HIS350A1.DEP-RELATION(#I) = MASK(.'1A') 
1146         IF HIS350A1.DEP-DATE-OF-BIRTH-N(#I) > 0 
1147           #SPOUSE-DOB-N := HIS350A1.DEP-DATE-OF-BIRTH-N(#I) 
1148         END-IF 
1149       END-IF 
1150       IF HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
1151           OR (HIS350A1.DEP-HLTH-PENDING-ST(#I) = ' ' 
1152           AND HIS350A1.DEP-HLTH-STATUS(#I) = 'A1') 
1153         #FOUND-SPOUSE-H := TRUE 
1154         IF HIS350A1.DEP-DATE-OF-BIRTH-N(#I) > 0 
1155           #SPOUSE-DOB-N := HIS350A1.DEP-DATE-OF-BIRTH-N(#I) 
1156           #DATE-WORK := HIS350A1.DEP-DATE-OF-BIRTH-N(#I) 
1157           #DATE-WORK2 := *DATN 
1158           #SP-AGE := (VAL(#DATE-WORK2) - VAL(#DATE-WORK)) / 10000 
1159           #SPOUSE-MEDICARE := HIS350A1.DEP-MEDICARE-NUMBER(#I) 
1160         END-IF 
1161       END-IF /* (1150) 
1162       IF HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1' 
1163           OR (HIS350A1.DEP-DNTL-PENDING-ST(#I) = ' ' 
1164           AND HIS350A1.DEP-DNTL-STATUS(#I) = 'A1') 
1165         #FOUND-SPOUSE-D := TRUE 
1166       END-IF 
1167       IF HIS350A1.DEP-OLS-PENDING-ST(#I) = 'A1' 
1168           OR (HIS350A1.DEP-OLS-PENDING-ST(#I) = ' ' 
1169           AND HIS350A1.DEP-OLS-STATUS(#I) = 'A1') 
1170         #FOUND-SPOUSE-OLS := TRUE 
1171       END-IF 
1172     ELSE /* (1143) Child 
1173       IF HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
1174           OR (HIS350A1.DEP-HLTH-PENDING-ST(#I) = ' ' 
1175           AND HIS350A1.DEP-HLTH-STATUS(#I) = 'A1') 
1176         #FOUND-DEP-H := TRUE 
1177       END-IF 
1178       IF HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1' 
1179           OR (HIS350A1.DEP-DNTL-PENDING-ST(#I) = ' ' 
1180           AND HIS350A1.DEP-DNTL-STATUS(#I) = 'A1') 
1181         #FOUND-DEP-D := TRUE 
1182       END-IF 
1183       IF HIS350A1.DEP-DL-PENDING-ST(#I) = 'A1' 
1184           OR (HIS350A1.DEP-DL-PENDING-ST(#I) = ' ' 
1185           AND HIS350A1.DEP-DL-STATUS(#I) = 'A1') 
1186         #FOUND-DEP-DL := TRUE 
1187       END-IF 
1188     END-IF /* (1143) 
1189   END-FOR /* FR1. #I (1142) 
1190 * 
1191 /* All coverages must be chosen or refused during an enroll 
1192   IF HIS350A1.TRXN-TYPE = 'EN' 
1193   OR HIS350A1.CHANGE-REASON = 'OE'  
1194     DECIDE FOR EVERY CONDITION 
1195       WHEN HIS350A1.HLTH-STATUS = ' ' 
1196         #E-MSG := 'Health Plan must be chosen or refused.' 
1197         #E-FLD := 'HLTH-STATUS' 
1198         PERFORM ADD-ERROR 
1199       WHEN HIS350A1.DNTL-STATUS = ' ' 
1200         #E-MSG := 'Dental Plan must be chosen or refused.' 
1201         #E-FLD := 'DNTL-STATUS' 
1202         PERFORM ADD-ERROR 
1203       WHEN HIS350A1.DNTP-STATUS = ' ' 
1204           AND HIS350A1.SUBSCR-TRANSFER = ' '  
1205           AND HIS350A1.SUBSCRIBER-TYPE = 'AR'  
1206         #E-MSG := 'Dental Plus must be chosen or refused.' 
1207         #E-FLD := 'DNTP-STATUS' 
1208         PERFORM ADD-ERROR 
1209       WHEN HIS350A1.DNTP-STATUS = ' ' 
1210           AND HIS350A1.SUBSCR-TRANSFER NE ' ' 
1211         HIS350A1.DNTP-STATUS := 'T4' 
1212       WHEN NONE IGNORE 
1213     END-DECIDE /* (1193) 
1214     IF HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
1215       if his350a1.subscriber-type = 'AR'  
1216       DECIDE FOR EVERY CONDITION 
1217         WHEN HIS350A1.OL-STATUS = ' ' AND  
1218              HIS350A1.SUBSCRIBER-TYPE = 'AR'  
1219           #E-MSG := 'Optional Life must be chosen or refused.' 
1220           #E-FLD := 'OL-STATUS' 
1221           PERFORM ADD-ERROR 
1222         WHEN HIS350A1.DL-STATUS = ' ' 
1223             AND #FOUND-DEP-DL 
1224           #E-MSG := 'Dependent Life (child) must be chosen or refused.' 
1225           #E-FLD := 'OLS-STATUS' 
1226           PERFORM ADD-ERROR 
1227         WHEN HIS350A1.OLS-STATUS = ' ' 
1228             AND #SPOUSE-EXISTS 
1229           #E-MSG := 'Dependent Life (spouse) must be chosen or refused.' 
1230           #E-FLD := 'OLS-STATUS' 
1231           PERFORM ADD-ERROR 
1232         WHEN HIS350A1.SLTD-STATUS = ' ' 
1233            AND HIS350A1.SUBSCRIBER-TYPE = 'AR'  
1234           #E-MSG := 'SLTD must be chosen or refused.' 
1235           #E-FLD := 'SLTD-STATUS' 
1236           PERFORM ADD-ERROR 
1237         WHEN NONE IGNORE 
1238       END-DECIDE /* (1215) 
1239       end-if  
1240     END-IF /* (1214) 
1241     IF NOT(HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
1242       if his350a1.subscriber-type = 'AR'  
1243       DECIDE FOR EVERY CONDITION 
1244         WHEN HIS350A1.OL-STATUS = 'A1' 
1245           #E-MSG := 'Optional Life must be refused for' 
1246             -' part-time subscribers' 
1247           #E-FLD := 'OL-STATUS' 
1248           PERFORM ADD-ERROR 
1249         WHEN HIS350A1.DL-STATUS = 'A1' 
1250             AND #FOUND-DEP-DL 
1251           #E-MSG := 'Dependent Life (child) must be refused for ' 
1252             -'part-time subscribers' 
1253           #E-FLD := 'OL-STATUS' 
1254           PERFORM ADD-ERROR 
1255         WHEN HIS350A1.OLS-STATUS = 'A1' 
1256           #E-MSG := 'Dependent Life (spouse) must be refused for ' 
1257             -'part-time subscribers' 
1258           #E-FLD := 'OL-STATUS' 
1259           PERFORM ADD-ERROR 
1260         WHEN HIS350A1.SLTD-STATUS = 'A1' 
1261           #E-MSG := 'SLTD must be refused for ' 
1262             -'part-time subscribers' 
1263           #E-FLD := 'OL-STATUS' 
1264           PERFORM ADD-ERROR 
1265         WHEN NONE IGNORE 
1266       END-DECIDE /* (1242) 
1267       end-if  
1268     END-IF /* (1241) 
1269   END-IF /* (1192) 
1270   FSM4. 
1271   FIND SUBSCR-MAST WITH SSN = HIS350A1.SSN 
1272     IF NO 
1273       ESCAPE BOTTOM (FSM4.) 
1274     END-NOREC 
1275     move by name subscr-mast to his390a1 
1276   END-FIND /* (1270) fsm4. subscr-mast 
1277   PERFORM HEALTH-VALIDATIONS 
1278   PERFORM DENTAL-VALIDATIONS 
1279   PERFORM DEPEND-LIFE-VALIDATIONS 
1280   PERFORM OPT-LIFE-VALIDATIONS 
1281   PERFORM DEPEND-LIFE-SP-VALIDATIONS 
1282   PERFORM SLTD-VALIDATIONS 
1283   PERFORM LTC-VALIDATIONS 
1284   PERFORM LTC-SP-VALIDATIONS 
1285 /* Set Basic Life/LTD 
1286   IF HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
1287     MOVE HIS350A1.HLTH-STATUS TO HIS350A1.SL-STATUS 
1288       HIS350A1.LTD-STATUS 
1289     IF HIS350A1.TRXN-TYPE = 'EN' 
1290         OR SUBSCR-MAST.SL-STATUS NE HIS350A1.SL-STATUS 
1291       HIS350A1.SL-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
1292       HIS350A1.LTD-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
1293     END-IF 
1294     IF (HIS350A1.CHANGE-REASON = 'OE' or = 'AE') 
1295     and his350a1.subscriber-type ne mask('R') /* MWS20080825 
1296 **    #PLAN-CAT := SUBSCR-MAST.HLTH-PLAN-CATEGORY /* gsd20070830b start 
1297       #PLAN := SUBSCR-MAST.HLTH-PLAN-CATEGORY 
1298 **    #NEW-PLAN-CAT := HIS350A1.HLTH-PLAN-CATEGORY 
1299       #NEW-PLAN := HIS350A1.HLTH-PLAN-CATEGORY 
1300       if #plan ne #new-plan                       /* gsd20070830b end 
1301         HIS350A1.SL-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
1302         HIS350A1.LTD-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
1303       end-if 
1304     END-IF 
1305   else                                          /* gsd20070911b start 
1306     if his350a1.subscriber-type ne 'AR' /*mws20080825 
1307        reset his350a1.sl-status        /*mws20080825 
1308        reset his350a1.ltd-status       /*mws20080825 
1309     end-if                             /*mws20080825 
1310     #PLAN := SUBSCR-MAST.HLTH-PLAN-CATEGORY 
1311     #NEW-PLAN := HIS350A1.HLTH-PLAN-CATEGORY 
1312     for #i 1 15 
1313       if his350a1.dep-seq-num(#i) = 0 
1314         escape bottom 
1315       end-if 
1316       if #plan ne #new-plan 
1317         if his350a1.dep-hlth-status(#i) = 'A1' 
1318             and his350a1.dep-hlth-pending-st(#i) = ' ' 
1319           HIS350A1.dep-hlth-EFF-DATE-N(#i) := HIS350A1.HLTH-EFF-DATE-N 
1320         end-if 
1321       end-if 
1322     end-for                                     /* gsd20070911b end 
1323   END-IF 
1324 * 
1325   IF HIS350A1.DATE-OF-BIRTH-N > 0 
1326     #DATE-WORK := HIS350A1.DATE-OF-BIRTH-N 
1327     MOVE EDITED #BILL-DATE(EM=YYYY) TO #BILL-YEAR 
1328     #BILL-YEAR-N := #BILL-YEAR-N - 1 
1329     COMPRESS #BILL-YEAR '1231' INTO #1231-DATE 
1330       LEAVING NO 
1331     #COMP-AGE := (VAL(#1231-DATE) - VAL(#DATE-WORK)) / 10000 
1332   END-IF 
1333 * 
1334   RESET HIS356A1 
1335   MOVE BY NAME HIS350A1 TO HIS356A1 
1336   IF HIS350A1.OLS-COVER-LEVEL = ' ' 
1337       AND HIS350A1.OLS-STATUS = 'A1' 
1338       AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
1339     #E-MSG := 'Dependent Life Spouse coverage level is required' 
1340     PERFORM ADD-ERROR 
1341     ESCAPE ROUTINE 
1342   END-IF 
1343   CALLNAT 'HIS356N1' /* AES Coverage Driver 
1344     HIS356A1 
1345   IF HIS356A1.HAS-ERROR /* Handle errors from subroutine 
1346     FOR #I 1 HIS356A1.ERROR-COUNT 
1347       #E-MSG := HIS356A1.ERROR-MESSAGE(#I) 
1348       #E-FLD := HIS356A1.ERROR-FIELDS(#I) 
1349       PERFORM ADD-ERROR 
1350     END-FOR /* #I 
1351   END-IF 
1352   MOVE BY NAME HIS356A1.COVERAGE-INFO TO HIS350A1 
1353   MOVE BY NAME HIS356A1.SUSPENSE-INFO TO HIS350A1 
1354   MOVE BY NAME HIS356A1.MESSAGE-INFO TO HIS350A1 
1355 END-IF /* (1101) 
1356 IF HIS350A1.TRXN-TYPE = 'EN' 
1357     AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
1358   HIS350A1.SL-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
1359   HIS350A1.LTD-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
1360 END-IF 
1361 END-SUBROUTINE /* (1079) COVERAGE-MODULE 
1362 ************************************************************************ 
1363 DEFINE SUBROUTINE DEPENDENT-MODULE 
1364 ************************************************************************ 
1365 RESET HIS357A1 
1366 IF HIS350A1.ACTION = 'GET' 
1367   IF HIS350A1.TRXN-TYPE = 'CH' 
1368   OR (HIS350A1.TRXN-TYPE = 'EN' AND HIS350A1.SUBSCR-BEFORE) 
1369     MOVE BY NAME HIS350A1 TO HIS357A1 
1370     CALLNAT 'HIS357N1' /* Get Dependent Data 
1371       HIS357A1 
1372     IF HIS357A1.HAS-ERROR /* Handle errors from subroutine 
1373       FOR #I 1 HIS357A1.ERROR-COUNT 
1374         #E-MSG := HIS357A1.ERROR-MESSAGE(#I) 
1375         #E-FLD := HIS357A1.ERROR-FIELDS(#I) 
1376         #E-NDX := HIS357A1.ERROR-INDEX(#I) 
1377         PERFORM ADD-ERROR 
1378       END-FOR /* #I 
1379     END-IF /* (1372) 
1380     MOVE BY NAME HIS357A1.DEPENDENT-INFO TO HIS350A1 
1381     MOVE BY NAME HIS357A1.SUSPENSE-INFO TO HIS350A1 
1382     MOVE BY NAME HIS357A1.MESSAGE-INFO TO HIS350A1 
1383   END-IF /* (1367) 
1384 END-IF /* (1366) 
1385 * 
1386 IF HIS350A1.ACTION = 'EDIT' 
1387 **  and his350a1.change-reason ne 'AR' 
1388     and not(his350a1.change-reason = 'AR' or = 'BE') /* gsd20061201a 
1389   IF HIS350A1.EFFECTIVE-DATE-N > 0 
1390       AND NOT HIS350A1.EFFECTIVE-DATE-N = 15820000 THRU 26990000 
1391     #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
1392     MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
1393     MOVE EDITED #WORK-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
1394     COMPRESS 'Effective Date (' #DISPLAY-DATE1 
1395       ') is not a valid date' INTO #E-MSG 
1396     #E-FLD := 'EFFECTIVE-DATE-N' 
1397     PERFORM ADD-ERROR 
1398     ESCAPE ROUTINE 
1399   END-IF 
1400 * if any dependents do not have seq number, it will be assigned here. 
1401   #LAST-SEQ-NUM := *MAXVAL(HIS350A1.DEP-SEQ-NUM(*)) 
1402   FOR #I 1 15 
1403     IF (HIS350A1.DEP-LAST-NAME(#I) NE ' ' 
1404         OR HIS350A1.DEP-FIRST-NAME(#I) NE ' ') 
1405         AND HIS350A1.DEP-SEQ-NUM(#I) = 0 
1406       ADD 1 TO #LAST-SEQ-NUM 
1407       HIS350A1.DEP-SEQ-NUM(#I) := #LAST-SEQ-NUM 
1408     END-IF 
1409   END-FOR 
1410 * 
1411 * if his350a1.dep-relation(#i) = mask(.'1'.) /* gsd20070922b start 
1412 *   ignore 
1413 *   find (1) 
1414 *   end-find 
1415 * end-if                                     /* gsd20070922b end 
1416 * 
1417   FIND (1) SUBSCR-PLAN-CAT WITH SSN = HIS350A1.SSN 
1418     #PLAN-CAT := SUBSCR-PLAN-CAT.HLTH-PLAN-CATEGORY 
1419   END-FIND 
1420   #NEW-PLAN-CAT := HIS350A1.HLTH-PLAN-CATEGORY 
1421   FR2. FOR #I 1 TO 15 
1422     if his350a1.dep-seq-num(#i) = 0 /* gsd20070915 start 
1423       escape bottom 
1424     end-if                 /* gsd20070915 end 
1425     if (his350A1.DEP-HLTH-STATUS(#I) = ' ' or = mask('T'.) 
1426         and  his350a1.deP-HLTH-pending-ST(#I) = ' ' or = mask('T'.)) 
1427         and (his350A1.DEP-dntl-STATUS(#I) = ' ' or = mask('T'.) 
1428         and his350a1.DEP-dntl-pending-ST(#I) = ' ' or = mask('T'.)) 
1429         and (his350A1.DEP-dl-STATUS(#I) = ' ' or = mask('T'.) 
1430         and his350a1.DEP-dl-pending-ST(#I) = ' ' or = mask('T'.)) 
1431         and (his350A1.DEP-ols-STATUS(#I) = ' ' or = mask('T'.) 
1432         and his350a1.DEP-ols-pending-St(#I) = ' ' or = mask('T'.)) 
1433 * skipping this dependent.  But the user could have activated this 
1434 * dependent, then deactivated - thus changing the dep-___-eff-date. 
1435 * it needs to be reset back to it's original value. 
1436       perform get-orig-dep-eff-dates 
1437       perform reset-dep-eff-dates 
1438       escape top 
1439     end-if 
1440 /* If no DEP data entered, do not do validations 
1441     IF HIS350A1.DEP-SSN(#I) = ' ' 
1442         AND HIS350A1.DEP-LAST-NAME(#I) = ' ' 
1443         AND HIS350A1.DEP-RELATION (#I) = ' ' 
1444         AND HIS350A1.DEP-ELIGIBILITY (#I) = ' ' 
1445         AND (HIS350A1.DEP-HLTH-PENDING-ST(#I) = ' ' 
1446         AND HIS350A1.DEP-HLTH-STATUS(#I) = ' ') 
1447 *         and HIS350A1.DEP-HLTH-EFF-DATE-N(#I) NE MASK(YYYYMMDD) 
1448         AND (HIS350A1.DEP-DNTL-PENDING-ST(#I) = ' ' 
1449         AND HIS350A1.DEP-DNTL-STATUS(#I) = ' ') 
1450         AND HIS350A1.DEP-DNTL-EFF-DATE-N(#I) NE MASK(YYYYMMDD) 
1451         AND (HIS350A1.DEP-DL-PENDING-ST(#I) = ' ' 
1452         AND HIS350A1.DEP-DL-STATUS(#I) = ' ') 
1453         AND HIS350A1.DEP-DL-EFF-DATE-N(#I) NE MASK(YYYYMMDD) 
1454         AND (HIS350A1.DEP-OLS-PENDING-ST(#I) = ' ' 
1455         AND HIS350A1.DEP-OLS-STATUS(#I) = ' ') 
1456         AND HIS350A1.DEP-OLS-EFF-DATE-N(#I) NE MASK(YYYYMMDD) 
1457       RESET HIS350A1.DEP-HLTH-EFF-DATE-N(#I) 
1458       ESCAPE BOTTOM(FR2.) /* #I 
1459     END-IF /* (1450) 
1460 * 
1461     IF (HIS350A1.DEP-HLTH-STATUS(#I) ne 'A1' 
1462         and HIS350A1.DEP-DNTL-STATUS(#I) ne 'A1' 
1463         and HIS350A1.DEP-DL-STATUS(#I) ne 'A1' 
1464         and HIS350A1.DEP-OLS-STATUS(#I) ne 'A1') 
1465         and (his350a1.dep-hlth-pending-st(#i) = 'A1' 
1466         or his350a1.dep-dntl-pending-st(#i) = 'A1' 
1467         or his350a1.dep-dl-pending-st(#i) = 'A1')  
1468       if his350a1.dep-hlth-eff-date-n(#i) > his350a1.effective-date-n 
1469           or his350a1.dep-dntl-eff-date-n(#i) > 
1470           his350a1.effective-date-n 
1471           or his350a1.dep-dl-eff-date-n(#i) > 
1472           his350a1.effective-date-n 
1473           or his350a1.dep-ols-eff-date-n(#i) > 
1474           his350a1.effective-date-n 
1475         COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
1476           '| cannot be activated with this Effective Date' into #E-MSG 
1477         PERFORM ADD-ERROR 
1478         escape bottom immediate 
1479       end-if /* (4625) 
1480     END-IF 
1481 * 
1482     IF (HIS350A1.SEX = 'M' 
1483         AND HIS350A1.DEP-RELATION(#I) = '11A') 
1484         OR (HIS350A1.SEX = 'F' 
1485         AND HIS350A1.DEP-RELATION(#I) = '21A') 
1486       #SAME-SEX := TRUE 
1487     END-IF 
1488 * 
1489     IF (HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
1490         OR (HIS350A1.DEP-HLTH-PENDING-ST(#I) = ' ' 
1491         AND HIS350A1.DEP-HLTH-STATUS(#I) = 'A1') 
1492         OR HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1' 
1493         OR(HIS350A1.DEP-DNTL-PENDING-ST(#I) = ' ' 
1494         AND HIS350A1.DEP-DNTL-STATUS(#I) = 'A1') 
1495         OR HIS350A1.DEP-DL-PENDING-ST(#I) = 'A1' 
1496         OR (HIS350A1.DEP-DL-PENDING-ST(#I) = ' ' 
1497         AND HIS350A1.DEP-DL-STATUS(#I) = 'A1') 
1498         OR HIS350A1.DEP-OLS-PENDING-ST(#I) = 'A1' 
1499         OR (HIS350A1.DEP-OLS-PENDING-ST(#I) = ' ' 
1500         AND HIS350A1.DEP-OLS-STATUS(#I) = 'A1'))  
1501         AND HIS350A1.DEP-ELIGIBILITY(#I) = '5' 
1502       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
1503         '| has incorrect Relation or Coverage Status' INTO #E-MSG 
1504       #E-FLD := 'DEP-ELIGIBILITY' 
1505       PERFORM ADD-ERROR 
1506     END-IF /* (1489) 
1507 * 
1508     IF HIS350A1.TRXN-TYPE = 'CH' 
1509       IF HIS350A1.DEP-SSN(#I) NE ' ' 
1510         FDM1. FIND DEPEND-MAST WITH DEP-SSN = HIS350A1.DEP-SSN(#I) 
1511             WHERE DEPEND-MAST.DEP-SUBSCRIBER-SSN = HIS350A1.SSN 
1512           IF NO RECORD 
1513             ESCAPE BOTTOM(FDM1.) 
1514           END-NOREC 
1515         END-FIND /* (1515) fdm1. depend-mast 
1516       END-IF 
1517       IF HIS350A1.CHANGE-REASON = 'OE' /* Open Enrollment 
1518         IF (HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
1519             AND HIS350A1.DEP-HLTH-STATUS(#I) = MASK('T'.) OR = ' ') 
1520             OR HIS350A1.DEP-NEW-ADD-PENDING(#I) 
1521           HIS350A1.DEP-LATE-ENTRANT(#I) := 'Y' 
1522         END-IF 
1523       END-IF 
1524       IF HIS350A1.DEP-NEW-ADD-PENDING(#I) 
1525         #SAME := TRUE 
1526       ELSE 
1527         IF HIS350A1.DEP-ELIGIBILITY(#I) = '4' 
1528             AND DEPEND-MAST.DEP-ELIGIBILITY = '4' 
1529           #SAME := TRUE 
1530         ELSE 
1531           #SAME := FALSE 
1532         END-IF 
1533       END-IF /* (1523) 
1534       IF HIS350A1.DEP-ELIGIBILITY(#I) = '4' 
1535           AND NOT #SAME 
1536         COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
1537           '| cannot be changed to  Permanently Incapacitated' 
1538           INTO #E-MSG 
1539         #E-FLD := 'DEP-ELIGIBILITY' 
1540         PERFORM ADD-ERROR 
1541       END-IF 
1542     END-IF /* (1508) Change 
1543 * 
1544     #suffix := his350a1.dep-suffix(#i)            /* gsd20070806 start 
1545     FOR #p 1 TO 3 
1546       IF #SUFF-NAME(#p) = '.' 
1547         #SUFF-NAME(#p) := ' ' 
1548       END-IF 
1549     END-FOR 
1550     his350a1.dep-suffix(#i) := #suffix            /* gsd20070806 end 
1551 * 
1552     IF HIS350A1.DEP-DATE-OF-BIRTH-N(#I) = 0 
1553       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
1554         '| Date of Birth is required.' INTO #E-MSG 
1555       #E-FLD := 'DEP-DATE-OF-BIRTH' 
1556       PERFORM ADD-ERROR 
1557       ESCAPE ROUTINE 
1558     ELSE /* (1544) 
1559       #DATE-WORK := HIS350A1.DEP-DATE-OF-BIRTH-N(#I) 
1560       IF #DATE-WORK NE MASK(YYYYMMDD) 
1561         COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
1562           '| Date of Birth is not valid.' INTO #E-MSG 
1563         #E-FLD := 'DEP-DATE-OF-BIRTH' 
1564         PERFORM ADD-ERROR 
1565         ESCAPE ROUTINE 
1566       END-IF 
1567     END-IF /* (1544) 
1568     IF HIS350A1.DEP-ELIGIBILITY(#I) = '1' 
1569       IF HIS350A1.EFFECTIVE-DATE-N > 0 
1570           AND HIS350A1.DEP-DATE-OF-BIRTH-N(#I) > 0 
1571         #DEP-AGE := (HIS350A1.EFFECTIVE-DATE-N - 
1572           HIS350A1.DEP-DATE-OF-BIRTH-N(#I)) / 10000 
1573         IF #DEP-AGE > 18 
1574           IF HIS350A1.CHANGE-REASON = 'AE'  
1575           COMPRESS 'Dependent |' his350a1.dep-seq-num(#I)  
1576              '| Student certification is required prior to'  
1577  'making this Change. Contact your BA.'  
1578              into #e-msg  
1579            else  
1580           COMPRESS 'Dependent |' his350a1.dep-seq-num(#I)  
1581             '| cannot be ''Child Under 19'' ' 
1582             'because (s)he is' #DEP-AGE ' years old' INTO #E-MSG 
1583           END-IF  
1584           PERFORM ADD-ERROR 
1585         END-IF  
1586       END-IF 
1587     END-IF 
1588     IF HIS350A1.DEP-ELIGIBILITY(#I) = '2'       /* gsd2007094b start 
1589       IF HIS350A1.EFFECTIVE-DATE-N > 0 
1590           AND HIS350A1.DEP-DATE-OF-BIRTH-N(#I) > 0 
1591         #DEP-AGE := (HIS350A1.EFFECTIVE-DATE-N - 
1592           HIS350A1.DEP-DATE-OF-BIRTH-N(#I)) / 10000 
1593         IF #DEP-AGE > 25 
1594           COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
1595             '| cannot be ''Full-time student'' ' 
1596             'because (s)he is' #DEP-AGE ' years old' INTO #E-MSG 
1597           PERFORM ADD-ERROR 
1598         END-IF 
1599       END-IF 
1600     END-IF                                      /* gsd2007094b end 
1601     find (1) dep with dep.dep-ssn = his350a1.dep-ssn(#i) 
1602         where dep.DEP-SUBSCRIBER-SSN = his350a1.ssn 
1603     end-find 
1604     IF (HIS350A1.DEP-NEW-ADD-PENDING(#I) 
1605         OR (HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
1606         AND HIS350A1.DEP-HLTH-STATUS(#I) = MASK('T'.) OR = ' ') 
1607         OR (HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1' 
1608         AND HIS350A1.DEP-DNTL-STATUS(#I) = MASK('T'.) OR = ' ') 
1609         OR (HIS350A1.DEP-DL-PENDING-ST(#I) = 'A1' 
1610         AND HIS350A1.DEP-DL-STATUS(#I) = MASK('T'.) OR = ' ')) 
1611         or (HIS350A1.DEP-ELIGIBILITY(#I) ne dep.DEP-ELIGIBILITY /* gsd  20060818b 
1612         and dep.DEP-ELIGIBILITY ne ' ') 
1613       IF HIS350A1.DEP-ELIGIBILITY(#I) = '2' 
1614         IF HIS350A1.EFFECTIVE-DATE-N > 0 
1615             AND HIS350A1.DEP-DATE-OF-BIRTH-N(#I) > 0 
1616           #DEP-AGE := (HIS350A1.EFFECTIVE-DATE-N - 
1617             HIS350A1.DEP-DATE-OF-BIRTH-N(#I)) / 10000 
1618           IF #DEP-AGE < 25 
1619             HIS350A1.DEP-ELIGIBILITY(#I) := '2A' 
1620           END-IF 
1621         END-IF 
1622       END-IF /* (1598) 
1623       IF HIS350A1.DEP-ELIGIBILITY(#I) = MASK('2'.) 
1624           AND HIS350A1.DEP-AUDITED-DATE-N(#I) = 0 
1625         HIS350A1.DEP-AUDITED-DATE-N(#I) := *DATN 
1626       END-IF 
1627     END-IF /* (1587) 
1628 * 
1629     IF NOT(HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
1630       if his350a1.subscriber-type = 'AR'  
1631       IF HIS350A1.DEP-DL-PENDING-ST(#I) = 'A1' 
1632         COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
1633           '| not eligible for Dep Life Child ' 
1634           'because subscriber is part-time' INTO #E-MSG 
1635         PERFORM ADD-ERROR 
1636       END-IF 
1637       IF HIS350A1.DEP-OLS-PENDING-ST(#I) = 'A1' 
1638         COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
1639           '| not eligible for Dep Life Spouse' 
1640           ' because subscriber is part-time' INTO #E-MSG 
1641         PERFORM ADD-ERROR 
1642       END-IF 
1643       end-if  
1644     END-IF /* (1629) 
1645 * 
1646     PERFORM CHECK-OTHER-COVERAGE 
1647 * 
1648     perform get-orig-dep-eff-dates 
1649 * 
1650     IF HIS350A1.DEP-HLTH-STATUS(#I) = ' ' 
1651         AND HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
1652       HIS350A1.DEP-HLTH-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
1653     END-IF 
1654     IF #PLAN NE #NEW-PLAN /* pre-existing 
1655         AND HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
1656       HIS350A1.DEP-HLTH-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
1657     END-IF 
1658     IF #CAT NE #NEW-CAT 
1659         AND HIS350A1.DEP-HLTH-PENDING-ST(#I) NE ' ' 
1660         AND HIS350A1.DEP-HLTH-PENDING-ST(#I) NE 
1661         HIS350A1.DEP-HLTH-STATUS(#I) 
1662       HIS350A1.DEP-HLTH-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
1663     END-IF 
1664     IF HIS350A1.DEP-HLTH-PENDING-ST(#I) NE ' ' 
1665       HIS350A1.DEP-HLTH-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
1666     END-IF 
1667     IF HIS350A1.DEP-DNTL-STATUS(#I) = ' ' 
1668         AND HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1' 
1669       HIS350A1.DEP-DNTL-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
1670     END-IF 
1671     #PLAN-CAT := SUBSCR-MAST.DNTL-PLAN-CATEGORY 
1672     #NEW-PLAN-CAT := HIS350A1.DNTL-PLAN-CATEGORY 
1673     IF #PLAN NE #NEW-PLAN 
1674         AND HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1' 
1675       HIS350A1.DEP-DNTL-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
1676     END-IF 
1677     IF #CAT NE #NEW-CAT 
1678         AND HIS350A1.DEP-DNTL-PENDING-ST(#I) NE ' ' 
1679         AND HIS350A1.DEP-DNTL-PENDING-ST(#I) NE 
1680         HIS350A1.DEP-DNTL-STATUS(#I) 
1681       HIS350A1.DEP-DNTL-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
1682     END-IF 
1683     IF HIS350A1.DEP-DNTL-PENDING-ST(#I) NE ' ' 
1684       HIS350A1.DEP-DNTL-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
1685     END-IF 
1686     IF HIS350A1.DEP-DL-PENDING-ST(#I) NE ' ' 
1687       HIS350A1.DEP-DL-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
1688     END-IF 
1689     IF HIS350A1.DEP-OLS-PENDING-ST(#I) NE ' ' 
1690       HIS350A1.DEP-OLS-EFF-DATE-N (#I) := HIS350A1.EFFECTIVE-DATE-N 
1691     END-IF 
1692 * 
1693 * reset dependent effective dates if user added, then removed, etc. 
1694 * write (1) '9' 
1695     perform reset-dep-eff-dates 
1696 * 
1697     HIS808A2.INDEX := #I 
1698     HIS808A2.SSN := HIS350A1.SSN 
1699     if his350a1.subscriber-type = 'AR'  
1700       IF HIS350A1.DATE-HIRED-N = 0  
1701         #E-MSG := 'Date of Hire is required on Enrollee Data screen'  
1702         #E-FLD := 'DATE-HIRED-N'  
1703         PERFORM ADD-ERROR  
1704         ESCAPE ROUTINE immediate  
1705       ELSE  
1706         HIS808A2.DATE-HIRED := HIS350A1.DATE-HIRED-N  
1707       END-IF  
1708     end-if  
1709     HIS808A2.HLTH-STATUS := HIS350A1.HLTH-STATUS 
1710     HIS808A2.HLTH-PLAN-CATEGORY := HIS350A1.HLTH-PLAN-CATEGORY 
1711     HIS808A2.HLTH-EFF-DATE := HIS350A1.HLTH-EFF-DATE-N 
1712     HIS808A2.DEP-SSN(#I) := HIS350A1.DEP-SSN(#I) 
1713     HIS808A2.DEP-DOB(#I) := HIS350A1.DEP-DATE-OF-BIRTH-N(#I) 
1714     HIS808A2.DEP-ELIG(#I) := HIS350A1.DEP-ELIGIBILITY(#I) 
1715     HIS808A2.DEP-RELATION(#I) := HIS350A1.DEP-RELATION(#I) 
1716     IF HIS350A1.DEP-HLTH-PENDING-ST(#I) NE ' ' 
1717       HIS808A2.DEP-HLTH-COVER(#I) := HIS350A1.DEP-HLTH-PENDING-ST(#I) 
1718     ELSE 
1719       HIS808A2.DEP-HLTH-COVER(#I) := HIS350A1.DEP-HLTH-STATUS(#I) 
1720     END-IF 
1721     HIS808A2.DEP-HLTH-EFF-DATE(#I) := HIS350A1.DEP-HLTH-EFF-DATE-N(#I) 
1722     HIS808A2.DEP-HLTH-END-DATE(#I) := HIS350A1.DEP-HLTH-END-DATE-N(#I) 
1723     IF HIS350A1.DEP-DNTL-PENDING-ST(#I) NE ' ' 
1724       HIS808A2.DEP-DNTL-COVER(#I) := HIS350A1.DEP-DNTL-PENDING-ST(#I) 
1725     ELSE 
1726       HIS808A2.DEP-DNTL-COVER(#I) := HIS350A1.DEP-DNTL-STATUS(#I) 
1727     END-IF 
1728     HIS808A2.DEP-DNTL-EFF-DATE(#I) := HIS350A1.DEP-DNTL-EFF-DATE-N(#I) 
1729     HIS808A2.DEP-DNTL-END-DATE(#I) := HIS350A1.DEP-DNTL-END-DATE-N(#I) 
1730     IF HIS350A1.DEP-DL-PENDING-ST(#I) NE ' ' 
1731       HIS808A2.DEP-DL-COVER(#I) := HIS350A1.DEP-DL-PENDING-ST(#I) 
1732     ELSE 
1733       HIS808A2.DEP-DL-COVER(#I) := HIS350A1.DEP-DL-STATUS(#I) 
1734     END-IF 
1735     HIS808A2.DEP-DL-EFF-DATE(#I) := HIS350A1.DEP-DL-EFF-DATE-N(#I) 
1736     HIS808A2.DEP-DL-END-DATE(#I) := HIS350A1.DEP-DL-END-DATE-N(#I) 
1737 * 
1738     CALLNAT 'KIS808N2' /* CALCULATE DEPEND END DATE 
1739       HIS808A2 
1740 * 
1741     HIS350A1.DEP-HLTH-END-DATE-N(#I) := 
1742       HIS808A2.DEP-HLTH-END-DATE-N(#I) 
1743     HIS350A1.DEP-DNTL-END-DATE-N(#I) := 
1744       HIS808A2.DEP-DNTL-END-DATE-N(#I) 
1745     HIS350A1.DEP-DL-END-DATE-N(#I) := 
1746       HIS808A2.DEP-DL-END-DATE-N(#I) 
1747 * 
1748     IF HIS350A1.TRXN-TYPE = 'EN' 
1749       HIS808A1.MENU-TRANS-CODE := 'A1' 
1750     ELSE /* 'CH' 
1751       HIS808A1.MENU-TRANS-CODE := 'C3' 
1752     END-IF 
1753     MOVE HIS350A1.SSN TO HIS808A1.SSN 
1754     MOVE HIS350A1.DATE-HIRED-N TO HIS808A1.DATE-HIRED 
1755     MOVE HIS350A1.HLTH-STATUS TO HIS808A1.HLTH-STATUS 
1756     MOVE HIS350A1.HLTH-EFF-DATE-N TO HIS808A1.HLTH-EFF-DATE 
1757     HIS808A1.PROGRAM-NAME := 'HIS808NS' 
1758     HIS808A1.INDEX := #I 
1759     MOVE HIS350A1.DEP-SSN(#I) TO HIS808A1.DEP-SSN(#I) 
1760     MOVE HIS350A1.DEP-DATE-OF-BIRTH-N(#I) TO HIS808A1.DEP-DOB(#I) 
1761     IF HIS350A1.DEP-HLTH-PENDING-ST(#I) NE ' ' 
1762       MOVE HIS350A1.DEP-HLTH-PENDING-ST(#I) 
1763         TO HIS808A1.DEP-HLTH-COVER(#I) 
1764     ELSE 
1765       MOVE HIS350A1.DEP-HLTH-STATUS(#I) 
1766         TO HIS808A1.DEP-HLTH-COVER(#I) 
1767     END-IF 
1768     MOVE HIS350A1.DEP-HLTH-STATUS(#I) 
1769       TO HIS808A1.ORIG-DEP-HLTH-COVER(#I) 
1770     MOVE HIS350A1.DEP-HLTH-EFF-DATE-N(#I) TO 
1771       HIS808A1.DEP-HLTH-EFF-DATE(#I) 
1772     IF HIS350A1.CHANGE-REASON = 'OE' /* Open Enrollment 
1773       IF (HIS350A1.DEP-HLTH-STATUS(#I) = MASK('T'.) OR = ' ' 
1774           AND HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1') 
1775           OR HIS350A1.DEP-NEW-ADD-PENDING(#I) 
1776         HIS350A1.DEP-LATE-ENTRANT(#I) := 'Y' 
1777       END-IF 
1778     END-IF 
1779     MOVE HIS350A1.DEP-LATE-ENTRANT(#I) TO HIS808A1.DEP-LATE-ENTRANT(#I  ) 
1780     MOVE HIS350A1.DEP-PRIOR-SRVC-BEG-DATE-N(#I) TO 
1781       HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) 
1782     MOVE HIS350A1.DEP-PRIOR-SRVC-END-DATE-N(#I) TO 
1783       HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) 
1784     MOVE HIS350A1.DEP-PRE-EX-END-DATE-N(#I) TO 
1785       HIS808A1.DEP-PRE-EX-END-DATE(#I) 
1786 * 
1787     PERFORM YYYYMMDD-TO-MMDDYYYY 
1788     IF #ESCAPE 
1789       ESCAPE ROUTINE 
1790     END-IF 
1791 * 
1792     CALLNAT 'KIS808N1' /* CALCULATE PRE-EX-DATE for Dependents 
1793       HIS808A1 
1794 * 
1795     PERFORM MMDDYYYY-TO-YYYYMMDD 
1796     MOVE HIS808A1.DEP-PRE-EX-END-DATE(#I) TO #DATE-TRANSFER-A 
1797     MOVE #DATE-TRANSFER-N TO HIS350A1.DEP-PRE-EX-END-DATE-N(#I) 
1798 * 
1799 /* Newborn Pre-ex reset 
1800 **    if his350a1.dep-date-of-birth-n(#i) = 
1801 **        his350a1.dep-hlth-eff-date-n(#i) and 
1802 **        #ORIG-DEP-HLTH-EFF-DATE(#I) = 0 
1803 **    reset #DEP-PRE-EX-END-DATE(#I) 
1804 **  end-if 
1805 /* Adopted Pre-ex reset                         /* gsd20070814a start 
1806     IF his350a1.dep-relation(#i) = '2D' 
1807       reset HIS350A1.DEP-PRE-EX-END-DATE-N(#I) 
1808     END-IF                                      /* gsd20070814a end 
1809 * 
1810     IF HIS350A1.DEP-DATE-OF-BIRTH-N(#I) = 
1811         HIS350A1.DEP-HLTH-EFF-DATE-N(#I) 
1812         AND #DEP-HLTH-EFF-DATE-N = 0 
1813       RESET HIS350A1.DEP-PRE-EX-END-DATE-N(#I) 
1814     END-IF 
1815 * 
1816     IF HIS350A1.DEP-OTHER-INS-IND(#I) = 'Y' 
1817       IF HIS350A1.DATE-OF-BIRTH-N > 0 
1818         #SUB-DOB-A := HIS350A1.DATE-OF-BIRTH-N 
1819         MOVE EDITED #SUB-DOB-A TO #SUB-DOB-D(EM=YYYYMMDD) 
1820         MOVE EDITED #SUB-DOB-D(EM=MMDD) TO #SUB-DOB-MMDD-A 
1821       END-IF 
1822       IF HIS350A1.DEP-INS-POLICY-HOLDER-DOB-N(#I) > 0 
1823         #DPH-DOB-A := HIS350A1.DEP-INS-POLICY-HOLDER-DOB-N(#I) 
1824         MOVE EDITED #DPH-DOB-A TO #DPH-DOB-D(EM=YYYYMMDD) 
1825         MOVE EDITED #DPH-DOB-D(EM=MMDD) TO #DPH-DOB-MMDD-A 
1826       END-IF 
1827       IF HIS350A1.DEP-RELATION(#I) NE MASK(.'1'.) 
1828         DECIDE FOR FIRST CONDITION 
1829           WHEN #DPH-DOB-MMDD-N < #SUB-DOB-MMDD-N 
1830             HIS350A1.DEP-INS-PRIM/SEC-IND(#I) := 'P' 
1831           WHEN #DPH-DOB-MMDD-N > #SUB-DOB-MMDD-N 
1832             HIS350A1.DEP-INS-PRIM/SEC-IND(#I) := 'S' 
1833           WHEN #DPH-DOB-MMDD-N = #SUB-DOB-MMDD-N 
1834             DECIDE FOR FIRST CONDITION 
1835               WHEN HIS350A1.DEP-INS-EFF-DATE-N(#I) < 
1836                   HIS350A1.HLTH-EFF-DATE-N 
1837                 HIS350A1.DEP-INS-PRIM/SEC-IND(#I) := 'P' 
1838               WHEN HIS350A1.DEP-INS-EFF-DATE-N(#I) > 
1839                   HIS350A1.HLTH-EFF-DATE-N 
1840                   OR HIS350A1.DEP-INS-EFF-DATE-N(#I) = 
1841                   HIS350A1.HLTH-EFF-DATE-N 
1842                 HIS350A1.DEP-INS-PRIM/SEC-IND(#I) := 'S' 
1843               WHEN NONE 
1844                 IGNORE 
1845             END-DECIDE 
1846           WHEN NONE 
1847             IGNORE 
1848         END-DECIDE 
1849       ELSE /* (1827) 
1850         HIS350A1.DEP-INS-PRIM/SEC-IND(#I) := 'P' 
1851       END-IF /* (1827) 
1852     END-IF /* (1814) 
1853 * 
1854     #DEP-RELATION := HIS350A1.DEP-RELATION(#I) 
1855     #DEP-ELIGIBILITY := HIS350A1.DEP-ELIGIBILITY(#I) 
1856     #DEP-DATE-OF-BIRTH-N := HIS350A1.DEP-DATE-OF-BIRTH-N(#I) 
1857     #DEP-HLTH-EFF-DATE-N := HIS350A1.DEP-HLTH-EFF-DATE-N(#I) 
1858     #DEP-DNTL-EFF-DATE-N := HIS350A1.DEP-DNTL-EFF-DATE-N(#I) 
1859     #DEP-DL-EFF-DATE-N := HIS350A1.DEP-DL-EFF-DATE-N(#I) 
1860   END-FOR /* (1407) FR2. #i 
1861 * 
1862   FOR #I 1 15 
1863     IF HIS350A1.DEP-RELATION(#I) = MASK(.'1A') 
1864       IF #SPOUSE-EXISTS 
1865         #E-MSG := 'Subscriber cannot have more than one lawful spouse' 
1866         PERFORM ADD-ERROR 
1867       END-IF 
1868       #SPOUSE-EXISTS := TRUE 
1869       IF HIS350A1.DEP-DATE-OF-BIRTH-N(#I) > 0 
1870         #SPOUSE-DOB-N := HIS350A1.DEP-DATE-OF-BIRTH-N(#I) 
1871       END-IF 
1872     END-IF /* (1863) 
1873   END-FOR /* (1861) #i 
1874 * Make sure multiple spouses do not have same coverage 
1875   FOR #I 1 15 
1876     IF HIS350A1.DEP-RELATION(#I) = MASK(.'1'.) 
1877       FOR #J 1 15 
1878         IF #I = #J /* Do not compare record to itself 
1879           ESCAPE TOP 
1880         END-IF 
1881         IF HIS350A1.DEP-RELATION(#J) = MASK(.'1'.) 
1882           DECIDE FOR EVERY CONDITION 
1883             WHEN (HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
1884                 OR (HIS350A1.DEP-HLTH-STATUS(#I) = 'A1' 
1885                 AND HIS350A1.DEP-HLTH-PENDING-ST(#I) = ' ')) 
1886                 AND (HIS350A1.DEP-HLTH-PENDING-ST(#J) = 'A1' 
1887                 OR (HIS350A1.DEP-HLTH-STATUS(#J) = 'A1' 
1888                 AND HIS350A1.DEP-HLTH-PENDING-ST(#J) = ' ')) 
1889               #E-MSG := 'Multiple spouses cannot be active for'- 
1890                 ' Health coverage' 
1891               PERFORM ADD-ERROR 
1892             WHEN (HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1' 
1893                 OR (HIS350A1.DEP-DNTL-STATUS(#I) = 'A1' 
1894                 AND HIS350A1.DEP-DNTL-PENDING-ST(#I) = ' ')) 
1895                 AND (HIS350A1.DEP-DNTL-PENDING-ST(#J) = 'A1' 
1896                 OR (HIS350A1.DEP-DNTL-STATUS(#J) = 'A1' 
1897                 AND HIS350A1.DEP-DNTL-PENDING-ST(#J) = ' ')) 
1898               #E-MSG := 'Multiple spouses cannot be active for'- 
1899                 ' Dental coverage' 
1900               PERFORM ADD-ERROR 
1901             WHEN (HIS350A1.DEP-DL-PENDING-ST(#I) = 'A1' 
1902                 OR (HIS350A1.DEP-DL-STATUS(#I) = 'A1' 
1903                 AND HIS350A1.DEP-DL-PENDING-ST(#I) = ' ')) 
1904                 AND (HIS350A1.DEP-DL-PENDING-ST(#J) = 'A1' 
1905                 OR (HIS350A1.DEP-DL-STATUS(#J) = 'A1' 
1906                 AND HIS350A1.DEP-DL-PENDING-ST(#J) = ' ')) 
1907               #E-MSG := 'Multiple spouses cannot be active for'- 
1908                 ' Dep Life Spouse coverage' 
1909               PERFORM ADD-ERROR 
1910             WHEN ANY ESCAPE ROUTINE 
1911             WHEN NONE IGNORE 
1912           END-DECIDE /* (1882) 
1913         END-IF /* (1878) 
1914       END-FOR /* (1877) #j 
1915     END-IF 
1916     if his350a1.dep-new-add-pending(#i)         /* gsd20071106c start 
1917         and his350a1.dep-relation(#I) ne mask (.'1'.) /* mws20080320 
1918         and his350a1.dep-State-emp/ret-ind(#i) ne 'A'   /* MWS20080227 
1919         and his350a1.dep-hlth-pending-st(#i) ne 'A1' 
1920         and his350a1.dep-dntl-pending-st(#i) ne 'A1' 
1921         and his350a1.dep-dl-pending-st(#i) ne 'A1' 
1922         and his350a1.dep-ols-pending-st(#i) ne 'A1' 
1923       compress 'Dependent |' his350a1.dep-seq-num(#I)  
1924                 '| cannot be added without coverage'  
1925         into #e-msg 
1926       perform add-error 
1927     end-if                                      /* gsd20071106c end 
1928   END-FOR /* (1874) #i 
1929   IF HIS350A1.MARITAL-STATUS = 'M' 
1930     IF NOT #SPOUSE-EXISTS 
1931       if his350a1.subscriber-type = 'AR'  
1932         #E-FLD := HIS350A1.DEP-RELATION(1)  
1933         #E-MSG := 'Married subscribers must have a Lawful Spouse. '  
1934         PERFORM ADD-ERROR  
1935       end-if  
1936 ** mws20080320 
1937 **     #E-MSG := ' please contact your benefits administrator to make ' 
1938 **       -'your Open Enrollment change.' 
1939 **      PERFORM ADD-ERROR 
1940 **    PERFORM ADD-ERROR 
1941     END-IF 
1942     IF #SAME-SEX 
1943       IF HIS350A1.SEX = 'F' 
1944         #GENDER := 'female' 
1945       ELSE 
1946         #GENDER := 'male' 
1947       END-IF 
1948       COMPRESS 'Subscriber and spouse cannot both be ' 
1949         #GENDER INTO #E-MSG 
1950       #E-FLD := HIS350A1.DEP-RELATION(1) 
1951       PERFORM ADD-ERROR 
1952     END-IF 
1953   END-IF /* (1865) 
1954 * 
1955   MOVE BY NAME HIS350A1 TO HIS357A1 
1956   CALLNAT 'HIS357N1' /* Update Dependent Data 
1957     HIS357A1 
1958   IF HIS357A1.HAS-ERROR /* Handle errors from subroutine 
1959     FOR #I 1 HIS357A1.ERROR-COUNT 
1960       #E-MSG := HIS357A1.ERROR-MESSAGE(#I) 
1961       #E-FLD := HIS357A1.ERROR-FIELDS(#I) 
1962       #E-NDX := HIS357A1.ERROR-INDEX(#I) 
1963       PERFORM ADD-ERROR 
1964     END-FOR /* #I 
1965   END-IF 
1966   MOVE BY NAME HIS357A1.DEPENDENT-INFO TO HIS350A1 
1967   MOVE BY NAME HIS357A1.SUSPENSE-INFO TO HIS350A1 
1968   MOVE BY NAME HIS357A1.MESSAGE-INFO TO HIS350A1 
1969 END-IF /* (1386) EDIT 
1970 END-SUBROUTINE /* (1363) DEPENDENT-MODULE 
1971 * 
1972 ************************************************************************ 
1973 define subroutine get-orig-dep-eff-dates 
1974 ************************************************************************ 
1975 #DEP-REC-FOUND := 'N' 
1976 IF HIS350A1.DEP-SSN(#I) NE ' ' 
1977   FADM1. FIND ACT-DEPEND-MAST WITH DEP-SSN = HIS350A1.DEP-SSN(#I) 
1978     IF NO 
1979       ESCAPE BOTTOM(FADM1.) 
1980     END-NOREC 
1981     HIS808A1.DEP-ISN(#I) := *ISN 
1982     HIS808A1.ORIG-DEP-HLTH-COVER(#I) := 
1983       ACT-DEPEND-MAST.DEP-HLTH-STATUS 
1984     #DEP-REC-FOUND := 'Y' 
1985   END-FIND /* (1977) fadm1. ACT-DEPEND-MAST 
1986 ELSE /* (1406) 
1987   FADM2. FIND ACT-DEPEND-MAST 
1988       WITH DEP-SUBSCRIBER-SSN = HIS350A1.SSN 
1989     IF NO 
1990       ESCAPE BOTTOM(FADM2.) 
1991     END-NOREC 
1992     IF ACT-DEPEND-MAST.DEP-SEQ-NUM = HIS350A1.DEP-SEQ-NUM(#I) 
1993       HIS808A1.DEP-ISN(#I) := *ISN 
1994       HIS808A1.ORIG-DEP-HLTH-COVER(#I) := 
1995         ACT-DEPEND-MAST.DEP-HLTH-STATUS 
1996       #DEP-REC-FOUND := 'Y' 
1997       #DEP-FOUND-ARRAY(#I) := TRUE 
1998     END-IF 
1999   END-FIND /* (1987) fadm2. ACT-DEPEND-MAST 
2000 END-IF /* (1406) 
2001 IF #DEP-REC-FOUND = 'Y' 
2002   MOVE EDITED ACT-DEPEND-MAST.DEP-HLTH-EFF-DATE (EM=YYYYMMDD) TO 
2003     #DEP-HLTH-EFF-DATE 
2004   MOVE EDITED ACT-DEPEND-MAST.DEP-HLTH-END-DATE (EM=YYYYMMDD) TO 
2005     #DEP-HLTH-END-DATE 
2006   MOVE EDITED ACT-DEPEND-MAST.DEP-DNTL-EFF-DATE (EM=YYYYMMDD) TO 
2007     #DEP-DNTL-EFF-DATE 
2008   MOVE EDITED ACT-DEPEND-MAST.DEP-DNTL-END-DATE (EM=YYYYMMDD) TO 
2009     #DEP-DNTL-END-DATE 
2010   MOVE EDITED ACT-DEPEND-MAST.DEP-DL-EFF-DATE (EM=YYYYMMDD) TO 
2011     #DEP-DL-EFF-DATE 
2012   MOVE EDITED ACT-DEPEND-MAST.DEP-DL-END-DATE (EM=YYYYMMDD) TO 
2013     #DEP-DL-END-DATE 
2014   MOVE EDITED ACT-DEPEND-MAST.DEP-OLS-EFF-DATE (EM=YYYYMMDD) TO 
2015     #DEP-OLS-EFF-DATE 
2016   MOVE EDITED ACT-DEPEND-MAST.DEP-OLS-END-DATE (EM=YYYYMMDD) TO 
2017     #DEP-OLS-END-DATE 
2018 ELSE /* (2001) 
2019   RESET #DEP-HLTH-EFF-DATE #DEP-DNTL-EFF-DATE #DEP-DL-EFF-DATE 
2020     #DEP-OLS-EFF-DATE  
2021     #DEP-HLTH-END-DATE #DEP-DNTL-END-DATE #DEP-DL-END-DATE 
2022     #DEP-OLS-END-DATE  
2023 *****   ADD 1 TO #LAST-SEQ-NUM 
2024 END-IF /* (2001) 
2025 end-subroutine 
2026 * 
2027 ************************************************************************ 
2028 define subroutine reset-dep-eff-dates 
2029 ************************************************************************ 
2030 **IF NOT(HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
2031 decide for every condition 
2032   when his350a1.dep-hlth-status(#i) 
2033       = his350a1.dep-hlth-pending-st(#i) 
2034     his350a1.dep-hlth-eff-date-n(#i) := #dep-hlth-eff-date-n 
2035     his350a1.dep-hlth-end-date-n(#i) := #dep-hlth-end-date-n 
2036   when his350a1.dep-dntl-status(#i) 
2037       = his350a1.dep-dntl-pending-st(#i) 
2038     his350a1.dep-dntl-eff-date-n(#i) := #dep-dntl-eff-date-n 
2039     his350a1.dep-dntl-end-date-n(#i) := #dep-dntl-end-date-n 
2040   when his350a1.dep-dl-status(#i) 
2041       = his350a1.dep-dl-pending-st(#i) 
2042     his350a1.dep-dl-eff-date-n(#i) := #dep-dl-eff-date-n 
2043     his350a1.dep-dl-end-date-n(#i) := #dep-dl-end-date-n 
2044   when his350a1.dep-ols-status(#i) 
2045       = his350a1.dep-ols-pending-st(#i) 
2046     his350a1.dep-ols-eff-date-n(#i) := #dep-ols-eff-date-n 
2047     his350a1.dep-ols-end-date-n(#i) := #dep-ols-end-date-n 
2048   when none ignore 
2049 end-decide 
2050 **END-IF 
2051 end-subroutine 
2052 * 
2053 ************************************************************************ 
2054 DEFINE SUBROUTINE BENEFICIARY-MODULE 
2055 ************************************************************************ 
2056 IF HIS350A1.ACTION = 'GET' 
2057     AND NOT #6-MO-BRK 
2058     AND HIS350A1.SUBSCR-BEFORE 
2059   MOVE BY NAME HIS350A1 TO HIS358A1 
2060   CALLNAT 'HIS358N1' /* AES Beneficiary Driver 
2061     HIS358A1 
2062   IF HIS358A1.HAS-ERROR /* Handle errors from subroutine 
2063     FOR #I 1 HIS358A1.ERROR-COUNT 
2064       #E-MSG := HIS358A1.ERROR-MESSAGE(#I) 
2065       #E-FLD := HIS358A1.ERROR-FIELDS(#I) 
2066       #E-NDX := HIS358A1.ERROR-INDEX(#I) 
2067       PERFORM ADD-ERROR 
2068     END-FOR /* #I 
2069   END-IF 
2070   MOVE BY NAME HIS358A1.BENEFICIARY-INFO TO HIS350A1 
2071   MOVE BY NAME HIS358A1.SUSPENSE-INFO TO HIS350A1 
2072   MOVE BY NAME HIS358A1.MESSAGE-INFO TO HIS350A1 
2073 END-IF /* (2056) 
2074 IF HIS350A1.ACTION = 'EDIT' 
2075     and his350a1.change-reason ne 'AR' 
2076 /* Part-time subscribers cannot enter any beneficiary info 
2077   IF NOT(HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
2078     if his350a1.subscriber-type = 'AR'  
2079     IF HIS350A1.BEN-PAYEE-TYPE(*) NE ' ' 
2080 /* ron20080305 start 
2081 **      #E-MSG := 'Part-time employees cannot enter Beneficiary ' 
2082 **        -'Information' 
2083 **      PERFORM ADD-ERROR 
2084       reset his350a1.BENEFICIARY-DATA(*) 
2085 /* ron20080305 end 
2086       ESCAPE ROUTINE 
2087     ELSE 
2088       ESCAPE ROUTINE 
2089     END-IF 
2090     END-IF  
2091   END-IF 
2092 * if any benes do not have seq number, assign it here /* gsd20070321a start 
2093   #LAST-SEQ-NUM := *MAXVAL(HIS350A1.ben-SEQ-NUM(*)) 
2094 **FOR #I 1 15 
2095   for #i 1 20 
2096     IF HIS350A1.ben-payee-type(#I) NE ' ' 
2097         AND HIS350A1.ben-SEQ-NUM(#I) = 0 
2098       ADD 1 TO #LAST-SEQ-NUM 
2099       HIS350A1.ben-SEQ-NUM(#I) := #LAST-SEQ-NUM 
2100     END-IF 
2101   END-FOR /* gsd20070321a end 
2102 /*Build counters and percentages for each primary and contingent plan 
2103   RESET #WORKING-FIELDS 
2104   FOR #BEN-IDX 1 TO 20 
2105     FOR #I 1 TO 3 /* field allows for 8 
2106       IF #I = 1 
2107           AND NOT(HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = ' ') 
2108           AND HIS350A1.BEN-PAYEE-TYPE(#BEN-IDX) <> ' ' 
2109         #HLTH-SELECTED := TRUE 
2110       ELSE 
2111         IF #I = 2 
2112             AND NOT(HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = ' ') 
2113             AND HIS350A1.BEN-PAYEE-TYPE(#BEN-IDX) <> ' ' 
2114           #OL-SELECTED := TRUE 
2115 **      ELSE  
2116 **        IF #I = 3  
2117 **            AND NOT(HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = ' ')  
2118 **            AND HIS350A1.BEN-PAYEE-TYPE(#BEN-IDX) <> ' '  
2119 **          #LTC-SELECTED := TRUE  
2120 **        END-IF  
2121         END-IF 
2122       END-IF 
2123       DECIDE FOR EVERY CONDITION 
2124 *       WHEN HIS350A1.BEN-PAYEE-TYPE(#BEN-IDX) <> ' ' 
2125 *           AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,1) = ' ' 
2126 *           AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,2) = ' ' 
2127 *           AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,3) = ' ' 
2128 *         COMPRESS 'Beneficiary' #BEN-IDX 'must have at least one ' 
2129 *           'coverage type selected' INTO #E-MSG 
2130 *         PERFORM ADD-ERROR 
2131 *         escape bottom 
2132         WHEN NOT(HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = ' ') 
2133             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = ' ' 
2134           IF #I = 1 
2135             #CODE := 'Basic Life' 
2136           ELSE 
2137             IF #I = 2 
2138               #CODE := 'Optl Life' 
2139             ELSE 
2140               #CODE := 'LTC' 
2141             END-IF 
2142           END-IF 
2143           COMPRESS 'Beneficiary' #BEN-IDX 'must select Prim/Cont for' 
2144             #CODE 'when Coverage is selected' INTO #E-MSG 
2145           PERFORM ADD-ERROR 
2146         WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) = 0 
2147             AND #BEN-BL-PRIM-ENTERED 
2148             AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '1' 
2149             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P' 
2150           #E-MSG := 'Must enter all primary Basic Life percents or none' 
2151           #E-FLD := 'BEN-BENEFIT-PERCENT' 
2152           PERFORM ADD-ERROR 
2153         WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) = 0 
2154             AND #BEN-BL-CON-ENTERED 
2155             AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '1' 
2156             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C' 
2157           #E-MSG := 'Must enter all contingent Basic Life percents' 
2158             -' or none' 
2159           #E-FLD := 'BEN-BENEFIT-PERCENT' 
2160           PERFORM ADD-ERROR 
2161         WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) = 0 
2162             AND #BEN-OL-PRIM-ENTERED 
2163             AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '2' 
2164             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P' 
2165           #E-MSG := 'Must enter all primary Optl Life percents' 
2166             -' or none' 
2167           #E-FLD := 'BEN-BENEFIT-PERCENT' 
2168           PERFORM ADD-ERROR 
2169         WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) = 0 
2170             AND #BEN-OL-CON-ENTERED 
2171             AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '2' 
2172             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C' 
2173           #E-MSG := 'Must enter all contingent Optl Life percents' 
2174             -' or none' 
2175           #E-FLD := 'BEN-BENEFIT-PERCENT' 
2176           PERFORM ADD-ERROR 
2177 **      WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) = 0  
2178 **          AND #BEN-LTC-PRIM-ENTERED  
2179 **          AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '3'  
2180 **          AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P'  
2181 **        #E-MSG := 'Must enter all primary LTC percents or none'  
2182 **        #E-FLD := 'BEN-BENEFIT-PERCENT'  
2183 **        PERFORM ADD-ERROR  
2184 **      WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) = 0  
2185 **          AND #BEN-LTC-CON-ENTERED  
2186 **          AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '3'  
2187 **          AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C'  
2188 **        #E-MSG := 'Must enter all contingent LTC percents or none'  
2189 **        #E-FLD := 'BEN-BENEFIT-PERCENT'  
2190 **        PERFORM ADD-ERROR  
2191         WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) NE 0 
2192             AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '1' 
2193             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P' 
2194           #BEN-BL-PRIM-ENTERED := TRUE 
2195         WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) NE 0 
2196             AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '1' 
2197             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C' 
2198           #BEN-BL-CON-ENTERED := TRUE 
2199         WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) NE 0 
2200             AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '2' 
2201             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P' 
2202           #BEN-OL-PRIM-ENTERED := TRUE 
2203         WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) NE 0 
2204             AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '2' 
2205             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C' 
2206           #BEN-OL-CON-ENTERED := TRUE 
2207 **      WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) NE 0  
2208 **          AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '3'  
2209 **          AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P'  
2210 **        #BEN-LTC-PRIM-ENTERED := TRUE  
2211 **      WHEN HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) NE 0  
2212 **          AND HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '3'  
2213 **          AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C'  
2214 **        #BEN-LTC-CON-ENTERED := TRUE  
2215         WHEN NONE 
2216           IGNORE 
2217       END-DECIDE /* (2123) 
2218 * 
2219       DECIDE FOR FIRST CONDITION 
2220         WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '1' 
2221             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P' 
2222           ADD 1 TO #BEN-BL-PRIM-COUNT 
2223           ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) TO 
2224             #BEN-BL-PRIM-PERCENT 
2225         WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '1' 
2226             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C' 
2227           ADD 1 TO #BEN-BL-CON-COUNT 
2228           ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) TO 
2229             #BEN-BL-CON-PERCENT 
2230         WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '2' 
2231             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P' 
2232           ADD 1 TO #BEN-OL-PRIM-COUNT 
2233           ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) TO 
2234             #BEN-OL-PRIM-PERCENT 
2235         WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '2' 
2236             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C' 
2237           ADD 1 TO #BEN-OL-CON-COUNT 
2238           ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) TO 
2239             #BEN-OL-CON-PERCENT 
2240 **      WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '3'  
2241 **          AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P'  
2242 **        ADD 1 TO #BEN-LTC-PRIM-COUNT  
2243 **        ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) TO  
2244 **          #BEN-LTC-PRIM-PERCENT  
2245 **      WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '3'  
2246 **          AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C'  
2247 **        ADD 1 TO #BEN-LTC-CON-COUNT  
2248 ***       ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) TO  
2249 **          #BEN-LTC-CON-PERCENT  
2250         WHEN NONE 
2251           IGNORE 
2252       END-DECIDE /* (2219) 
2253     END-FOR /* #I (2147) 
2254   END-FOR /* #BEN-IDX (2095) 
2255 * 
2256   IF NOT #HLTH-SELECTED 
2257     IF HIS350A1.SL-STATUS = 'A1' 
2258         AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
2259       #E-MSG := 'Beneficiary required for Basic Life' 
2260       PERFORM ADD-ERROR 
2261       RESET #HLTH-SELECTED 
2262     END-IF 
2263   ELSE 
2264     IF NOT(HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
2265       if his350a1.subscriber-type = 'AR'  
2266       #E-MSG := 'No Basic Life Beneficiary allowed for part-time ' 
2267         -'subscribers' 
2268       PERFORM ADD-ERROR 
2269       END-IF  
2270     END-IF  
2271   END-IF 
2272   IF NOT #OL-SELECTED 
2273     IF HIS350A1.OL-STATUS = 'A1' 
2274         AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
2275       #E-MSG := 'Beneficiary required for Optl. Life' 
2276       PERFORM ADD-ERROR 
2277       RESET #OL-SELECTED 
2278     END-IF 
2279   ELSE 
2280     IF NOT(HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
2281       if his350a1.subscriber-type = 'AR'  
2282       #E-MSG := 'No Optl. Life Beneficiary allowed for part-time ' 
2283         -'subscribers' 
2284       PERFORM ADD-ERROR 
2285       end-if  
2286     END-IF 
2287   END-IF 
2288 * 
2289 /* Compute percentage for both primary and contigent for each plan 
2290   DECIDE FOR EVERY CONDITION 
2291     WHEN #BEN-BL-PRIM-PERCENT = 0 
2292         AND #BEN-BL-PRIM-COUNT > 0 
2293       #COMPUTE-BL-PRIM := TRUE 
2294       #COMP-BL-PRIM-COUNT := #BEN-BL-PRIM-COUNT 
2295       #COMP-BL-PRIM-PERCENT := 100 / #BEN-BL-PRIM-COUNT 
2296     WHEN #BEN-BL-CON-PERCENT = 0 
2297         AND #BEN-BL-CON-COUNT > 0 
2298       #COMPUTE-BL-CON := TRUE 
2299       #COMP-BL-CON-COUNT := #BEN-BL-CON-COUNT 
2300       #COMP-BL-CON-PERCENT := 100 / #BEN-BL-CON-COUNT 
2301     WHEN #BEN-OL-PRIM-PERCENT = 0 
2302         AND #BEN-OL-PRIM-COUNT > 0 
2303       #COMPUTE-OL-PRIM := TRUE 
2304       #COMP-OL-PRIM-COUNT := #BEN-OL-PRIM-COUNT 
2305       #COMP-OL-PRIM-PERCENT := 100 / #BEN-OL-PRIM-COUNT 
2306     WHEN #BEN-OL-CON-PERCENT = 0 
2307         AND #BEN-OL-CON-COUNT > 0 
2308       #COMPUTE-OL-CON := TRUE 
2309       #COMP-OL-CON-COUNT := #BEN-OL-CON-COUNT 
2310       #COMP-OL-CON-PERCENT := 100 / #BEN-OL-CON-COUNT 
2311 **  WHEN #BEN-LTC-PRIM-PERCENT = 0  
2312 **      AND #BEN-LTC-PRIM-COUNT > 0  
2313 **    #COMPUTE-LTC-PRIM := TRUE  
2314 **    #COMP-LTC-PRIM-COUNT := #BEN-LTC-PRIM-COUNT  
2315 **    #COMP-LTC-PRIM-PERCENT := 100 / #BEN-LTC-PRIM-COUNT  
2316 **  WHEN #BEN-LTC-CON-PERCENT = 0  
2317 ***     AND #BEN-LTC-CON-COUNT > 0  
2318 **    #COMPUTE-LTC-CON := TRUE  
2319 **    #COMP-LTC-CON-COUNT := #BEN-LTC-CON-COUNT  
2320 **    #COMP-LTC-CON-PERCENT := 100 / #BEN-LTC-CON-COUNT  
2321     WHEN NONE 
2322       IGNORE 
2323   END-DECIDE /* (2290) 
2324 * 
2325 /* If Percentages are computed determine what amt and store to record 
2326   FOR #BEN-IDX 1 TO 20 
2327     FOR #I 1 TO 3 /* field allows for 8 
2328       DECIDE FOR EVERY CONDITION 
2329         WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '1' 
2330             AND #COMPUTE-BL-PRIM 
2331             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P' 
2332           IF #COMP-BL-PRIM-COUNT = 1 
2333             HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) := 
2334               100 - (#COMP-BL-PRIM-PERCENT * (#BEN-BL-PRIM-COUNT - 1)) 
2335           ELSE 
2336             IF #COMP-BL-PRIM-COUNT > 1 
2337               HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) := 
2338                 #COMP-BL-PRIM-PERCENT 
2339             END-IF 
2340           END-IF 
2341           SUBTRACT 1 FROM #COMP-BL-PRIM-COUNT 
2342           ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) 
2343             TO #BEN-BL-PRIM-PERCENT 
2344         WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '1' 
2345             AND #COMPUTE-BL-CON 
2346             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C' 
2347           IF #COMP-BL-CON-COUNT = 1 
2348             HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) := 
2349               100 - (#COMP-BL-CON-PERCENT * (#BEN-BL-CON-COUNT - 1)) 
2350           ELSE 
2351             IF #COMP-BL-CON-COUNT > 1 
2352               HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) := 
2353                 #COMP-BL-CON-PERCENT 
2354             END-IF 
2355           END-IF 
2356           SUBTRACT 1 FROM #COMP-BL-CON-COUNT 
2357           ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) TO 
2358             #BEN-BL-CON-PERCENT 
2359         WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '2' 
2360             AND #COMPUTE-OL-PRIM 
2361             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P' 
2362           IF #COMP-OL-PRIM-COUNT = 1 
2363             HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) := 
2364               100 - (#COMP-OL-PRIM-PERCENT * (#BEN-OL-PRIM-COUNT - 1)) 
2365           ELSE 
2366             IF #COMP-OL-PRIM-COUNT > 1 
2367               HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) := 
2368                 #COMP-OL-PRIM-PERCENT 
2369             END-IF 
2370           END-IF 
2371           SUBTRACT 1 FROM #COMP-OL-PRIM-COUNT 
2372           ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) 
2373             TO #BEN-OL-PRIM-PERCENT 
2374         WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '2' 
2375             AND #COMPUTE-OL-CON 
2376             AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C' 
2377           IF #COMP-OL-CON-COUNT = 1 
2378             HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) := 
2379               100 - (#COMP-OL-CON-PERCENT * (#BEN-OL-CON-COUNT - 1)) 
2380           ELSE 
2381             IF #COMP-OL-CON-COUNT > 1 
2382               HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) := 
2383                 #COMP-OL-CON-PERCENT 
2384             END-IF 
2385           END-IF 
2386           SUBTRACT 1 FROM #COMP-OL-CON-COUNT 
2387           ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) TO 
2388             #BEN-OL-CON-PERCENT 
2389 **      WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '3'  
2390 **          AND #COMPUTE-LTC-PRIM  
2391 **          AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'P'  
2392 **        IF #COMP-LTC-PRIM-COUNT = 1  
2393 **          HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) :=  
2394 **            100 - (#COMP-LTC-PRIM-PERCENT * (#BEN-LTC-PRIM-COUNT - 1))  
2395 **        ELSE  
2396 **          IF #COMP-LTC-PRIM-COUNT > 1  
2397 **            HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) :=  
2398 **              #COMP-LTC-PRIM-PERCENT  
2399 **          END-IF  
2400 **        END-IF  
2401 **        SUBTRACT 1 FROM #COMP-LTC-PRIM-COUNT  
2402 **        ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) TO  
2403 **          #BEN-LTC-PRIM-PERCENT  
2404 **      WHEN HIS350A1.BEN-INSURANCE-TYPES(#BEN-IDX,#I) = '3'  
2405 **          AND #COMPUTE-LTC-CON  
2406 **          AND HIS350A1.BEN-CODE(#BEN-IDX,#I) = 'C'  
2407 **        IF #COMP-LTC-CON-COUNT = 1  
2408 **          HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) :=  
2409 **            100 - (#COMP-LTC-CON-PERCENT * (#BEN-LTC-CON-COUNT - 1))  
2410 **       ELSE  
2411 **          IF #COMP-LTC-CON-COUNT > 1  
2412 **            HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I) :=  
2413 **              #COMP-LTC-CON-PERCENT  
2414 **          END-IF  
2415 **        END-IF  
2416 **        SUBTRACT 1 FROM #COMP-LTC-CON-COUNT  
2417 **        ADD HIS350A1.BEN-BENEFIT-PERCENT(#BEN-IDX,#I)  
2418 **          TO #BEN-LTC-CON-PERCENT  
2419 * 
2420         WHEN NONE 
2421           IGNORE 
2422       END-DECIDE /* (2328) 
2423     END-FOR /* #I (2327) 
2424 * 
2425     #suffix := his350a1.ben-suffix(#BEN-IDX)      /* gsd20070806 start 
2426     FOR #I 1 TO 3 
2427       IF #SUFF-NAME(#I) = '.' 
2428         #SUFF-NAME(#I) := ' ' 
2429       END-IF 
2430     END-FOR 
2431     his350a1.ben-suffix(#BEN-IDX) := #suffix      /* gsd20070806 end 
2432 * 
2433     IF HIS350A1.BEN-DATE-OF-BIRTH-N(#BEN-IDX) GT 0 
2434         AND (HIS350A1.BEN-DATE-OF-BIRTH-N(#BEN-IDX) < 15830101 
2435         OR HIS350A1.BEN-DATE-OF-BIRTH-N(#BEN-IDX) > 26990101) 
2436       COMPRESS 'Beneficiary' #BEN-IDX 'Date of Birth is invalid.' 
2437         INTO #E-MSG 
2438       #E-FLD := 'BEN-DATE-OF-BIRTH-N' 
2439       PERFORM ADD-ERROR 
2440       ESCAPE ROUTINE 
2441     END-IF 
2442   END-FOR /* #BEN-IDX (2326) 
2443 * 
2444 /* Check that a primary beneficiary is entered for each plan 
2445   DECIDE FOR EVERY CONDITION 
2446     WHEN HIS350A1.SL-STATUS = 'A1' 
2447         AND (#BEN-BL-PRIM-COUNT = 0 
2448         AND #BEN-BL-CON-COUNT > 0) 
2449       #E-MSG := 'Primary Beneficiary required for Basic Life' 
2450       #E-FLD := 'BEN-INSURANCE-TYPE' 
2451       PERFORM ADD-ERROR 
2452     WHEN HIS350A1.OL-STATUS = 'A1' 
2453         AND (#BEN-OL-PRIM-COUNT = 0 
2454         AND #BEN-OL-CON-COUNT > 0) 
2455       #E-MSG := 'Primary Beneficiary required for Optional Life' 
2456       #E-FLD := 'BEN-INSURANCE-TYPE' 
2457       PERFORM ADD-ERROR 
2458     WHEN #BEN-BL-PRIM-COUNT > 0 
2459         AND (#BEN-BL-PRIM-PERCENT < 100 
2460         OR #BEN-BL-PRIM-PERCENT > 100) 
2461       COMPRESS 'Primary Basic Life percentages must equal 100 (now' 
2462         #BEN-BL-PRIM-PERCENT '%)' INTO #E-MSG 
2463       #E-FLD := 'BEN-INSURANCE-TYPE' 
2464       PERFORM ADD-ERROR 
2465     WHEN #BEN-BL-CON-COUNT > 0 
2466         AND (#BEN-BL-CON-PERCENT < 100 
2467         OR #BEN-BL-CON-PERCENT > 100) 
2468       COMPRESS 'Contigent Basic Life percentages must equal 100 (now' 
2469         #BEN-BL-CON-PERCENT '%)' INTO #E-MSG 
2470       #E-FLD := 'BEN-INSURANCE-TYPE' 
2471       PERFORM ADD-ERROR 
2472     WHEN #BEN-OL-PRIM-COUNT > 0 
2473         AND (#BEN-OL-PRIM-PERCENT < 100 
2474         OR #BEN-OL-PRIM-PERCENT > 100) 
2475       COMPRESS 'Primary Optional Life percentages must equal 100 (now' 
2476         #BEN-OL-PRIM-PERCENT '%)' INTO #E-MSG 
2477       #E-FLD := 'BEN-INSURANCE-TYPE' 
2478       PERFORM ADD-ERROR 
2479     WHEN #BEN-OL-CON-COUNT > 0 
2480         AND (#BEN-OL-CON-PERCENT < 100 
2481         OR #BEN-OL-CON-PERCENT > 100) 
2482       COMPRESS 'Contigent Optional Life percentages must equal 100 (now' 
2483         #BEN-OL-CON-PERCENT '%)' INTO #E-MSG 
2484       #E-FLD := 'BEN-INSURANCE-TYPE' 
2485       PERFORM ADD-ERROR 
2486 **  WHEN #BEN-LTC-PRIM-COUNT > 0  
2487 **      AND (#BEN-LTC-PRIM-PERCENT < 100  
2488 **      OR #BEN-LTC-PRIM-PERCENT > 100)  
2489 **    COMPRESS 'Primary Long Term Care percentages must equal 100 (now'  
2490 **      #BEN-LTC-PRIM-PERCENT '%)' INTO #E-MSG  
2491 **    #E-FLD := 'BEN-INSURANCE-TYPE'  
2492 **    PERFORM ADD-ERROR  
2493 **  WHEN #BEN-LTC-CON-COUNT > 0  
2494 **      AND (#BEN-LTC-CON-PERCENT < 100  
2495 **      OR #BEN-LTC-CON-PERCENT > 100)  
2496 **    COMPRESS 'Contigent Long Term Care percentages must equal 100'  
2497 **      ' (now' #BEN-LTC-CON-PERCENT '%)' INTO #E-MSG  
2498 **    #E-FLD := 'BEN-INSURANCE-TYPE'  
2499 **    PERFORM ADD-ERROR  
2500     WHEN NONE 
2501       IGNORE 
2502   END-DECIDE /* (2445) 
2503 * 
2504   RESET HIS358A1 
2505   MOVE BY NAME HIS350A1 TO HIS358A1 
2506   CALLNAT 'HIS358N1' /* AES Beneficiary Driver 
2507     HIS358A1 
2508   IF HIS358A1.HAS-ERROR /* Handle errors from subroutine 
2509     FOR #I 1 HIS358A1.ERROR-COUNT 
2510       #E-MSG := HIS358A1.ERROR-MESSAGE(#I) 
2511       #E-FLD := HIS358A1.ERROR-FIELDS(#I) 
2512       #E-NDX := HIS358A1.ERROR-INDEX(#I) 
2513       PERFORM ADD-ERROR 
2514     END-FOR /* #I 
2515   END-IF 
2516   MOVE BY NAME HIS358A1.BENEFICIARY-INFO TO HIS350A1 
2517   MOVE BY NAME HIS358A1.SUSPENSE-INFO TO HIS350A1 
2518   MOVE BY NAME HIS358A1.MESSAGE-INFO TO HIS350A1 
2519 END-IF /* (2075) 
2520 END-SUBROUTINE /* (2055) BENEFICIARY-MODULE 
2521 ************************************************************************ 
2522 DEFINE SUBROUTINE CHECK-FOR-SUSPENSE-RECORD 
2523 ************************************************************************ 
2524 RHST1. 
2525 READ HIS-SUSPENSE-TRANS BY SP-SUSPENSE-KEY  
2526     STARTING FROM HIS350A1.SSN 
2527   IF HIS-SUSPENSE-TRANS.SSN NE HIS350A1.SSN 
2528     ESCAPE BOTTOM(RHST1.) 
2529   END-IF 
2530   HIS350A1.DATA-FROM-SUSPENSE := TRUE 
2531 * 
2532   #ALPHA-CHECK := HIS-SUSPENSE-TRANS.SUSPENSE-CODE 
2533   IF #ALPHA-CHECK = 'A' THRU 'Z' 
2534     RESET HIS350A1.SUSPENSE-INFORMATION 
2535     HIS350A1.DATA-FROM-SUSPENSE := TRUE 
2536 /* We've found an A1, since the GET was performed on the other 
2537 /* four sections and may have had errors finding the records, 
2538 /* we will reset the error-information and start over with the 
2539 /* suspense. 
2540     RESET HIS350A1.ERROR-INFO 
2541 /* Use suspense data 
2542     HIS369A1.SSN := HIS-SUSPENSE-TRANS.SSN 
2543     HIS369A1.TRANSACTION-CODE := HIS-SUSPENSE-TRANS.TRANSACTION-CODE 
2544     HIS369A1.SUSPENSE-CODE := HIS-SUSPENSE-TRANS.SUSPENSE-CODE 
2545     CDAOBJ2.#FUNCTION := 'GET' 
2546     PERFORM CALL-SUSPENSE-OBJECT 
2547     COMPRESS 'Data is from a' HIS-SUSPENSE-TRANS.TRANSACTION-CODE 
2548       'suspense transaction' INTO HIS350A1.SUSPENSE-MESSAGE 
2549 * 
2550     MOVE BY NAME HIS369A1 TO HIS350A1 
2551     HIS350A1.USER-ID := HIS369A1.TRANSACTION-OPER-ID 
2552     MOVE HIS369A1.DEP-INS-PREM/SEC-IND(*) /* required because field 
2553       TO HIS350A1.DEP-INS-PRIM/SEC-IND(*) /* field name misspelled 
2554     HIS350A1.DATA-FROM-SUSPENSE := TRUE 
2555     HIS350A1.SUSPENSE-HELD-ID := HIS369A1-ID 
2556     HIS350A1.SUSPENSE-TIMESTMP := HIS369A1.TIMESTMP 
2557     HIS350A1.DEP-SEQ-NUM(*) := HIS369A1.DEP-SSN-SEQ(*) 
2558 * 
2559     MOVE BY NAME HIS369A1 TO HIS350A2 
2560     HIS350A2.D-TO-N8 := TRUE 
2561     CALLNAT 'mws350N2' /* Enrollment Data Date Conversion  
2562       HIS350A2 
2563     MOVE BY NAME HIS350A2 TO HIS350A1 
2564 * 
2565 **  
2566     IF HIS350A1.ACTION = 'GET' 
2567 **      AND HIS-SUSPENSE-TRANS.SUSPENSE-CODE = 'A' OR = 'G'  
2568         AND NOT (HIS350A1.EMPLOYER-GROUP-ID = MASK('7'......)) 
2569       CALLNAT 'mws350n4' /* Calculate Rates  
2570         HIS350A1 
2571     END-IF 
2572   END-IF /* (2533) 
2573 END-READ /* (2524) RHST1. IS-SUSPENSE-TRANS 
2574 END-SUBROUTINE /* (2522) CHECK-FOR-SUSPENSE-RECORD 
2575 ************************************************************************ 
2576 DEFINE SUBROUTINE SETUP-STORE-SUSPENSE 
2577 ************************************************************************ 
2578 * This routine will store a new suspense record from the data in 
2579 * the his350a1 pda.  If one originally existed, it will be deleted 
2580 * and a new one stored. 
2581 * 
2582 * #new-susp-code and #new-trxn-code must be populated before calling. 
2583 IF HIS350A1.DATA-FROM-SUSPENSE 
2584   HIS369A1.SSN := HIS350A1.SSN 
2585   HIS369A1-ID := HIS350A1.SUSPENSE-HELD-ID 
2586   MOVE BY NAME HIS369A1-ID.STRUCTURE TO HIS369A1 
2587   CDAOBJ2.#FUNCTION := 'GET' 
2588   PERFORM CALL-SUSPENSE-OBJECT /* get the suspense record 
2589 * 
2590   CDAOBJ2.#FUNCTION := 'DELETE' /* delete the suspense record 
2591   PERFORM CALL-SUSPENSE-OBJECT 
2592 /* move data from web pda to suspense pda  (including date conv) 
2593   MOVE BY NAME HIS350A1 TO HIS369A1 
2594   MOVE HIS350A1.DEP-INS-PRIM/SEC-IND(*) /* required because field 
2595     TO HIS369A1.DEP-INS-PREM/SEC-IND(*) /* field name misspelled 
2596   HIS369A1.DEP-SSN-SEQ(*) := HIS350A1.DEP-SEQ-NUM(*) 
2597   HIS369A1.TRANSACTION-OPER-ID := HIS350A1.USER-ID 
2598 * 
2599   MOVE BY NAME HIS350A1 TO HIS350A2 
2600   HIS350A2.N8-TO-D := TRUE 
2601   CALLNAT 'mws350N2' /* Enrollment Data Date Conversion Routine  
2602     HIS350A2 
2603 * 
2604   MOVE BY NAME HIS350A2 TO HIS369A1 
2605   HIS369A1.SUSPENSE-CODE := #NEW-SUSP-CODE 
2606   HIS369A1.TRANSACTION-CODE := #NEW-TRXN-CODE 
2607   if his350a1.user-id NE 'BINUSER'    /*MWS20080825 
2608   and his350a1.subscriber-type = 'AR' /*MWS20080825  
2609      HIS369A1.PAYMENT-TYPE := 'I' 
2610   END-IF                              /*MWS20080825 
2611   CDAOBJ2.#FUNCTION := 'STORE' 
2612   PERFORM CALL-SUSPENSE-OBJECT 
2613 ELSE /* (2583) /* Date not from suspense 
2614   RESET HIS369A1 HIS369A1-ID HIS369A2 
2615   MOVE BY NAME HIS350A1 TO HIS369A1 
2616   MOVE HIS350A1.DEP-INS-PRIM/SEC-IND(*) /* required because field 
2617     TO HIS369A1.DEP-INS-PREM/SEC-IND(*) /* field name misspelled 
2618   HIS369A1.DEP-SSN-SEQ(*) := HIS350A1.DEP-SEQ-NUM(*) 
2619   HIS369A1.TRANSACTION-OPER-ID := HIS350A1.USER-ID 
2620 * 
2621   MOVE BY NAME HIS350A1 TO HIS350A2 
2622   HIS350A2.N8-TO-D := TRUE 
2623   CALLNAT 'mws350N2' /* Enrollment Data Date Conversion Routine  
2624     HIS350A2 
2625   MOVE BY NAME HIS350A2 TO HIS369A1 
2626 * 
2627 * fields needed on backend but never updated on front end 
2628 * 
2629 **write '=' his390a1.payment-type  
2630 **write '=' his390a1.sponsor-ssn  
2631 **write '=' his390a1.retiree-reason  
2632 **write '=' his390a1.cobra-reason 
2633 **write '=' his390a1.medicare-end-date-d  
2634 **write '=' his390a1.medicare-sent-date-d  
2635 **write '=' his390a1.payment-date  
2636 **write '=' his390a1.date-retired newpage  
2637   his369a1.payment-type := his390a1.payment-type 
2638   his369a1.sponsor-ssn := his390a1.sponsor-ssn 
2639   his369a1.retiree-reason := his390a1.retiree-reason 
2640 **his369a1.cobra-reason := his390a1.cobra-reason 
2641   his369a1.medicare-end-date-d := his390a1.medicare-end-date-d 
2642   his369a1.medicare-sent-date-d := his390a1.medicare-sent-date-d 
2643   his369a1.payment-date := his390a1.payment-date 
2644   his369a1.date-retired := his390a1.date-retired 
2645   his369a1.prev-active-group-id := his390a1.prev-active-group-id 
2646   his369a1.payment-recvd := his390a1.payment-recvd  
2647 * 
2648   HIS369A1.SUSPENSE-CODE := #NEW-SUSP-CODE 
2649   HIS369A1.TRANSACTION-CODE := #NEW-TRXN-CODE 
2650 *  
2651 * mws20081002 - per randy nolff  
2652 *  
2653  for #x = 1 to 15  
2654   if his369a1.dep-relation(#x) = mask(.'1A')  
2655     if  (his369a1.dep-hlth-status(#x) = mask('T'.) and  
2656           his369a1.DEP-HLTH-PENDING-ST(#x) ne 'A1')  
2657     and (his369a1.dep-dntl-status(#x) = mask('T'.) and  
2658          his369a1.dep-dntl-pending-st(#x) ne 'A1')  
2659     and (his369a1.dep-ols-status(#x) = mask('T'.) and  
2660          his369a1.dep-ols-pending-st(#x) ne 'A1')  
2661   
2662          assign his369a1.dep-eligibility(#x) = '5'  
2663       end-if  
2664       escape bottom(2653)  
2665     end-if  
2666  end-for  
2667   if his350a1.user-id NE 'BINUSER'    /*MWS20080825 
2668   and his350a1.subscriber-type = 'AR' /*MWS20080825  
2669       HIS369A1.PAYMENT-TYPE := 'I' 
2670   END-IF                              /*MWS20080825 
2671   CDAOBJ2.#FUNCTION := 'STORE' 
2672   PERFORM CALL-SUSPENSE-OBJECT 
2673 END-IF /* (2583) 
2674 END-SUBROUTINE /* (2576) SETUP-STORE-SUSPENSE 
2675 ************************************************************************ 
2676 DEFINE SUBROUTINE CALL-SUSPENSE-OBJECT 
2677 ************************************************************************ 
2678 CALLNAT 'HIS369N1' /* perform object maintenance for SUSPENSE file 
2679   HIS369A1 HIS369A1-ID HIS369A2 CDAOBJ2 MSG-INFO 
2680 * 
2681 * after calling an object-subp, always check for errors 
2682 IF ##ERROR-FIELD NE ' ' 
2683   EXAMINE ##MSG FOR ':1:' REPLACE WITH FULL VALUE '~ ' 
2684   EXAMINE ##MSG FOR '~' REPLACE WITH ##MSG-DATA(1) 
2685   EXAMINE ##MSG FOR ':2:' REPLACE WITH FULL VALUE '~ ' 
2686   EXAMINE ##MSG FOR '~' REPLACE WITH ##MSG-DATA(2) 
2687   EXAMINE ##MSG FOR ':3:' REPLACE WITH FULL VALUE '~ ' 
2688   EXAMINE ##MSG FOR '~' REPLACE WITH ##MSG-DATA(3) 
2689   #E-MSG := ##MSG 
2690   #E-FLD := ##ERROR-FIELD 
2691   PERFORM ADD-ERROR 
2692   BACKOUT TRANSACTION 
2693 END-IF 
2694 END-SUBROUTINE /* (2676) CALL-SUSPENSE-OBJECT 
2695 ******************************************************** 
2696 DEFINE SUBROUTINE CHECK-SUBSCRIBER-STATUS 
2697 ******************************************************** 
2698 FSM2. FIND SUBSCR-MAST WITH SSN = HIS350A1.SSN 
2699   IF NO RECORDS FOUND 
2700     #6-MO-BRK := FALSE 
2701     #NOT-ON-FILE := TRUE 
2702     PERFORM CHECK-FOR-SUSPENSE-RECORD 
2703     IF NOT HIS350A1.DATA-FROM-SUSPENSE 
2704       IF HIS350A1.TRXN-TYPE = 'CH' 
2705         COMPRESS 'No subscribers exist with SSN:' HIS350A1.SSN 
2706           INTO #E-MSG 
2707         #E-FLD := 'SSN' 
2708         PERFORM ADD-ERROR 
2709       ELSE 
2710         HIS350A1.SSN-NOT-ON-FILE := TRUE 
2711       END-IF 
2712     END-IF 
2713     FDM2. FIND DEPEND-MAST WITH DEP-SSN = HIS350A1.SSN 
2714       IF NO RECORD 
2715         HIS350A1.ON-DEPEND-FILE := FALSE 
2716         ESCAPE BOTTOM(FDM2.) 
2717       END-NOREC 
2718       HIS350A1.ON-DEPEND-FILE := TRUE 
2719       IF DEPEND-MAST.DEP-HLTH-STATUS = 'A1' 
2720           OR DEPEND-MAST.DEP-DNTL-STATUS = 'A1' 
2721           OR DEPEND-MAST.DEP-DL-STATUS = 'A1' 
2722           OR DEPEND-MAST.DEP-OLS-STATUS = 'A1' 
2723           OR DEPEND-MAST.DEP-LTC-STATUS = 'A1' 
2724         #E-MSG := 'Subscriber is active as a dependent' 
2725         #E-FLD := 'SSN' 
2726         PERFORM ADD-ERROR 
2727       END-IF 
2728     END-FIND /* (2713) fdm2. depend-mast 
2729     HIS350A1.SUBSCR-BEFORE := FALSE 
2730     ESCAPE ROUTINE 
2731   END-NOREC /* (2699) 
2732 **PERFORM CHECK-FOR-SUSPENSE-RECORD 
2733 * 
2734   IF SUBSCR-MAST.HLTH-STATUS = 'T1' 
2735       OR SUBSCR-MAST.DNTL-STATUS = 'T1' 
2736       OR SUBSCR-MAST.DL-STATUS = 'T1' 
2737       OR SUBSCR-MAST.OL-STATUS = 'T1' 
2738       OR SUBSCR-MAST.LTC-STATUS = 'T1' 
2739       OR SUBSCR-MAST.SLTD-STATUS = 'T1' 
2740     #E-MSG := 'You are trying to modify a subscriber that is on file as' 
2741       -' deceased.  Please contact EIP if incorrect.' 
2742     PERFORM ADD-ERROR 
2743     ESCAPE ROUTINE 
2744   END-IF 
2745 * 
2746 **#HOLD-LTC-STATUS := SUBSCR-MAST.LTC-STATUS  
2747 **#HOLD-LTC-SP-STATUS := SUBSCR-MAST.LTC-SP-STATUS  
2748 * 
2749   RESET HIS350A1.DATA-FROM-SUSPENSE 
2750   HIS350A1.SSN-NOT-ON-FILE := FALSE 
2751   HIS350A1.SUBSCR-BEFORE := TRUE 
2752 * 
2753   PERFORM CHECK-SUBSCR-MAST-STATUS /* determine if no coverage is active 
2754   IF #ALL-TERM 
2755     HIS350A1.ACTIVE-SUBSCR := FALSE 
2756   ELSE 
2757     HIS350A1.ACTIVE-SUBSCR := TRUE 
2758   END-IF 
2759   IF HIS350A1.TRXN-TYPE = 'EN' 
2760     IF HIS350A1.ACTIVE-SUBSCR 
2761       #E-MSG := 'Subscriber already enrolled' 
2762       #E-FLD := 'SSN' 
2763       PERFORM ADD-ERROR 
2764       ESCAPE ROUTINE 
2765     END-IF 
2766 * 
2767     IF NOT HIS350A1.DATA-FROM-SUSPENSE 
2768       PERFORM CHECK-TERMINATION-STATUS 
2769       IF *DATX - 180 > #LAST-EFF-DATE 
2770           AND #LAST-EFF-DATE NE 0 
2771         #6-MO-BRK := TRUE /* terminated for over 6 mos - no data return 
2772       END-IF 
2773     END-IF 
2774   END-IF /* (2759) 
2775   IF SUBSCR-MAST.OL-STATUS = 'A1' 
2776       AND SUBSCR-MAST.OL-END-DATE NE 0 
2777     #ON-OL-WAIVER := TRUE 
2778   END-IF 
2779   IF SUBSCR-MAST.SLTD-STATUS = 'A1' 
2780       AND SUBSCR-MAST.SLTD-WAIVER = 'Y' 
2781     #ON-SLTD-WAIVER := TRUE 
2782   END-IF 
2783   IF SUBSCR-MAST.LTC-STATUS = 'A1' 
2784       AND SUBSCR-MAST.LTC-PAYMENT-TYPE = 'W' 
2785     #ON-LTC-WAIVER := TRUE 
2786   END-IF 
2787   IF SUBSCR-MAST.LTC-SP-STATUS = 'A1' 
2788       AND SUBSCR-MAST.LTC-SP-PAYMENT-TYPE = 'W' 
2789     #ON-LTC-SP-WAIVER := TRUE 
2790   END-IF 
2791   FDM3. FIND DEPEND-MAST WITH DEP-SSN = HIS350A1.SSN 
2792     IF NO RECORD 
2793       HIS350A1.ON-DEPEND-FILE := FALSE 
2794       ESCAPE BOTTOM(FDM3.) 
2795     END-NOREC 
2796     HIS350A1.ON-DEPEND-FILE := TRUE 
2797     IF DEPEND-MAST.DEP-HLTH-STATUS = 'A1' 
2798         OR DEPEND-MAST.DEP-DNTL-STATUS = 'A1' 
2799         OR DEPEND-MAST.DEP-DL-STATUS = 'A1' 
2800         OR DEPEND-MAST.DEP-OLS-STATUS = 'A1' 
2801         OR DEPEND-MAST.DEP-LTC-STATUS = 'A1' 
2802       #E-MSG := 'Subscriber is active as a dependent' 
2803       #E-FLD := 'SSN' 
2804       PERFORM ADD-ERROR 
2805     END-IF 
2806   END-FIND /* (2791) fdm3. depend-mast 
2807 ** 
2808   IF SUBSCR-MAST.SUBSCRIBER-TYPE NE 'AR' 
2809   AND HIS350A1.ACTIVE-SUBSCR 
2810   and his350a1.change-reason ne 'AE'   /*mws20080825 
2811     perform CHECK-SUBSCR-MAST-STATUS /* gsd20070831b 
2812     if not #ALL-TERM /* gsd20070831b 
2813       #E-MSG := 'Subscriber is active under another subscriber type' 
2814       #E-FLD := 'SUBSCRIBER-TYPE' 
2815       PERFORM ADD-ERROR 
2816     end-if /* gsd20070831b 
2817   ELSE /* (2807) 
2818     IF NOT HIS350A1.ACTIVE-SUBSCR 
2819         and his350a1.trxn-type = 'EN' 
2820 /* gaining group has access to term sub regardless of group id 
2821       IGNORE 
2822     ELSE  /* AR sub and active 
2823       FEIS1. FIND EBS-INTERNET-SECURITY WITH USER-ID = HIS350A1.USER-ID 
2824         IF NO 
2825           ESCAPE BOTTOM(FEIS1.) 
2826         END-NOREC 
2827         IF EBS-INTERNET-SECURITY.ALL-SSN-ACCESS = 'Y' 
2828 /* user has access to all ssn's, no need to check emplr grps 
2829           ESCAPE BOTTOM 
2830         END-IF 
2831 * 
2832         DECIDE FOR FIRST CONDITION 
2833 /* normal user - if ssn employer group is one of the users 
2834 /*               accessible groups, it is ok to view 
2835           WHEN SUBSCR-MAST.EMPLOYER-GROUP-ID 
2836               = EBS-INTERNET-SECURITY.ACC-GROUPS(*) 
2837             IF HIS350A1.TRXN-TYPE = 'EN' 
2838               #E-MSG := 'Trying to enroll an already active subscriber' 
2839               #E-FLD := 'SSN' 
2840               PERFORM ADD-ERROR 
2841             END-IF 
2842           WHEN NONE 
2843             find (1) HIS-SUSPENSE-TRANS with ssn = his350a1.ssn 
2844               if no 
2845                 #E-MSG := 'Subscriber is enrolled under another group' 
2846                 #E-FLD := 'SSN' 
2847                 PERFORM ADD-ERROR 
2848                 escape bottom 
2849               end-norec 
2850               if not(HIS-SUSPENSE-TRANS.trxn-type = 'EN' 
2851                   and HIS-SUSPENSE-TRANS.employer-group-id = 
2852                   EBS-INTERNET-SECURITY.ACC-GROUPS(*)) 
2853                 #E-MSG := 'Subscriber is enrolled under another group' 
2854                 #E-FLD := 'SSN' 
2855                 PERFORM ADD-ERROR 
2856               end-if 
2857             end-find 
2858         END-DECIDE /* (2832) 
2859       END-FIND /* (2823) feis1. EBS-INTERNET-SECURITY 
2860     END-IF /* (2818) 
2861   END-IF /* (2807) 
2862 END-FIND /* (2698) FSM1. SUBSCR-MAST 
2863 END-SUBROUTINE /* (2696) CHECK-SUBSCRIBER-STATUS 
2864 ******************************************************** 
2865 DEFINE SUBROUTINE COMPUTE-EFF-DATE 
2866 ******************************************************** 
2867 MOVE EDITED #BILL-DATE(EM=YYYY) TO #BILL-YEAR 
2868 #BILL-YEAR-N := #BILL-YEAR-N - 1 
2869 COMPRESS #BILL-YEAR '1231' INTO #1231-DATE LEAVING NO 
2870 IF HIS350A1.TRXN-TYPE = 'EN' 
2871 /* compute effective date based on hire date 
2872   IF HIS350A1.DATE-HIRED-N = 0 
2873     IF HIS350A1.MODULE(*) = 'DEMOGRAPHIC' 
2874       #E-MSG := 'Date of Hire is required' 
2875     ELSE 
2876       #E-MSG := 'Date of Hire is a required field on Enrollee Data' 
2877         -' screen.  Calculations cannot be completed without it.' 
2878     END-IF 
2879     #E-FLD := 'DATE-HIRED-N' 
2880     PERFORM ADD-ERROR 
2881     ESCAPE ROUTINE immediate 
2882   END-IF /* (2872) 
2883   IF HIS350A1.EFFECTIVE-DATE-N = 0 
2884       AND HIS350A1.DATE-HIRED-N > 0 
2885     MOVE HIS350A1.DATE-HIRED-N TO #DATE-CHECK 
2886     IF #DD > 1 
2887       IF #MM = 12 
2888         ADD 1 TO #YYYY 
2889         MOVE 1 TO #MM #DD 
2890       ELSE 
2891         ADD 1 TO #MM 
2892         MOVE 1 TO #DD 
2893       END-IF 
2894     END-IF 
2895     HIS350A1.EFFECTIVE-DATE-N := #DATE-CHECK 
2896     #EFF-N := HIS350A1.EFFECTIVE-DATE-N 
2897   ELSE 
2898     #VALIDATE-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
2899     IF #VALIDATE-EFF-DD NE 1 
2900       #E-MSG := 'Coverage Effective Date must be the first day of the' 
2901         -' month' 
2902       PERFORM ADD-ERROR 
2903     END-IF 
2904   END-IF /* (2883) 
2905 ELSE /* CHANGE (2870) 
2906   DECIDE ON FIRST VALUE OF HIS350A1.CHANGE-REASON 
2907     VALUE 'DV','SE','DC','GO','CO','SO','LT','SL','OL','OP','DL' 
2908       IF HIS350A1.CHANGE-REASON-DATE-N > 0 
2909         MOVE HIS350A1.CHANGE-REASON-DATE-N TO #DATE-CHECK 
2910         IF #MM = 12 
2911           ADD 1 TO #YYYY 
2912           MOVE 1 TO #MM #DD 
2913         ELSE 
2914           ADD 1 TO #MM 
2915           MOVE 1 TO #DD 
2916         END-IF 
2917         HIS350A1.EFFECTIVE-DATE-N := #DATE-CHECK 
2918       END-IF 
2919     VALUE 'CE' /* ,'RB' 
2920       IF HIS350A1.CHANGE-REASON-EXT = 'FT' OR = 'AN' 
2921         IF HIS350A1.CHANGE-REASON-DATE-N > 0 
2922           MOVE HIS350A1.CHANGE-REASON-DATE-N TO #DATE-CHECK 
2923           IF #MM = 12 
2924             ADD 1 TO #YYYY 
2925             MOVE 1 TO #MM #DD 
2926           ELSE 
2927             ADD 1 TO #MM 
2928             MOVE 1 TO #DD 
2929           END-IF 
2930         END-IF 
2931         HIS350A1.EFFECTIVE-DATE-N := #DATE-CHECK 
2932       END-IF 
2933     VALUE 'AR','BE' 
2934       HIS350A1.EFFECTIVE-DATE-N := *DATN 
2935     VALUE 'LO','GO' 
2936       HIS350A1.EFFECTIVE-DATE-N := HIS350A1.CHANGE-REASON-DATE-N 
2937     VALUE 'SD' 
2938       MOVE HIS350A1.CHANGE-REASON-DATE-N TO #DATE-CHECK 
2939       move edited #date-check-a to #date-check-d(em=yyyymmdd) /* gsd 
2940       add 1 to #date-check-d 
2941       move edited #date-check-d(em=yyyymmdd) to #date-check-a 
2942       HIS350A1.CHANGE-REASON-DATE-N := #DATE-CHECK 
2943     VALUE 'CC','NB' 
2944       HIS350A1.EFFECTIVE-DATE-N := HIS350A1.CHANGE-REASON-DATE-N 
2945     VALUE 'OE', 'AE' /* set date to Jan 1 of the following year 
2946       #CURR-DATE := *DATN 
2947       ADD 1 TO #CURR-YYYY 
2948       #CURR-MMDD := '0101' 
2949       HIS350A1.EFFECTIVE-DATE-N := #CURR-DATE 
2950     NONE 
2951       IGNORE /* do not change effective date 
2952   END-DECIDE /* (2906) 
2953   IF HIS350A1.EFFECTIVE-DATE-N = 0 
2954     HIS350A1.EFFECTIVE-DATE-N := HIS350A1.CHANGE-REASON-DATE-N 
2955   END-IF 
2956 END-IF /* (2870) 
2957 IF HIS350A1.EFFECTIVE-DATE-N > 0 
2958     AND HIS350A1.EFFECTIVE-DATE-N = MASK (YYYYMMDD) 
2959     AND HIS350A1.EFFECTIVE-DATE-N = 15820000 THRU 26990000 
2960   IF HIS350A1.EFFECTIVE-DATE-N < HIS350A1.DATE-HIRED-N 
2961     #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
2962     MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
2963     MOVE EDITED #WORK-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
2964     #DATE-WORK := HIS350A1.DATE-HIRED-N 
2965     MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
2966     MOVE EDITED #WORK-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE2 
2967     COMPRESS 'Effective date (' #DISPLAY-DATE1 
2968       ') is earlier than hire date (' #DISPLAY-DATE2 ')' INTO #E-MSG 
2969     PERFORM ADD-ERROR 
2970   END-IF /* (2960) 
2971   MOVE HIS350A1.EFFECTIVE-DATE-N TO #DATE-WORK 
2972   MOVE EDITED #DATE-WORK TO #DATE-D (EM=YYYYMMDD) 
2973   IF #DATE-D > #BILL-DATE 
2974     HIS350A1.ADVANCE-KEYED := TRUE 
2975   ELSE 
2976     HIS350A1.ADVANCE-KEYED := FALSE 
2977     ADD 90 TO #DATE-D 
2978     IF #DATE-D < #BILL-DATE 
2979       MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
2980       MOVE EDITED #WORK-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
2981       MOVE EDITED #BILL-DATE(EM=MM-DD-YYYY) TO #DISPLAY-DATE2 
2982       COMPRESS 'Effective Date (' #DISPLAY-DATE1 
2983         ') cannot be 3 months prior to current Bill Date (' 
2984         #DISPLAY-DATE2 ')' TO #E-MSG 
2985       PERFORM ADD-ERROR 
2986       ESCAPE ROUTINE 
2987     END-IF /* (2977) 
2988   END-IF /* (2973) 
2989 END-IF /* (2957) 
2990 * 
2991 IF NOT #NOT-ON-FILE 
2992   PERFORM CHECK-TERMINATION-STATUS 
2993   IF HIS350A1.MODULE(*) = 'DEMOGRAPHIC' 
2994     IF SUBSCR-MAST.PART-TIME-SUBSCR = '1' OR = '2' OR = '3' 
2995         AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
2996       COMPRESS 'A1' SUBSCR-MAST.EMPLOYER-GROUP-ID INTO #TABLE-KEY 
2997         LEAVING NO 
2998       FTM3. FIND TABLE-MAST WITH SP-TBL-GROUP-KEY = #TABLE-KEY 
2999       END-FIND /* (2998) ftm3. 
3000     END-IF /* (2994) 
3001     IF TABLE-MAST.TBL-PT-TEACHER NE 'Y' 
3002       PERFORM CHECK-FOR-TRANSFERS 
3003     ELSE 
3004       HIS350A1.SUBSCR-TRANSFER := ' ' 
3005     END-IF 
3006   END-IF /* (0786) 
3007 END-IF /* (0782) 
3008 * 
3009 if his350a1.trxn-type = 'EN' 
3010     and his350a1.subscr-transfer = ' ' 
3011     and not #edit-for-update 
3012   for #i 1 15 
3013     if his350a1.dep-relation(#i) = mask (.'1'..) 
3014       reset his350a1.dep-hlth-status(#i) 
3015         his350a1.dep-hlth-eff-date-n(#i) 
3016         his350a1.dep-hlth-end-date-n(#i) 
3017         his350a1.dep-dntl-status(#i) 
3018         his350a1.dep-dntl-eff-date-n(#i) 
3019         his350a1.dep-dntl-end-date-n(#i) 
3020         his350a1.dep-dl-status(#i) 
3021         his350a1.dep-dl-eff-date-n(#i) 
3022         his350a1.dep-dl-end-date-n(#i) 
3023         his350a1.dep-ols-status(#i) 
3024         his350a1.dep-ols-eff-date-n(#i) 
3025         his350a1.dep-ols-end-date-n(#i) 
3026     end-if 
3027   end-for 
3028 end-if 
3029 END-SUBROUTINE /* (2865) COMPUTE-EFF-DATE 
3030 ****************************************************** 
3031 DEFINE SUBROUTINE CHECK-OTHER-COVERAGE 
3032 ****************************************************** 
3033 RESET #ON-FILE-INDICATORS 
3034 IF HIS350A1.DEP-STATE-EMP/RET-IND(#I) = ' ' 
3035   HIS350A1.DEP-STATE-EMP/RET-IND(#I) := 'N' 
3036   RESET HIS350A1.DEP-EMPLOYER-GROUP-ID(#I) #DEP-SUBSCR-TYPE 
3037 END-IF 
3038 MOVE TRUE TO #NOT-ACTIVELY-EMPLOYED 
3039 IF HIS350A1.DEP-SSN(#I) NE ' ' 
3040   FASM1. FIND ACT-SUBSCR-MAST WITH SSN = HIS350A1.DEP-SSN(#I) 
3041     IF NO RECORDS FOUND 
3042       IF HIS350A1.DEP-STATE-EMP/RET-IND(#I) <> 'N' 
3043         COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
3044           '| is not on file as a State ' 
3045           'Employee. Verify SSN and contact EIP if incorrect.' 
3046           INTO #E-MSG 
3047         PERFORM ADD-ERROR 
3048         ESCAPE BOTTOM (FASM1.) IMMEDIATE 
3049       END-IF 
3050     END-NOREC 
3051     MOVE ACT-SUBSCR-MAST.SUBSCRIBER-TYPE TO #DEP-SUBSCR-TYPE 
3052     IF (ACT-SUBSCR-MAST.HLTH-STATUS = 'T2' OR = '  ') 
3053         AND (ACT-SUBSCR-MAST.DNTL-STATUS = 'T2' OR = '  ') 
3054         AND (ACT-SUBSCR-MAST.DL-STATUS   = 'T2' OR = '  ') 
3055         AND (ACT-SUBSCR-MAST.SL-STATUS   = 'T2' OR = '  ') 
3056         AND (ACT-SUBSCR-MAST.LTD-STATUS  = 'T2' OR = '  ') 
3057         AND NOT (ACT-SUBSCR-MAST.HLTH-STATUS = '  ' 
3058         AND ACT-SUBSCR-MAST.DNTL-STATUS = '  ' 
3059         AND ACT-SUBSCR-MAST.DL-STATUS = '  ' 
3060         AND ACT-SUBSCR-MAST.SL-STATUS = '  ' 
3061         AND ACT-SUBSCR-MAST.LTD-STATUS = '  ') 
3062       MOVE TRUE TO #DEP-ON-LTD 
3063     END-IF 
3064 * 
3065     IF ACT-SUBSCR-MAST.HLTH-STATUS = 'A1' 
3066         OR ACT-SUBSCR-MAST.DNTL-STATUS = 'A1' 
3067         OR ACT-SUBSCR-MAST.DL-STATUS = 'A1' 
3068         OR ACT-SUBSCR-MAST.OL-STATUS = 'A1' 
3069         OR ACT-SUBSCR-MAST.OLS-STATUS = 'A1' 
3070       IF ACT-SUBSCR-MAST.SUBSCRIBER-TYPE = 'AR  ' 
3071         MOVE FALSE TO #NOT-ACTIVELY-EMPLOYED 
3072       END-IF 
3073     END-IF 
3074 * 
3075     MOVE FALSE TO #ON-OL-WAIVER 
3076     IF (ACT-SUBSCR-MAST.HLTH-STATUS = MASK('T'.) OR = '  ') 
3077         AND (ACT-SUBSCR-MAST.DNTL-STATUS = MASK('T'.) OR = '  ') 
3078         AND (ACT-SUBSCR-MAST.DL-STATUS   = MASK('T'.) OR = '  ') 
3079         AND NOT (ACT-SUBSCR-MAST.HLTH-STATUS = '   ' 
3080         AND ACT-SUBSCR-MAST.DNTL-STATUS = '  ' 
3081         AND ACT-SUBSCR-MAST.DL-STATUS   = '  ' 
3082         AND ACT-SUBSCR-MAST.OL-STATUS = 'A1' 
3083         AND ACT-SUBSCR-MAST.OL-END-DATE NE 0)  
3084       MOVE TRUE TO #ON-OL-WAIVER 
3085     END-IF 
3086     IF (ACT-SUBSCR-MAST.HLTH-STATUS = MASK('T'.) OR = '  ') 
3087         AND (ACT-SUBSCR-MAST.DNTL-STATUS = MASK('T'.) OR = '  ') 
3088         AND (ACT-SUBSCR-MAST.DL-STATUS = MASK('T'.) OR = '  ') 
3089         AND (ACT-SUBSCR-MAST.OL-STATUS = MASK('T'.) OR = '  ') 
3090         AND (ACT-SUBSCR-MAST.OLS-STATUS = MASK('T'.) OR = '  ') 
3091       IGNORE 
3092     ELSE /* (3086) 
3093       IF HIS350A1.DEP-SSN(#I) NE ' ' 
3094         IF ACT-SUBSCR-MAST.SUBSCRIBER-TYPE = 'AR  ' 
3095           HIS350A1.DEP-STATE-EMP/RET-IND(#I) := 'A' 
3096         ELSE 
3097           HIS350A1.DEP-STATE-EMP/RET-IND(#I) := 'R' 
3098         END-IF 
3099         HIS350A1.DEP-EMPLOYER-GROUP-ID(#I) := 
3100           ACT-SUBSCR-MAST.EMPLOYER-GROUP-ID 
3101       ELSE 
3102         IF HIS350A1.DEP-STATE-EMP/RET-IND(#I) <> 'N' 
3103           COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
3104             '| is not on file as a State Employee' INTO #E-MSG 
3105           PERFORM ADD-ERROR 
3106         END-IF 
3107       END-IF 
3108 * 
3109       MOVE FALSE TO #ACT-ON-SUBSCR-HLTH 
3110       HIS350A1.ACTIVE-BUT-ALLOWED-COVERAGE := FALSE 
3111       IF ACT-SUBSCR-MAST.HLTH-STATUS = 'A1' 
3112         MOVE TRUE TO #ACT-ON-SUBSCR-HLTH 
3113       ELSE 
3114         IF (ACT-SUBSCR-MAST.HLTH-STATUS 
3115             = 'TN' OR = 'TL' OR = 'TM' OR = 'TO') 
3116           MOVE TRUE TO HIS350A1.ACTIVE-BUT-ALLOWED-COVERAGE 
3117         END-IF 
3118       END-IF 
3119       IF ACT-SUBSCR-MAST.DNTL-STATUS = 'A1' 
3120         MOVE TRUE TO #ACT-ON-SUBSCR-DNTL 
3121       ELSE 
3122         IF ACT-SUBSCR-MAST.DNTL-STATUS 
3123             = 'TN' OR = 'TL' OR = 'TM' OR = 'TO' 
3124           MOVE TRUE TO HIS350A1.ACTIVE-BUT-ALLOWED-COVERAGE 
3125         END-IF 
3126       END-IF 
3127       IF ACT-SUBSCR-MAST.DL-STATUS = 'A1' 
3128         MOVE TRUE TO #ACT-ON-SUBSCR-DL 
3129       ELSE 
3130         IF ACT-SUBSCR-MAST.DL-STATUS 
3131             = 'TN' OR = 'TL' OR = 'TM' OR = 'TO' 
3132           MOVE TRUE TO HIS350A1.ACTIVE-BUT-ALLOWED-COVERAGE 
3133         END-IF 
3134       END-IF 
3135       IF #DEP-ON-LTD 
3136         MOVE TRUE TO HIS350A1.ACTIVE-BUT-ALLOWED-COVERAGE 
3137       END-IF 
3138     END-IF /* (3086) 
3139   END-FIND /* (3021) FASM1. ACT-SUBSCR-MAST 
3140 END-IF /* (3020) 
3141 * 
3142 IF NOT #ON-OL-WAIVER 
3143   IF #DEP-SUBSCR-TYPE = 'AR  ' 
3144     CALLNAT 'KTB801NN' /* VERIFY GROUP ID AND RETURN PERTINENT INFO 
3145       #PROCESS-ERROR ACT-SUBSCR-MAST.EMPLOYER-GROUP-ID #GRP-NAME 
3146       #GRP-OTHER-DATA 
3147     IF NOT #NOT-ACTIVELY-EMPLOYED 
3148         AND NOT HIS350A1.ACTIVE-BUT-ALLOWED-COVERAGE 
3149       IF (#GRP-COV-IND-H = 'H' 
3150           AND HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1') 
3151           OR (#GRP-COV-IND-D = 'D' 
3152           AND HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1') 
3153           OR HIS350A1.DEP-DL-PENDING-ST(#I) = 'A1' 
3154         COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
3155           '| is an active subscriber' INTO #E-MSG 
3156         #E-FLD := 'DEP-DNTL-STATUS' 
3157         PERFORM ADD-ERROR 
3158       END-IF 
3159     END-IF 
3160   ELSE /* (3143) 
3161     IF (#ACT-ON-SUBSCR-HLTH 
3162         AND HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1') 
3163         OR (#ACT-ON-SUBSCR-DNTL 
3164         AND (HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1' 
3165         OR (HIS350A1.DEP-DNTL-PENDING-ST(#I) = ' ' 
3166         AND HIS350A1.DEP-DNTL-STATUS(#I) = 'A1'))) 
3167         OR (#ACT-ON-SUBSCR-DL 
3168         AND (HIS350A1.DEP-DL-PENDING-ST(#I) = 'A1' 
3169         OR (HIS350A1.DEP-DL-PENDING-ST(#I) = ' ' 
3170         AND HIS350A1.DEP-DL-STATUS(#I) = 'A1'))) 
3171 **      OR (#ACT-ON-SUBSCR-LTC  
3172 **      AND (HIS350A1.DEP-LTC-PENDING-ST(#I) = 'A1'  
3173 **      OR (HIS350A1.DEP-LTC-PENDING-ST(#I) = ' '  
3174 **      AND HIS350A1.DEP-LTC-STATUS(#I) = 'A1')))  
3175         OR (#ACT-ON-SUBSCR-OLS 
3176         AND (HIS350A1.DEP-OLS-PENDING-ST(#I) = 'A1' 
3177         OR (HIS350A1.DEP-OLS-PENDING-ST(#I) = ' ' 
3178         AND HIS350A1.DEP-OLS-STATUS(#I) = 'A1'))) 
3179       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
3180         '| is a covered subscriber' INTO #E-MSG 
3181       #E-FLD := 'DEP-DNTL-STATUS' 
3182       PERFORM ADD-ERROR 
3183     END-IF /* (3161) 
3184     IF NOT #NOT-ACTIVELY-EMPLOYED 
3185         AND (HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
3186         OR HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1' 
3187         OR HIS350A1.DEP-DL-PENDING-ST(#I) = 'A1')  
3188       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
3189         '| is an active subscriber' INTO #E-MSG 
3190       #E-FLD := 'DEP-DNTL-STATUS' 
3191       PERFORM ADD-ERROR 
3192     END-IF 
3193   END-IF /* (3143) 
3194 * 
3195   IF HIS350A1.DEP-RELATION(#I) = MASK(.'1'.) 
3196       AND (HIS350A1.DEP-hlth-PENDING-ST(#I) = 'A1' /* gsd20070830a start 
3197       OR (HIS350A1.DEP-hlth-PENDING-ST(#I) = ' ' 
3198       AND HIS350A1.DEP-hlth-STATUS(#I) = 'A1') 
3199       or HIS350A1.DEP-dntl-PENDING-ST(#I) = 'A1' 
3200       OR (HIS350A1.DEP-dntl-PENDING-ST(#I) = ' ' 
3201       AND HIS350A1.DEP-dntl-STATUS(#I) = 'A1') 
3202       or HIS350A1.DEP-DL-PENDING-ST(#I) = 'A1' 
3203 **    AND (HIS350A1.DEP-DL-PENDING-ST(#I) = 'A1'   /* gsd20070830a end 
3204       OR (HIS350A1.DEP-DL-PENDING-ST(#I) = ' ' 
3205       AND HIS350A1.DEP-DL-STATUS(#I) = 'A1') 
3206       OR HIS350A1.DEP-OLS-PENDING-ST(#I) = 'A1' 
3207       OR (HIS350A1.DEP-OLS-PENDING-ST(#I) = ' ' 
3208       AND HIS350A1.DEP-OLS-STATUS(#I) = 'A1'))  
3209 **    OR HIS350A1.DEP-LTC-PENDING-ST(#I) = 'A1'  
3210 **    OR (HIS350A1.DEP-LTC-PENDING-ST(#I) = ' '  
3211 **    AND HIS350A1.DEP-LTC-STATUS(#I) = 'A1'))  
3212       AND NOT #NOT-ACTIVELY-EMPLOYED 
3213       AND NOT HIS350A1.ACTIVE-BUT-ALLOWED-COVERAGE 
3214     MOVE 'Spouse is a state employee so cannot be covered as dependent' 
3215       TO #E-MSG 
3216     #E-FLD := 'DEP-DNTL-STATUS' 
3217     PERFORM ADD-ERROR 
3218   END-IF /* (3195) 
3219 /* Remove effective dates if left from inadvertent coverage activation 
3220   IF HIS350A1.DEP-HLTH-PENDING-ST(#I) = ' ' 
3221       AND HIS350A1.DEP-HLTH-STATUS(#I) = ' ' 
3222     HIS350A1.DEP-HLTH-EFF-DATE-N(#I) := 0 
3223     HIS350A1.DEP-HLTH-end-DATE-N(#I) := 0 
3224   END-IF 
3225   IF HIS350A1.DEP-DNTL-PENDING-ST(#I) = ' ' 
3226       AND HIS350A1.DEP-DNTL-STATUS(#I) = ' ' 
3227     HIS350A1.DEP-DNTL-EFF-DATE-N(#I) := 0 
3228     HIS350A1.DEP-DNTL-end-DATE-N(#I) := 0 
3229   END-IF 
3230   IF HIS350A1.DEP-DL-PENDING-ST(#I) = ' ' 
3231       AND HIS350A1.DEP-DL-STATUS(#I) = ' ' 
3232     HIS350A1.DEP-DL-EFF-DATE-N(#I) := 0 
3233     HIS350A1.DEP-DL-end-DATE-N(#I) := 0 
3234   END-IF 
3235   IF HIS350A1.DEP-OLS-PENDING-ST(#I) = ' ' 
3236       AND HIS350A1.DEP-OLS-STATUS(#I) = ' ' 
3237     HIS350A1.DEP-OLS-EFF-DATE-N(#I) := 0 
3238     HIS350A1.DEP-OLS-end-DATE-N(#I) := 0 
3239   END-IF 
3240 END-IF /* (3142) 
3241 /* DEPENDENT MASTER CHECKS 
3242 IF HIS350A1.DEP-DATE-OF-BIRTH-N(#I) = MASK(YYYYMMDD) 
3243     AND HIS350A1.DEP-DATE-OF-BIRTH-N(#I) = 15820000 THRU 26990000 
3244   #DATE-WORK := HIS350A1.DEP-DATE-OF-BIRTH-N(#I) 
3245   MOVE EDITED #DATE-WORK TO #DEP-DOB-D(EM=YYYYMMDD) 
3246 **#DT := #DEP-DOB-D + 730                       /* gsd20070925a start 
3247   #DT := #DEP-DOB-D + 365                       /* gsd20070925a end 
3248   #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
3249   MOVE EDITED #DATE-WORK TO #EFF-D(EM=YYYYMMDD) 
3250   IF #DT LE #EFF-D 
3251       AND HIS350A1.DEP-SSN(#I) = ' ' 
3252     COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
3253       '| SSN is required' INTO #E-MSG 
3254     PERFORM ADD-ERROR 
3255     ESCAPE ROUTINE 
3256   END-IF 
3257 END-IF 
3258 * 
3259 IF HIS350A1.DEP-SSN(#I) NE ' ' 
3260   FADM3. FIND ACT-DEPEND-MAST WITH DEP-SSN = HIS350A1.DEP-SSN(#I) 
3261     IF NO 
3262       ESCAPE BOTTOM(FADM3.) 
3263     END-NOREC 
3264     IF ACT-DEPEND-MAST.DEP-SUBSCRIBER-SSN = HIS350A1.SSN 
3265       ESCAPE TOP 
3266     END-IF 
3267 **  IF (ACT-DEPEND-MAST.DEP-HLTH-STATUS = 'A1'     /* gsd20070831a start 
3268 **      AND HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1') 
3269 **      OR (ACT-DEPEND-MAST.DEP-DNTL-STATUS = 'A1' 
3270 **      AND HIS350A1.DEP-DNTL-PENDING-ST (#I) = 'A1') 
3271 **      OR (ACT-DEPEND-MAST.DEP-DL-STATUS = 'A1' 
3272 **      AND HIS350A1.DEP-DL-PENDING-ST (#I) = 'A1') 
3273 **      OR (ACT-DEPEND-MAST.DEP-OLS-STATUS = 'A1' 
3274 **      AND HIS350A1.DEP-OLS-PENDING-ST (#I) = 'A1') 
3275     IF (ACT-DEPEND-MAST.DEP-HLTH-STATUS = 'A1' 
3276         OR ACT-DEPEND-MAST.DEP-DNTL-STATUS = 'A1' 
3277         OR ACT-DEPEND-MAST.DEP-DL-STATUS = 'A1' 
3278         OR ACT-DEPEND-MAST.DEP-OLS-STATUS = 'A1') 
3279         AND (HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
3280         or HIS350A1.DEP-DNTL-PENDING-ST (#I) = 'A1' 
3281         or HIS350A1.DEP-DL-PENDING-ST (#I) = 'A1' 
3282         or HIS350A1.DEP-OLS-PENDING-ST (#I) = 'A1') /* gsd20070831a end 
3283       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
3284         '| is already a covered dependent for another subscriber' 
3285         INTO #E-MSG 
3286       #E-FLD := 'DEP-DNTL-STATUS' 
3287       PERFORM ADD-ERROR 
3288     END-IF /* (3267) 
3289   END-FIND /* (3261) FADM3. ACT-DEPEND-MAST 
3290 END-IF /* (3260) 
3291 END-SUBROUTINE /* (3011) CHECK-OTHER-COVERAGE 
3292 ************************************************************************ 
3293 DEFINE SUBROUTINE HEALTH-VALIDATIONS 
3294 ************************************************************************ 
3295 #PLAN-CAT := SUBSCR-MAST.HLTH-PLAN-CATEGORY 
3296 #NEW-PLAN-CAT := HIS350A1.HLTH-PLAN-CATEGORY 
3297 IF #PLAN NE #NEW-PLAN 
3298     OR #CAT NE #NEW-CAT 
3299     OR HIS350A1.HLTH-STATUS NE SUBSCR-MAST.HLTH-STATUS 
3300   #LAST-EFF-DATE := SUBSCR-MAST.HLTH-EFF-DATE 
3301   #WORK-N := HIS350A1.EFFECTIVE-DATE-N 
3302   MOVE EDITED #WORK-A TO #EFF-D(EM=YYYYMMDD) 
3303   IF #LAST-EFF-DATE GT #EFF-D 
3304     MOVE EDITED #LAST-EFF-DATE(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
3305     MOVE EDITED #EFF-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE2 
3306     COMPRESS 'The Health Effective Date (' #DISPLAY-DATE2 
3307       ') may not be prior to the Coverage Effective Date on file (' 
3308       #DISPLAY-DATE1 ').  Send to EIP for processing.' 
3309       INTO HIS350A1.CRITICAL-ERROR 
3310   END-IF 
3311 END-IF 
3312 /* Cannot activate coverage prior to when it was last terminated 
3313 IF HIS350A1.HLTH-STATUS = 'A1' 
3314     AND SUBSCR-MAST.HLTH-STATUS = MASK('T'.) 
3315   #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
3316   MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
3317   IF #WORK-D < SUBSCR-MAST.HLTH-EFF-DATE 
3318     MOVE EDITED SUBSCR-MAST.HLTH-EFF-DATE(EM=MM-DD-YYYY) 
3319       TO #DISPLAY-DATE1 
3320     COMPRESS 'Cannot activate Health Coverage prior to' 
3321       #DISPLAY-DATE1 '- Send to EIP for processing.' INTO #E-MSG 
3322     PERFORM ADD-ERROR 
3323     ESCAPE ROUTINE 
3324   END-IF 
3325 END-IF 
3326 /* If status/carrier or plan has changed, update effective date 
3327 FOR #I 1 15 
3328   IF #PLAN NE #NEW-PLAN 
3329       AND (HIS350A1.DEP-HLTH-PENDING-ST(#I) = 'A1' 
3330       OR (HIS350A1.DEP-HLTH-STATUS(#I) = 'A1' 
3331       AND HIS350A1.DEP-HLTH-PENDING-ST(#I) = ' ')) 
3332       AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
3333     HIS350A1.DEP-HLTH-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
3334     IF HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
3335       HIS350A1.SL-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
3336       HIS350A1.LTD-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
3337     END-IF 
3338   END-IF 
3339   IF #CAT NE #NEW-CAT 
3340       AND HIS350A1.DEP-HLTH-PENDING-ST(#I) NE ' ' 
3341       AND HIS350A1.DEP-HLTH-PENDING-ST(#I) NE 
3342       HIS350A1.DEP-HLTH-STATUS(#I) 
3343     HIS350A1.DEP-HLTH-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
3344   END-IF 
3345 END-FOR 
3346 IF (SUBSCR-MAST.HLTH-STATUS NE HIS350A1.HLTH-STATUS 
3347     OR SUBSCR-MAST.HLTH-PLAN-CATEGORY NE HIS350A1.HLTH-PLAN-CATEGORY) 
3348     OR (HIS350A1.TRXN-TYPE = 'EN' 
3349     AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
3350   HIS350A1.HLTH-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
3351 ELSE /* carry forward previous effective date 
3352   IF SUBSCR-MAST.HLTH-EFF-DATE > 0 
3353     MOVE EDITED SUBSCR-MAST.HLTH-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
3354     IF SUBSCR-MAST.HLTH-STATUS = HIS350A1.HLTH-STATUS 
3355         AND HIS350A1.HLTH-EFF-DATE-N NE #WORK-N 
3356       HIS350A1.HLTH-EFF-DATE-N := #WORK-N 
3357       MOVE EDITED SUBSCR-MAST.sl-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
3358       HIS350A1.sl-EFF-DATE-N := #WORK-N 
3359       MOVE EDITED SUBSCR-MAST.ltd-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
3360       HIS350A1.ltd-EFF-DATE-N := #WORK-N 
3361     END-IF 
3362   END-IF 
3363 END-IF 
3364 /* Require coverage if selected for any dependent on Dependent page 
3365 IF HIS350A1.HLTH-STATUS = MASK('T'.) 
3366   IF #FOUND-SPOUSE-H 
3367       OR #FOUND-DEP-H 
3368     #E-MSG := 'Health Coverage must be selected because it was ' 
3369       -'activated on the Dependent page' 
3370     #E-FLD := 'HLTH-STATUS' 
3371     PERFORM ADD-ERROR 
3372   END-IF 
3373 END-IF 
3374 * 
3375 IF NOT(HIS350A1.HLTH-STATUS = MASK('T'.) OR = ' ') 
3376   MOVE HIS350A1.HLTH-PLAN-CATEGORY TO #PLAN-CAT 
3377   if his350a1.subscriber-type = 'AR'   /* mws20080825 
3378      MOVE '00' TO HIS350A1.RATE-SCHEME 
3379   else 
3380      if #cat > '1' 
3381          for #x = 1 to 15 
3382            if his350a1.dep-relation(#x) = ' ' 
3383               escape bottom 
3384            end-if 
3385            if (#cat = '2' or = '4') 
3386            and his350a1.dep-relation(#x) = mask(.'1'.) 
3387                #sp-med-num := his350a1.dep-medicare-number(#x) 
3388            end-if 
3389            if (#cat = '3' or = '4') 
3390            and his350a1.dep-relation(#x) = mask(.'2'.) 
3391            and his350a1.dep-medicare-number(#x) >  ' ' 
3392                #dep-med-num := his350a1.dep-medicare-number(#x) 
3393            end-if 
3394          end-for 
3395       end-if 
3396       callnat 'hri800nn' #program 
3397                          his350a1.subscriber-type 
3398                           his350a1.medicare-number 
3399                           #sp-med-num #dep-med-num 
3400                           #cat 
3401                           his350a1.rate-scheme 
3402   end-if                               /* mws20080825 
3403 * 
3404   HTB808A1.PLAN-NAME := #PLAN 
3405   PERFORM CHECK-PLANS /* Read and return an array of all plans 
3406   IF HIS350A1.HLTH-PLAN-CATEGORY = MASK('BC'.) AND 
3407      HIS350A1.SUBSCRIBER-TYPE = 'AR' 
3408     #E-MSG := 'Active subscribers can not have Medicare Supplement' 
3409     #E-FLD := 'HLTH-PLAN-CATEGORY' 
3410     PERFORM ADD-ERROR 
3411     #E-MSG := his350a1.subscriber-type  
3412     #E-FLD := 'HLTH-PLAN-CATEGORY'  
3413     PERFORM ADD-ERROR  
3414   END-IF 
3415   IF HTB808A1.PLAN-BEG-DATE = 0 
3416       AND HIS350A1.HLTH-PLAN-CATEGORY NE ' ' 
3417     #E-MSG := 'The selected Health plan not found' 
3418     #E-FLD := 'HLTH-PLAN-CATEGORY' 
3419     PERFORM ADD-ERROR 
3420   ELSE /* (3406) 
3421     IF HIS350A1.EFFECTIVE-DATE-N < HTB808A1.PLAN-BEG-DATE 
3422       #E-MSG := 'The Selected Health plan is not offered ' 
3423         - 'before the effective date' 
3424       #E-FLD := 'HLTH-PLAN-CATEGORY' 
3425       PERFORM ADD-ERROR 
3426     ELSE 
3427       IF HTB808A1.PLAN-END-DATE = 0 
3428 **        OR HTB808A1.PLAN-END-DATE < HIS350A1.EFFECTIVE-DATE-N  
3429           OR HIS350A1.EFFECTIVE-DATE-N < HTB808A1.PLAN-END-DATE  
3430         IGNORE 
3431       ELSE 
3432         #E-MSG := 'The selected Health plan is no longer offered.'  
3433         #E-FLD := 'HLTH-PLAN-CATEGORY'  
3434         PERFORM ADD-ERROR  
3435       END-IF 
3436     END-IF 
3437   END-IF /* (3406) 
3438   IF (#CAT = '1' AND (#FOUND-SPOUSE-H OR #FOUND-DEP-H)) 
3439       OR (#CAT = '2' AND (#FOUND-DEP-H OR NOT #FOUND-SPOUSE-H)) 
3440       OR (#CAT = '3' AND (NOT #FOUND-DEP-H OR #FOUND-SPOUSE-H)) 
3441       OR (#CAT = '4' AND (NOT #FOUND-DEP-H OR NOT #FOUND-SPOUSE-H)) 
3442     #E-MSG := 'Select a Health Plan Category that corresponds with' 
3443       -' your selections on the Dependents screen.' 
3444     #E-FLD := 'HLTH-PLAN-CATEGORY' 
3445     PERFORM ADD-ERROR 
3446   END-IF 
3447   IF HIS350A1.MEDICARE-NUMBER NE ' ' 
3448       AND #AGE GE 65 
3449       AND HIS350A1.HLTH-PLAN-CATEGORY = MASK ('HX'.) OR = MASK('HT'.) 
3450       OR = MASK('BD'.) 
3451     #E-MSG := 'Medicare eligible cannot have selected health plan' 
3452     #E-FLD := 'HLTH-PLAN-CATEGORY' 
3453     PERFORM ADD-ERROR 
3454   END-IF 
3455   IF #SPOUSE-MEDICARE NE ' ' 
3456       AND #SP-AGE GE 65 
3457       AND HIS350A1.HLTH-PLAN-CATEGORY = MASK ('HX'.) OR = MASK('HT'.) 
3458       OR = MASK('BD'.) 
3459     #E-MSG := 
3460       'Spouse medicare eligible cannot have selected health plan' 
3461     #E-FLD := 'HLTH-PLAN-CATEGORY' 
3462     PERFORM ADD-ERROR 
3463   END-IF 
3464   IF HIS350A1.SUBSCRIBER-TYPE NE 'AR'  
3465       AND HIS350A1.HLTH-PLAN-CATEGORY = MASK ('BC'.)  
3466     IF HIS350A1.HLTH-PLAN-CATEGORY = MASK(..'1') AND  
3467      HIS350A1.MEDICARE-NUMBER = ' '  
3468     #E-MSG :=  
3469       'You must have Medicare to be eligible for this Plan'  
3470     #E-FLD := 'HLTH-PLAN-CATEGORY'  
3471     PERFORM ADD-ERROR  
3472     END-IF  
3473     IF HIS350A1.HLTH-PLAN-CATEGORY = MASK(..'2') AND  
3474       HIS350A1.MEDICARE-NUMBER = ' ' and #SPOUSE-MEDICARE = ' '  
3475     #E-MSG :=  
3476     'You or your spouse must have Medicare to be eligible for this Plan'  
3477     #E-FLD := 'HLTH-PLAN-CATEGORY'  
3478     PERFORM ADD-ERROR  
3479     END-IF  
3480     IF HIS350A1.HLTH-PLAN-CATEGORY = MASK(..'3') AND  
3481       HIS350A1.MEDICARE-NUMBER = ' ' and #DEP-MED-NUM = ' '  
3482     #E-MSG :=  
3483     'You or your dependent must have Medicare to be eligible for this Plan'  
3484     #E-FLD := 'HLTH-PLAN-CATEGORY'  
3485     PERFORM ADD-ERROR  
3486     END-IF  
3487     IF HIS350A1.HLTH-PLAN-CATEGORY = MASK(..'4') AND  
3488       HIS350A1.MEDICARE-NUMBER = ' '  
3489          AND #SPOUSE-MEDICARE = ' ' AND #DEP-MED-NUM = ' '  
3490     #E-MSG :=  
3491     'You or one of your eligible dependents must have Medicare '       -  
3492         'to be able to select this Plan'  
3493     #E-FLD := 'HLTH-PLAN-CATEGORY'  
3494     PERFORM ADD-ERROR  
3495     END-IF  
3496   END-IF  
3497   IF HIS350A1.TRXN-TYPE = 'EN' 
3498     MOVE 'A1' TO HIS808A1.MENU-TRANS-CODE 
3499   ELSE /* 'CH' 
3500     MOVE 'C3' TO HIS808A1.MENU-TRANS-CODE 
3501   END-IF 
3502   MOVE HIS350A1.SSN TO HIS808A1.SSN 
3503   IF HIS350A1.DATE-HIRED-N = 0 
3504     and his350a1.subscriber-type = 'AR'  
3505     #E-MSG := 'Date of Hire is a required field on Enrollee tab' 
3506     #E-FLD := 'DATE-HIRED-N' 
3507     PERFORM ADD-ERROR 
3508     ESCAPE ROUTINE immediate 
3509   ELSE 
3510     MOVE HIS350A1.DATE-HIRED-N TO HIS808A1.DATE-HIRED 
3511   END-IF 
3512   MOVE HIS350A1.HLTH-STATUS TO HIS808A1.HLTH-STATUS 
3513   MOVE HIS350A1.HLTH-EFF-DATE-N TO HIS808A1.HLTH-EFF-DATE 
3514   MOVE HIS350A1.PRIOR-SRVC-BEG-DATE-N TO 
3515     HIS808A1.PRIOR-SRVC-BEG-DATE 
3516   MOVE HIS350A1.PRIOR-SRVC-END-DATE-N TO 
3517     HIS808A1.PRIOR-SRVC-END-DATE 
3518   MOVE HIS350A1.PRE-EX-END-DATE-N TO 
3519     HIS808A1.PRE-EX-END-DATE 
3520   IF HIS350A1.CHANGE-REASON = 'OE' /* Open Enrollment 
3521     HIS350A1.LATE-ENTRANT := 'Y' 
3522   END-IF 
3523   MOVE HIS350A1.LATE-ENTRANT TO HIS808A1.LATE-ENTRANT 
3524   MOVE SUBSCR-MAST.HLTH-STATUS TO HIS808A1.ORIG-HLTH-STATUS 
3525   reset his808a1.program-name 
3526   PERFORM YYYYMMDD-TO-MMDDYYYY 
3527   IF #ESCAPE 
3528     ESCAPE ROUTINE 
3529   END-IF 
3530 /* prex date calculations for Subscriber 
3531   CALLNAT 'KIS808N1' /* prex date calculations for Subscriber 
3532     HIS808A1 
3533   PERFORM MMDDYYYY-TO-YYYYMMDD 
3534   MOVE HIS808A1.PRE-EX-END-DATE TO #DATE-TRANSFER-A 
3535   MOVE #DATE-TRANSFER-N TO HIS350A1.PRE-EX-END-DATE-N 
3536   FR3. FOR #I 1 35 
3537     DECIDE FOR FIRST CONDITION 
3538       WHEN HIS350A1.SUPPORTING-DOC-TYPE(#I) = ' ' 
3539         ESCAPE BOTTOM(FR3.) 
3540       WHEN NONE IGNORE 
3541     END-DECIDE /* (3538) 
3542   END-FOR /* fr3. (3537) 
3543 END-IF /* (3375) 
3544 END-SUBROUTINE /* (3293) health-validations 
3545 ************************************************************************ 
3546 DEFINE SUBROUTINE DENTAL-VALIDATIONS 
3547 ************************************************************************ 
3548 #PLAN-CAT := SUBSCR-MAST.DNTL-PLAN-CATEGORY 
3549 #NEW-PLAN-CAT := HIS350A1.DNTL-PLAN-CATEGORY 
3550 IF #PLAN NE #NEW-PLAN 
3551     OR #CAT NE #NEW-CAT 
3552     OR HIS350A1.DNTL-STATUS NE SUBSCR-MAST.DNTL-STATUS 
3553   #LAST-EFF-DATE := SUBSCR-MAST.DNTL-EFF-DATE 
3554   #WORK-N := HIS350A1.EFFECTIVE-DATE-N 
3555   MOVE EDITED #WORK-A TO #EFF-D(EM=YYYYMMDD) 
3556   IF #LAST-EFF-DATE GT #EFF-D 
3557     MOVE EDITED #LAST-EFF-DATE(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
3558     MOVE EDITED #EFF-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE2 
3559     COMPRESS 'The Dental Effective Date (' #DISPLAY-DATE2 
3560       ') may not be prior to the Coverage Effective Date on file (' 
3561       #DISPLAY-DATE1 ').  Send to EIP for processing.' 
3562       INTO HIS350A1.CRITICAL-ERROR 
3563   END-IF 
3564 END-IF 
3565 IF HIS350A1.DNTL-STATUS = 'A1' 
3566     AND SUBSCR-MAST.DNTL-STATUS = MASK('T'.) 
3567   #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
3568   MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
3569   IF #WORK-D < SUBSCR-MAST.DNTL-EFF-DATE 
3570     MOVE EDITED SUBSCR-MAST.DNTL-EFF-DATE(EM=MM-DD-YYYY) 
3571       TO #DISPLAY-DATE1 
3572     COMPRESS 'Cannot activate Dental Coverage prior to' 
3573       #DISPLAY-DATE1 '- Send to EIP for processing.' INTO #E-MSG 
3574     PERFORM ADD-ERROR 
3575     ESCAPE ROUTINE 
3576   END-IF 
3577 END-IF 
3578 FOR #I 1 15 
3579   IF #PLAN NE #NEW-PLAN 
3580       AND (HIS350A1.DEP-DNTL-PENDING-ST(#I) = 'A1' 
3581       OR (HIS350A1.DEP-DNTL-STATUS(#I) = 'A1' 
3582       AND HIS350A1.DEP-DNTL-PENDING-ST(#I) = ' ')) 
3583     HIS350A1.DEP-DNTL-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
3584   END-IF 
3585   IF #CAT NE #NEW-CAT 
3586       AND HIS350A1.DEP-DNTL-PENDING-ST(#I) NE ' ' 
3587       AND HIS350A1.DEP-DNTL-PENDING-ST(#I) NE 
3588       HIS350A1.DEP-DNTL-STATUS(#I) 
3589     HIS350A1.DEP-DNTL-EFF-DATE-N(#I) := HIS350A1.EFFECTIVE-DATE-N 
3590   END-IF 
3591 END-FOR 
3592 * 
3593 IF (SUBSCR-MAST.DNTL-STATUS NE HIS350A1.DNTL-STATUS 
3594     OR SUBSCR-MAST.DNTL-PLAN-CATEGORY NE HIS350A1.DNTL-PLAN-CATEGORY) 
3595     OR (HIS350A1.TRXN-TYPE = 'EN' 
3596     AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
3597   HIS350A1.DNTL-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
3598 ELSE 
3599   IF SUBSCR-MAST.DNTL-EFF-DATE > 0 
3600     MOVE EDITED SUBSCR-MAST.DNTL-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
3601     IF SUBSCR-MAST.DNTL-STATUS = HIS350A1.DNTL-STATUS 
3602         AND SUBSCR-MAST.DNTL-PLAN-CATEGORY = HIS350A1.DNTL-PLAN-CATEGORY 
3603         AND HIS350A1.DNTL-EFF-DATE-N NE #WORK-N 
3604       HIS350A1.DNTL-EFF-DATE-N := #WORK-N 
3605     END-IF 
3606   END-IF 
3607 END-IF 
3608 * 
3609 IF HIS350A1.DNTL-STATUS = MASK('T'.) 
3610   IF #FOUND-DEP-D 
3611       OR #FOUND-SPOUSE-D 
3612     #E-MSG := 'Dental Coverage must be selected because it was' 
3613       -' activated on the Dependent page.' 
3614     #E-FLD := 'DNTL-PLAN-CATEGORY' 
3615     PERFORM ADD-ERROR 
3616   END-IF 
3617 END-IF 
3618 * 
3619 IF NOT(HIS350A1.DNTL-STATUS = MASK('T'.) OR = ' ') 
3620   MOVE HIS350A1.DNTL-PLAN-CATEGORY TO #PLAN-CAT 
3621   MOVE #CAT TO #DNTL-CAT 
3622   HTB808A1.PLAN-NAME := #PLAN 
3623   PERFORM CHECK-PLANS /* Read and return an array of all plans 
3624 * 
3625   IF HTB808A1.PLAN-BEG-DATE = 0 
3626       AND HIS350A1.DNTL-PLAN-CATEGORY NE ' ' 
3627     #E-MSG := 'The selected Dental plan was not found.' 
3628     #E-FLD := 'DNTL-PLAN-CATEGORY' 
3629     PERFORM ADD-ERROR 
3630   ELSE /* (3625) 
3631     IF HTB808A1.PLAN-BEG-DATE > HIS350A1.EFFECTIVE-DATE-N 
3632       #E-MSG := 'The selected Dental plan is not offered before the ' 
3633         -'effective date' 
3634       #E-FLD := 'DNTL-PLAN-CATEGORY' 
3635       PERFORM ADD-ERROR 
3636     ELSE 
3637       IF HTB808A1.PLAN-END-DATE = 0 
3638           OR HIS350A1.EFFECTIVE-DATE-N < HTB808A1.PLAN-END-DATE 
3639         IGNORE 
3640       ELSE 
3641         #E-MSG := 'The selected Dental plan no longer offered.' 
3642         #E-FLD := 'DNTL-PLAN-CATEGORY' 
3643         PERFORM ADD-ERROR 
3644       END-IF 
3645     END-IF 
3646   END-IF /* (3625) 
3647   IF (#CAT = '1' AND (#FOUND-SPOUSE-D OR #FOUND-DEP-D)) 
3648       OR (#CAT = '2' AND (#FOUND-DEP-D OR NOT #FOUND-SPOUSE-D)) 
3649       OR (#CAT = '3' AND (NOT #FOUND-DEP-D OR #FOUND-SPOUSE-D)) 
3650       OR (#CAT = '4' AND (NOT #FOUND-DEP-D OR NOT #FOUND-SPOUSE-D)) 
3651     #E-MSG := 'Select a Dental Plan Category that corresponds with' 
3652       -' your selections on the Dependents screen.' 
3653     #E-FLD := 'DNTL-PLAN-CATEGORY' 
3654     PERFORM ADD-ERROR 
3655   END-IF 
3656 END-IF /* (3619) 
3657 * 
3658 /* ACTIVE DENTAL PLUS 
3659 IF HIS350A1.DNTP-STATUS NE SUBSCR-MAST.DNTP-STATUS 
3660   #LAST-EFF-DATE := SUBSCR-MAST.DNTP-EFF-DATE 
3661   #WORK-N := HIS350A1.EFFECTIVE-DATE-N 
3662   MOVE EDITED #WORK-A TO #EFF-D(EM=YYYYMMDD) 
3663   IF #LAST-EFF-DATE GT #EFF-D 
3664     MOVE EDITED #LAST-EFF-DATE(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
3665     MOVE EDITED #EFF-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE2 
3666     COMPRESS 'The Dental Plus Effective Date (' #DISPLAY-DATE2 
3667       ') may not be prior to the Coverage Effective Date on file (' 
3668       #DISPLAY-DATE1 ').  Send to EIP for processing.' 
3669       INTO HIS350A1.CRITICAL-ERROR 
3670   END-IF 
3671 END-IF 
3672 IF HIS350A1.DNTP-STATUS = 'A1' 
3673     AND SUBSCR-MAST.DNTP-STATUS = MASK('T'.) 
3674   #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
3675   MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
3676   IF #WORK-D < SUBSCR-MAST.DNTP-EFF-DATE 
3677     MOVE EDITED SUBSCR-MAST.DNTP-EFF-DATE(EM=MM-DD-YYYY) 
3678       TO #DISPLAY-DATE1 
3679     COMPRESS 'Cannot activate Dental Plus Coverage prior to' 
3680       #DISPLAY-DATE1 '- Send to EIP for processing.' INTO #E-MSG 
3681     PERFORM ADD-ERROR 
3682     ESCAPE ROUTINE 
3683   END-IF 
3684 END-IF 
3685 * 
3686 IF ((SUBSCR-MAST.DNTP-STATUS NE HIS350A1.DNTP-STATUS 
3687     OR SUBSCR-MAST.DNTP-PLAN-CATEGORY NE HIS350A1.DNTP-PLAN-CATEGORY) 
3688     AND HIS350A1.DNTP-STATUS NE ' ') 
3689     OR (HIS350A1.TRXN-TYPE = 'EN' 
3690     AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
3691   HIS350A1.DNTP-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
3692 ELSE 
3693   IF SUBSCR-MAST.DNTP-EFF-DATE > 0 
3694     MOVE EDITED SUBSCR-MAST.DNTP-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
3695   END-IF 
3696   IF SUBSCR-MAST.DNTP-STATUS = HIS350A1.DNTP-STATUS 
3697       AND SUBSCR-MAST.DNTP-STATUS NE ' ' 
3698       AND SUBSCR-MAST.DNTP-PLAN-CATEGORY = HIS350A1.DNTP-PLAN-CATEGORY 
3699       AND HIS350A1.DNTP-EFF-DATE-N NE #WORK-N 
3700     HIS350A1.DNTP-EFF-DATE-N := #WORK-N 
3701   END-IF 
3702 END-IF 
3703 IF NOT (HIS350A1.DNTP-STATUS = MASK('T'.) OR = ' ') 
3704   IF HIS350A1.DNTL-STATUS NE 'A1' 
3705     #E-MSG := 'You must select dental to have dental plus' 
3706     #E-FLD := 'DNTL-PLAN-CATEGORY' 
3707     PERFORM ADD-ERROR 
3708   END-IF 
3709   MOVE HIS350A1.DNTP-PLAN-CATEGORY TO #PLAN-CAT 
3710   HTB808A1.PLAN-NAME := #PLAN 
3711   PERFORM CHECK-PLANS /* Read and return an array of all plans 
3712 * 
3713   IF HTB808A1.PLAN-BEG-DATE = 0 
3714     #E-MSG := 'Dental Plan not found' 
3715     #E-FLD := 'DNTP-PLAN-CATEGORY' 
3716     PERFORM ADD-ERROR 
3717   ELSE /* (3713) 
3718     IF HTB808A1.PLAN-BEG-DATE > HIS350A1.EFFECTIVE-DATE-N 
3719       #E-MSG := 'Dental Plan not offered before effective date' 
3720       #E-FLD := 'DNTP-PLAN-CATEGORY' 
3721       PERFORM ADD-ERROR 
3722     ELSE 
3723       IF HTB808A1.PLAN-END-DATE = 0 
3724           OR HIS350A1.EFFECTIVE-DATE-N < HTB808A1.PLAN-END-DATE 
3725         IGNORE 
3726       ELSE 
3727         #E-MSG := 'Dental Plan not offered any more' 
3728         #E-FLD := 'DNTP-PLAN-CATEGORY' 
3729         PERFORM ADD-ERROR 
3730       END-IF 
3731     END-IF 
3732   END-IF /* (3713) 
3733   IF #CAT NE #DNTL-CAT 
3734     #E-MSG := 'Coverage levels must be the same for dental' 
3735       -' and dental plus' 
3736     #E-FLD := 'DNTL-PLAN-CATEGORY' 
3737     PERFORM ADD-ERROR 
3738   END-IF 
3739 END-IF /* (3703) 
3740 END-SUBROUTINE /* (3546) dental-validations 
3741 ************************************************************************ 
3742 DEFINE SUBROUTINE DEPEND-LIFE-VALIDATIONS 
3743 ************************************************************************ 
3744 IF HIS350A1.DL-STATUS NE SUBSCR-MAST.DL-STATUS 
3745   #LAST-EFF-DATE := SUBSCR-MAST.DL-EFF-DATE 
3746   #WORK-N := HIS350A1.EFFECTIVE-DATE-N 
3747   MOVE EDITED #WORK-A TO #EFF-D(EM=YYYYMMDD) 
3748   IF #LAST-EFF-DATE GT #EFF-D 
3749     MOVE EDITED #LAST-EFF-DATE(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
3750     MOVE EDITED #EFF-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE2 
3751     COMPRESS 'The Dependent Child Effective Date (' #DISPLAY-DATE2 
3752       ') may not be prior to the Coverage Effective Date on file (' 
3753       #DISPLAY-DATE1 ').  Send to EIP for processing.' 
3754       INTO HIS350A1.CRITICAL-ERROR 
3755   END-IF 
3756 END-IF 
3757 IF ((SUBSCR-MAST.DL-STATUS NE HIS350A1.DL-STATUS 
3758     AND HIS350A1.DL-STATUS NE ' ') 
3759     OR SUBSCR-MAST.DL-PLAN-CATEGORY NE HIS350A1.DL-PLAN-CATEGORY) 
3760     OR (HIS350A1.TRXN-TYPE = 'EN' 
3761     AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
3762   IF HIS350A1.TRXN-TYPE = 'EN' 
3763       AND SUBSCR-MAST.DL-STATUS NE ' ' 
3764       AND HIS350A1.DL-STATUS = ' ' 
3765     IGNORE 
3766   ELSE 
3767     HIS350A1.DL-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
3768   END-IF 
3769   IF HIS350A1.DL-STATUS = ' ' 
3770       AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
3771     MOVE 'T4' TO HIS350A1.DL-STATUS 
3772   END-IF 
3773 ELSE 
3774   IF SUBSCR-MAST.DL-EFF-DATE > 0 
3775     MOVE EDITED SUBSCR-MAST.DL-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
3776     IF SUBSCR-MAST.DL-STATUS = HIS350A1.DL-STATUS 
3777         AND SUBSCR-MAST.DL-PLAN-CATEGORY = HIS350A1.DL-PLAN-CATEGORY 
3778         AND HIS350A1.DL-EFF-DATE-N NE #WORK-N 
3779       HIS350A1.DL-EFF-DATE-N := #WORK-N 
3780     END-IF 
3781   END-IF 
3782 END-IF 
3783 * 
3784 IF HIS350A1.DL-STATUS = MASK('T'.) 
3785     AND #FOUND-DEP-DL 
3786     AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
3787   #E-MSG := 'Dependent Life Coverage must be selected because it' 
3788     -' was activated on the Dependent page.' 
3789   #E-FLD := 'DL-PLAN-CATEGORY' 
3790   PERFORM ADD-ERROR 
3791 END-IF 
3792 * 
3793 IF NOT(HIS350A1.DL-STATUS = MASK('T'.) OR = ' ') 
3794   IF SUBSCR-MAST.DL-STATUS = MASK('T'.) 
3795     #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
3796     MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
3797     IF #WORK-D < SUBSCR-MAST.DL-EFF-DATE 
3798       MOVE EDITED SUBSCR-MAST.DL-EFF-DATE(EM=MM-DD-YYYY) 
3799         TO #DISPLAY-DATE1 
3800       COMPRESS 'Cannot activate Dependent Life (child) Coverage prior to' 
3801         #DISPLAY-DATE1 '- Send to EIP for processing.' INTO #E-MSG 
3802       PERFORM ADD-ERROR 
3803       ESCAPE ROUTINE 
3804     END-IF 
3805   END-IF 
3806 * 
3807   IF #NOT-YET-BORN 
3808     #E-MSG := 'Dependent Date of Birth must be before today''s date' 
3809     #E-FLD := 'DL-PLAN-CATEGORY' 
3810     PERFORM ADD-ERROR 
3811   END-IF 
3812   IF HIS350A1.DL-STATUS NE MASK('T')  /* ACTIVE DEP LIFE 
3813     MOVE HIS350A1.DL-PLAN-CATEGORY TO #PLAN-CAT 
3814     HTB808A1.PLAN-NAME := 'DL' 
3815     PERFORM CHECK-PLANS /* Read and return an array of all plans 
3816 * 
3817     IF HTB808A1.PLAN-BEG-DATE = 0 
3818       #E-MSG := 'Dependent Life Plan not found' 
3819       #E-FLD := 'DL-PLAN-CATEGORY' 
3820       PERFORM ADD-ERROR 
3821     ELSE /* (3817) 
3822       IF HTB808A1.PLAN-BEG-DATE > HIS350A1.EFFECTIVE-DATE-N 
3823         #E-MSG := 'Dependent Life Plan not offered before effective date' 
3824         #E-FLD := 'DL-PLAN-CATEGORY' 
3825         PERFORM ADD-ERROR 
3826       ELSE 
3827         IF HTB808A1.PLAN-END-DATE = 0 
3828             OR HIS350A1.EFFECTIVE-DATE-N < HTB808A1.PLAN-END-DATE 
3829           IGNORE 
3830         ELSE 
3831           #E-MSG := 'Dependent Life Plan not offered any more' 
3832           #E-FLD := 'DL-PLAN-CATEGORY' 
3833           PERFORM ADD-ERROR 
3834         END-IF 
3835       END-IF 
3836     END-IF /* (3817) 
3837     IF NOT #FOUND-DEP-DL 
3838       #E-MSG := 'No dependent selected for dependent life coverage' 
3839       #E-FLD := 'DL-PLAN-CATEGORY' 
3840       PERFORM ADD-ERROR 
3841     END-IF 
3842   END-IF /* (3812) 
3843 END-IF /* (3793) 
3844 END-SUBROUTINE /* (3742) depend-life-validations 
3845 ************************************************************************ 
3846 DEFINE SUBROUTINE OPT-LIFE-VALIDATIONS 
3847 ************************************************************************ 
3848 IF HIS350A1.OL-STATUS NE SUBSCR-MAST.OL-STATUS 
3849   #LAST-EFF-DATE := SUBSCR-MAST.OL-EFF-DATE 
3850   #WORK-N := HIS350A1.EFFECTIVE-DATE-N 
3851   MOVE EDITED #WORK-A TO #EFF-D(EM=YYYYMMDD) 
3852   IF #LAST-EFF-DATE GT #EFF-D 
3853     MOVE EDITED #LAST-EFF-DATE(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
3854     MOVE EDITED #EFF-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE2 
3855     COMPRESS 'The Optional Life Effective Date (' #DISPLAY-DATE2 
3856       ') may not be prior to the Coverage Effective Date on file (' 
3857       #DISPLAY-DATE1 ').  Send to EIP for processing.' 
3858       INTO HIS350A1.CRITICAL-ERROR 
3859   END-IF 
3860 END-IF 
3861 IF HIS350A1.OL-END-DATE-N NE 0 
3862     AND HIS350A1.OL-PLAN-COVER-LEVEL NE SUBSCR-MAST.OL-PLAN-COVER-LEVEL 
3863   HIS350A1.CRITICAL-ERROR := 'Optional Life is in waiver status.  ' 
3864     -'Send to EIP for processing.' 
3865 END-IF 
3866 IF ((SUBSCR-MAST.OL-STATUS NE HIS350A1.OL-STATUS 
3867     AND HIS350A1.OL-STATUS NE ' ') 
3868     OR (SUBSCR-MAST.OL-PLAN-COVER-LEVEL NE HIS350A1.OL-PLAN-COVER-LEVEL 
3869     AND HIS350A1.OL-PLAN-COVER-LEVEL NE ' ')) 
3870     OR (HIS350A1.TRXN-TYPE = 'EN' 
3871     AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
3872   HIS350A1.OL-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
3873 ELSE 
3874   IF SUBSCR-MAST.OL-EFF-DATE > 0 
3875     MOVE EDITED SUBSCR-MAST.OL-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
3876     IF SUBSCR-MAST.OL-STATUS = HIS350A1.OL-STATUS 
3877         AND SUBSCR-MAST.OL-PLAN-COVER-LEVEL = 
3878         HIS350A1.OL-PLAN-COVER-LEVEL 
3879         AND HIS350A1.OL-EFF-DATE-N NE #WORK-N 
3880       HIS350A1.OL-EFF-DATE-N := #WORK-N 
3881     END-IF 
3882   END-IF 
3883 END-IF 
3884 * 
3885 IF NOT(HIS350A1.OL-STATUS = MASK('T'.) OR = ' ') 
3886   IF SUBSCR-MAST.OL-STATUS = MASK('T'.) 
3887     #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
3888     MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
3889     IF #WORK-D < SUBSCR-MAST.OL-EFF-DATE 
3890       MOVE EDITED SUBSCR-MAST.OL-EFF-DATE(EM=MM-DD-YYYY) 
3891         TO #DISPLAY-DATE1 
3892       COMPRESS 'Cannot activate Optional Life Coverage prior to' 
3893         #DISPLAY-DATE1 '- Send to EIP for processing.' INTO #E-MSG 
3894       PERFORM ADD-ERROR 
3895       ESCAPE ROUTINE 
3896     END-IF 
3897   END-IF 
3898 * 
3899   IF HIS350A1.DATE-OF-BIRTH-N > 0 
3900       or (his350a1.change-reason = 'OE' or = 'AE' 
3901       and his350a1.ol-status = 'A1' 
3902       and SUBSCR-MAST.ol-status ne 'A1') 
3903     MOVE HIS350A1.DATE-OF-BIRTH-N TO #DATE-WORK 
3904     MOVE EDITED #BILL-DATE(EM=YYYY) TO #BILL-YEAR 
3905     #BILL-YEAR-N := #BILL-YEAR-N - 1 
3906     COMPRESS #BILL-YEAR '1231' INTO #1231-DATE 
3907       LEAVING NO 
3908     #COMP-AGE := (VAL(#1231-DATE) - VAL(#DATE-WORK)) / 10000 
3909     INCLUDE HIS805C1 /* DETERMINE #OL-AGE-GRP 
3910     HIS350A1.OL-AGE-GROUP := #OL-AGE-GRP 
3911   END-IF 
3912   HTB808A1.PLAN-NAME := 'OL' 
3913   PERFORM CHECK-PLANS /* Return an array of all plans 
3914 * 
3915   IF HTB808A1.PLAN-BEG-DATE = 0 
3916     #E-MSG := 'Optional Life Plan not found' 
3917     #E-FLD := 'OL-PLAN-COVER-LEVEL' 
3918     PERFORM ADD-ERROR 
3919   ELSE /* (3915) 
3920     IF HTB808A1.PLAN-BEG-DATE > HIS350A1.EFFECTIVE-DATE-N 
3921       #E-MSG := 
3922         'Optional Life Plan not offered before effective date' 
3923       #E-FLD := 'OL-PLAN-COVER-LEVEL' 
3924       PERFORM ADD-ERROR 
3925     ELSE 
3926       IF HTB808A1.PLAN-END-DATE = 0 
3927           OR HIS350A1.EFFECTIVE-DATE-N < HTB808A1.PLAN-END-DATE 
3928         IGNORE 
3929       ELSE 
3930         #E-MSG := 'Optional Life Plan not offered any more' 
3931         #E-FLD := 'OL-PLAN-CATEGORY' 
3932         PERFORM ADD-ERROR 
3933       END-IF 
3934     END-IF 
3935   END-IF /* (3915) 
3936   IF HIS350A1.OL-PLAN-COVER-LEVEL = ' ' 
3937     #E-MSG := 'Optional Life Coverage Level must be selected' 
3938     #E-FLD := 'OL-PLAN-COVER-LEVEL' 
3939     PERFORM ADD-ERROR 
3940     ESCAPE ROUTINE 
3941   END-IF 
3942 * 
3943   IF HIS350A1.TRXN-TYPE = 'CH' 
3944     IF HIS350A1.CHANGE-REASON NE 'OE' 
3945       #OL-INCREASE := 50 
3946     ELSE 
3947 **    #OL-INCREASE := 30 
3948       #OL-INCREASE := 50   /* gsd20070820a 
3949     END-IF 
3950     IF HIS350A1.FLEX-BENEFITS-IND = 'N' OR = ' ' /* No MoneyPlu$ 
3951       IF ((SUBSCR-MAST.OL-STATUS = MASK('T'.) OR = ' ' 
3952           AND HIS350A1.OL-STATUS = 'A1') 
3953           OR (VAL(HIS350A1.OL-PLAN-COVER-LEVEL) GT 
3954           VAL(SUBSCR-MAST.OL-PLAN-COVER-LEVEL))) 
3955           AND HIS350A1.IS-OL-MEDICAL-EVID-RECEIVED NE 'Y' 
3956           AND not (HIS350A1.CHANGE-REASON = 'OE' or = 'AE') 
3957         #E-MSG := 'You must provide medical evidence to activate ' 
3958           -'Optional Life' 
3959         #E-FLD := 'OL-PLAN-COVER-LEVEL' 
3960         PERFORM ADD-ERROR 
3961       END-IF 
3962     ELSE /* (3944) MoneyPlu$ 
3963       IF #SPEC-ELIG 
3964         IF #NOT-ON-FILE OR SUBSCR-MAST.OL-PLAN-COVER-LEVEL = ' ' 
3965           #MAX-OL-COVER := VAL(HIS350A1.OL-PLAN-COVER-LEVEL) 
3966             + #OL-INCREASE 
3967         ELSE 
3968           #MAX-OL-COVER := VAL(SUBSCR-MAST.OL-PLAN-COVER-LEVEL) 
3969             + #OL-INCREASE 
3970         END-IF 
3971         IF VAL(HIS350A1.OL-PLAN-COVER-LEVEL) > #MAX-OL-COVER 
3972             AND HIS350A1.IS-OL-MEDICAL-EVID-RECEIVED NE 'Y' 
3973             AND not (hIS350A1.CHANGE-REASON = 'OE' or = 'AE') 
3974           #E-MSG := 'You must provide medical evidence to activate ' 
3975             -'Optional Life' 
3976           #E-FLD := 'OL-PLAN-COVER-LEVEL' 
3977           PERFORM ADD-ERROR 
3978         END-IF 
3979         if #max-ol-cover > 500                  /* gsd20071106a start 
3980           #max-ol-cover := 500 
3981         end-if                                  /* gsd20071106a end 
3982       END-IF 
3983     END-IF /* (3944) 
3984   END-IF /* (3943) 
3985 END-IF /* (3859) 
3986 END-SUBROUTINE /* (3846) opt-life-validations 
3987 ************************************************************************ 
3988 DEFINE SUBROUTINE DEPEND-LIFE-SP-VALIDATIONS 
3989 ************************************************************************ 
3990 IF HIS350A1.OLS-STATUS NE SUBSCR-MAST.OLS-STATUS 
3991   #LAST-EFF-DATE := SUBSCR-MAST.OLS-EFF-DATE 
3992   #WORK-N := HIS350A1.EFFECTIVE-DATE-N 
3993   MOVE EDITED #WORK-A TO #EFF-D(EM=YYYYMMDD) 
3994   IF #LAST-EFF-DATE GT #EFF-D 
3995     MOVE EDITED #LAST-EFF-DATE(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
3996     MOVE EDITED #EFF-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE2 
3997     COMPRESS 'The Dependent Life Spouse Effective Date (' #DISPLAY-DATE2 
3998       ') may not be prior to the Coverage Effective Date on file (' 
3999       #DISPLAY-DATE1 ').  Send to EIP for processing.' 
4000       INTO HIS350A1.CRITICAL-ERROR 
4001   END-IF 
4002 END-IF 
4003 IF (((SUBSCR-MAST.OLS-STATUS NE HIS350A1.OLS-STATUS 
4004     AND HIS350A1.OLS-STATUS NE ' ') 
4005     OR SUBSCR-MAST.OLS-COVER-LEVEL NE HIS350A1.OLS-COVER-LEVEL) 
4006     OR HIS350A1.TRXN-TYPE = 'EN') 
4007     AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
4008   HIS350A1.OLS-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
4009   IF HIS350A1.OLS-STATUS = ' ' 
4010       AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
4011     MOVE 'T4' TO HIS350A1.OLS-STATUS 
4012   END-IF 
4013 ELSE 
4014   IF SUBSCR-MAST.OLS-EFF-DATE > 0 
4015     MOVE EDITED SUBSCR-MAST.OLS-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
4016     IF SUBSCR-MAST.OLS-STATUS = HIS350A1.OLS-STATUS 
4017         AND SUBSCR-MAST.OLS-COVER-LEVEL = HIS350A1.OLS-COVER-LEVEL 
4018         AND HIS350A1.OLS-EFF-DATE-N NE #WORK-N 
4019         AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
4020       HIS350A1.OLS-EFF-DATE-N := #WORK-N 
4021     END-IF 
4022   END-IF 
4023 END-IF 
4024 * 
4025 IF HIS350A1.OLS-STATUS = MASK('T'.) 
4026     AND #FOUND-SPOUSE-OLS 
4027     AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
4028   #E-MSG := 'Dependent Life (spouse) Coverage must be selected' 
4029     -' because it was activated on the Dependent page.' 
4030   #E-FLD := 'DL-PLAN-CATEGORY' 
4031   PERFORM ADD-ERROR 
4032 END-IF 
4033 * 
4034 IF NOT(HIS350A1.OLS-STATUS = MASK('T'.) OR = ' ') 
4035   IF SUBSCR-MAST.OLS-STATUS = MASK('T'.) 
4036     #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
4037     MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
4038     IF #WORK-D < SUBSCR-MAST.OLS-EFF-DATE 
4039       MOVE EDITED SUBSCR-MAST.OLS-EFF-DATE(EM=MM-DD-YYYY) 
4040         TO #DISPLAY-DATE1 
4041       COMPRESS 'Cannot activate Dependent Life (spouse) Coverage prior to' 
4042         #DISPLAY-DATE1 '- Send to EIP for processing.' INTO #E-MSG 
4043       PERFORM ADD-ERROR 
4044       ESCAPE ROUTINE 
4045     END-IF 
4046   END-IF 
4047 * 
4048   DECIDE FOR FIRST CONDITION 
4049     WHEN SUBSCR-MAST.OLS-STATUS = 'A1'             /* ols is prev active 
4050         AND NOT(HIS350A1.OLS-STATUS = MASK('T'.) OR = ' ') 
4051       IGNORE                                  /* do not update age group 
4052     WHEN (HIS350A1.OLS-STATUS = 'A1'           /* ols activated AFTER ol 
4053         AND SUBSCR-MAST.OLS-STATUS = MASK('T'.) OR = ' ') 
4054       if his350a1.ol-status = 'A1' 
4055         his350a1.ols-age-group := his350a1.ol-age-group 
4056       else 
4057         IF HIS350A1.DATE-OF-BIRTH-N > 0  /* ol based on subscr age last yr 
4058             AND #EFF-YYYY-N > 0 
4059           #1231-LAST-YEAR-N := #EFF-YYYY-N - 1  /* 20080516 
4060           COMPRESS #1231-LAST-YEAR-N '1231' INTO #1231-LAST-YEAR 
4061           #COMP-AGE := 
4062             (#1231-LAST-YEAR-n  - HIS350A1.DATE-OF-BIRTH-N) / 10000 
4063           INCLUDE HIS805C1 /* DETERMINE #OL-AGE-GRP 
4064           HIS350A1.OLS-AGE-GROUP := #OL-AGE-GRP 
4065         END-IF 
4066       end-if 
4067     WHEN NONE  IGNORE 
4068   END-DECIDE 
4069   HTB808A1.PLAN-NAME := 'OS' 
4070   PERFORM CHECK-PLANS /* Read and return an array of all plans 
4071 * 
4072   IF HTB808A1.PLAN-BEG-DATE = 0 
4073     #E-MSG := 'Dependent Life (spouse) Plan not found' 
4074     #E-FLD := 'OLS-PLAN-CATEGORY' 
4075     PERFORM ADD-ERROR 
4076   ELSE /* (4072) 
4077     IF HTB808A1.PLAN-BEG-DATE > HIS350A1.EFFECTIVE-DATE-N 
4078       #E-MSG := 'Dependent Life (spouse) Plan not offered before ' 
4079         -'effective date' 
4080       #E-FLD := 'OLS-COVER-LEVEL' 
4081       PERFORM ADD-ERROR 
4082     ELSE 
4083       IF HTB808A1.PLAN-END-DATE = 0 
4084           OR HIS350A1.EFFECTIVE-DATE-N < HTB808A1.PLAN-END-DATE 
4085         IGNORE 
4086       ELSE 
4087         #E-MSG := 'Dependent Life (spouse) Plan not offered any more' 
4088         #E-FLD := 'OLS-COVER-LEVEL' 
4089         PERFORM ADD-ERROR 
4090       END-IF 
4091     END-IF 
4092   END-IF /* (4072) 
4093   IF HIS350A1.OLS-COVER-LEVEL = ' ' 
4094     #E-MSG := 'Dependent Life (spouse) Coverage Level ' 
4095       -'must be selected' 
4096     #E-FLD := 'OLS-COVER-LEVEL' 
4097     PERFORM ADD-ERROR 
4098     ESCAPE ROUTINE 
4099   END-IF 
4100   IF HIS350A1.TRXN-TYPE = 'EN' 
4101       AND HIS350A1.SUBSCR-TRANSFER = ' ' 
4102     IF VAL(HIS350A1.OLS-COVER-LEVEL) > 20 
4103       #E-MSG := 'Dependent Life (spouse) Coverage Level cannot exceed ' 
4104         -'$20,000 during an enroll' 
4105       PERFORM ADD-ERROR 
4106     END-IF 
4107   END-IF 
4108   IF HIS350A1.TRXN-TYPE = 'CH' 
4109     if his350a1.ol-status = mask('T'.)          /* gsd20070927a start 
4110         and his350a1.ols-status = 'A1' 
4111       find (1) subscr with ssn = his350a1.ssn 
4112         if subscr.ol-status = 'A1' 
4113             and val(his350a1.ols-cover-level) gt 20 
4114           #e-msg := 'Dependent Life Spouse coverage level must be ' 
4115             -'reduced to $20,000' 
4116           perform add-error 
4117         end-if 
4118       end-find 
4119     end-if                                      /* gsd20070927a end 
4120     if his350a1.ol-status = 'A1'                /* gsd20070927b start 
4121         and his350a1.ols-status = 'A1' 
4122       #max-ols-cover := VAL(HIS350A1.OL-PLAN-COVER-LEVEL) / 2 
4123       if #max-ols-cover lt 20 
4124         #max-ols-cover := 20 
4125       end-if 
4126       if val(his350a1.ols-cover-level) gt #max-ols-cover 
4127         #e-msg := 'Dependent Life Spouse coverage cannot exceed half ' 
4128           -'of Optional Life coverage' 
4129         perform add-error 
4130       end-if 
4131     end-if                                      /* gsd20070927b end 
4132     IF HIS350A1.OL-STATUS = 'A1' 
4133       IF #NOT-ON-FILE OR SUBSCR-MAST.OL-PLAN-COVER-LEVEL = ' ' 
4134         #MAX-OLS-COVER := VAL(HIS350A1.OL-PLAN-COVER-LEVEL) / 2 
4135       ELSE 
4136         #MAX-OLS-COVER := VAL(HIS350A1.OL-PLAN-COVER-LEVEL) / 2 
4137       END-IF 
4138       IF #MAX-OLS-COVER < 20 
4139         #MAX-OLS-COVER := 20 
4140       END-IF 
4141       IF #MAX-OLS-COVER > 100                   /* gsd20071106b start 
4142         #MAX-OLS-COVER := 100 
4143       END-IF                                    /* gsd20071106b end 
4144     ELSE 
4145       #MAX-OLS-COVER := 20 
4146     END-IF 
4147     IF HIS350A1.OLS-COVER-LEVEL = ' ' 
4148       #E-MSG := 'Dependent Life (spouse) coverage level is required' 
4149       #E-FLD := 'OLS-COVER-LEVEL' 
4150       PERFORM ADD-ERROR 
4151     ELSE /* (4147) 
4152       IF SUBSCR-MAST.OLS-COVER-LEVEL NE HIS350A1.OLS-COVER-LEVEL 
4153         IF VAL(HIS350A1.OLS-COVER-LEVEL) > #MAX-OLS-COVER 
4154           IF #MAX-OLS-COVER = 20 
4155             #DISPLAY-VALUE := '$20,000' 
4156           ELSE 
4157             #DISPLAY-VALUE := 'half of Optional Life Coverage' 
4158           END-IF 
4159           COMPRESS 'Dependent Life (spouse) Coverage Level cannot' 
4160             'exceed' #DISPLAY-VALUE INTO #E-MSG 
4161           #E-FLD := 'OLS-COVER-LEVEL' 
4162           PERFORM ADD-ERROR 
4163         ELSE /* (4153) 
4164           IF ((HIS350A1.CHANGE-REASON = 'MA' OR = 'CM' 
4165               AND VAL(HIS350A1.OLS-COVER-LEVEL) GT 20) 
4166               OR NOT(HIS350A1.CHANGE-REASON = 'MA' OR = 'CM' OR = 'LS')) 
4167               AND HIS350A1.IS-OLS-MEDICAL-EVID-RECEIVED NE 'Y' 
4168               AND not (HIS350A1.CHANGE-REASON = 'OE' or = 'AE') 
4169             #E-MSG := 'Dependent Life (spouse) Coverage Level ' 
4170               -'requires medical evidence.' 
4171             #E-FLD := 'OLS-COVER-LEVEL' 
4172             PERFORM ADD-ERROR 
4173           END-IF /* (4164) 
4174         END-IF /* (4153) 
4175       END-IF /* (4152) 
4176     END-IF 
4177   END-IF /* (4147) 
4178   IF NOT #FOUND-SPOUSE-OLS 
4179     #E-MSG := 
4180       'No dependent selected for Dependent Life (spouse) coverage' 
4181     #E-FLD := 'OLS-COVER-LEVEL' 
4182     PERFORM ADD-ERROR 
4183   END-IF 
4184 END-IF /* (4034) 
4185 END-SUBROUTINE /* (3988) depend-life-sp-validations 
4186 ************************************************************************ 
4187 DEFINE SUBROUTINE SLTD-VALIDATIONS 
4188 ************************************************************************ 
4189 IF HIS350A1.SLTD-STATUS NE SUBSCR-MAST.SLTD-STATUS 
4190   #LAST-EFF-DATE := SUBSCR-MAST.SLTD-EFF-DATE 
4191   #WORK-N := HIS350A1.EFFECTIVE-DATE-N 
4192   MOVE EDITED #WORK-A TO #EFF-D(EM=YYYYMMDD) 
4193   IF #LAST-EFF-DATE GT #EFF-D 
4194     MOVE EDITED #LAST-EFF-DATE(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
4195     MOVE EDITED #EFF-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE2 
4196     COMPRESS 'The SLTD Effective Date (' #DISPLAY-DATE2 
4197       ') may not be prior to the Coverage Effective Date on file (' 
4198       #DISPLAY-DATE1 ').  Send to EIP for processing.' 
4199       INTO HIS350A1.CRITICAL-ERROR 
4200   END-IF 
4201 END-IF 
4202 IF HIS350A1.SLTD-WAIVER-DATE-N NE 0     /* gsd20070213b 
4203 **IF his350a1.sltd-waiver = 'Y'         /* gsd20070213b 
4204     AND HIS350A1.SLTD-COVER-LEVEL NE SUBSCR-MAST.SLTD-COVER-LEVEL 
4205   HIS350A1.CRITICAL-ERROR := 'SLTD is in waiver status.  ' 
4206     -'Send to EIP for processing.' 
4207 END-IF 
4208 IF ((SUBSCR-MAST.SLTD-STATUS NE HIS350A1.SLTD-STATUS 
4209     AND HIS350A1.SLTD-STATUS NE ' ') 
4210     OR (SUBSCR-MAST.SLTD-COVER-LEVEL NE HIS350A1.SLTD-COVER-LEVEL 
4211     AND HIS350A1.SLTD-COVER-LEVEL NE ' ')) 
4212     OR (HIS350A1.TRXN-TYPE = 'EN' 
4213     AND HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
4214   HIS350A1.SLTD-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
4215 ELSE 
4216   IF SUBSCR-MAST.SLTD-EFF-DATE > 0 
4217     MOVE EDITED SUBSCR-MAST.SLTD-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
4218     IF SUBSCR-MAST.SLTD-STATUS = HIS350A1.SLTD-STATUS 
4219         AND SUBSCR-MAST.SLTD-COVER-LEVEL = HIS350A1.SLTD-COVER-LEVEL 
4220         AND HIS350A1.SLTD-EFF-DATE-N NE #WORK-N 
4221       HIS350A1.SLTD-EFF-DATE-N := #WORK-N 
4222     END-IF 
4223   END-IF 
4224 END-IF 
4225 * 
4226 IF NOT(HIS350A1.SLTD-STATUS = MASK('T'.) OR = ' ') 
4227   IF SUBSCR-MAST.SLTD-STATUS = MASK('T'.) 
4228     #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
4229     MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
4230     IF #WORK-D < SUBSCR-MAST.SLTD-EFF-DATE 
4231       MOVE EDITED SUBSCR-MAST.SLTD-EFF-DATE(EM=MM-DD-YYYY) 
4232         TO #DISPLAY-DATE1 
4233       COMPRESS 'Cannot activate SLTD Coverage prior to' 
4234         #DISPLAY-DATE1 '- Send to EIP for processing.' INTO #E-MSG 
4235       PERFORM ADD-ERROR 
4236       ESCAPE ROUTINE 
4237     END-IF 
4238   END-IF 
4239 * 
4240   IF HIS350A1.TRXN-TYPE = 'CH' 
4241     IF SUBSCR-MAST.SLTD-STATUS = MASK('T'.) OR = ' ' 
4242         AND HIS350A1.SLTD-STATUS = 'A1' 
4243       IF HIS350A1.IS-SLTD-MEDICAL-EVID-RECEIVED NE 'Y' 
4244           AND HIS350A1.CHANGE-REASON NE 'OE' /* Open Enrollment 
4245         #E-MSG := 'Medical evidence is required when activating ' 
4246           -'SLTD Coverage' 
4247         PERFORM ADD-ERROR 
4248       END-IF 
4249     END-IF 
4250     IF HIS350A1.CHANGE-REASON = 'OE' 
4251         AND HIS350A1.SLTD-SALARY GT 147692 
4252       HIS350A1.SLTD-SALARY := 147692 
4253     END-IF 
4254     IF (HIS350A1.CHANGE-REASON = 'SL' 
4255         AND HIS350A1.CHANGE-REASON-EXT = 'IS') 
4256       IF HIS350A1.SLTD-SALARY = 0 
4257         COMPRESS 'Salary cannot be blank on Enrollee Data page' 
4258           SUBSCR-MAST.SLTD-SALARY INTO #E-MSG 
4259         PERFORM ADD-ERROR 
4260       END-IF 
4261       IF HIS350A1.SLTD-SALARY NE SUBSCR-MAST.SLTD-SALARY 
4262         COMPRESS 'SLTD Salary cannot be changed from' 
4263           SUBSCR-MAST.SLTD-SALARY INTO #E-MSG 
4264         PERFORM ADD-ERROR 
4265       END-IF 
4266       IF HIS350A1.SALARY GT 147692 
4267         #E-MSG := 'SLTD Salary cannot exceed $147,692' 
4268         PERFORM ADD-ERROR 
4269       END-IF 
4270     END-IF 
4271     IF (HIS350A1.SLTD-COVER-LEVEL = '90' 
4272         AND SUBSCR-MAST.SLTD-COVER-LEVEL = '180') 
4273       IF HIS350A1.CHANGE-REASON-EXT = 'AS' 
4274         IF HIS350A1.SLTD-SALARY = 0 
4275           COMPRESS 'Salary cannot be blank on Enrollee Data page' 
4276             SUBSCR-MAST.SLTD-SALARY INTO #E-MSG 
4277           PERFORM ADD-ERROR 
4278         END-IF 
4279         IF HIS350A1.SLTD-SALARY NE SUBSCR-MAST.SLTD-SALARY 
4280           COMPRESS 'SLTD Salary cannot be changed from' 
4281             SUBSCR-MAST.SLTD-SALARY INTO #E-MSG 
4282           PERFORM ADD-ERROR 
4283         END-IF 
4284       END-IF 
4285       IF HIS350A1.IS-SLTD-MEDICAL-EVID-RECEIVED NE 'Y' 
4286           AND HIS350A1.CHANGE-REASON NE 'OE' /* Open Enrollment 
4287         #E-MSG := 'Medical evidence is required when changing' 
4288           -' SLTD Coverage Type from 180 days to 90 days' 
4289         PERFORM ADD-ERROR 
4290       END-IF 
4291     END-IF /* (4271) 
4292   END-IF 
4293 * 
4294   HTB808A1.PLAN-NAME := 'SD' 
4295   PERFORM CHECK-PLANS /* Read and return an array of all plans 
4296 * 
4297   IF HTB808A1.PLAN-BEG-DATE = 0 
4298     #E-MSG := 'SLTD Plan not found' 
4299     #E-FLD := 'SLTD-COVER-LEVEL' 
4300     PERFORM ADD-ERROR 
4301   ELSE /* (4297) 
4302     IF HTB808A1.PLAN-BEG-DATE > HIS350A1.EFFECTIVE-DATE-N 
4303       #E-MSG := 'SLTD Plan not offered before effective date' 
4304       #E-FLD := 'SLTD-COVER-LEVEL' 
4305       PERFORM ADD-ERROR 
4306     ELSE 
4307       IF HTB808A1.PLAN-END-DATE = 0 
4308           OR HIS350A1.EFFECTIVE-DATE-N < HTB808A1.PLAN-END-DATE 
4309         IGNORE 
4310       ELSE 
4311         #E-MSG := 'SLTD Plan not offered any more' 
4312         #E-FLD := 'SLTD-COVER-LEVEL' 
4313         PERFORM ADD-ERROR 
4314       END-IF 
4315     END-IF 
4316   END-IF /* (4297) 
4317   IF HIS350A1.DATE-OF-BIRTH-N > 0 
4318     MOVE HIS350A1.DATE-OF-BIRTH-N TO #DATE-WORK 
4319     MOVE EDITED #BILL-DATE(EM=YYYY) TO #BILL-YEAR 
4320     #BILL-YEAR-N := #BILL-YEAR-N - 1 
4321     COMPRESS #BILL-YEAR '1231' INTO #1231-DATE 
4322       LEAVING NO 
4323     #COMP-AGE := (VAL(#1231-DATE) - VAL(#DATE-WORK)) / 10000 
4324   END-IF 
4325   DECIDE FOR FIRST CONDITION 
4326     WHEN #COMP-AGE < 31   HIS350A1.SLTD-AGE-GROUP := '1' 
4327     WHEN #COMP-AGE < 41   HIS350A1.SLTD-AGE-GROUP := '2' 
4328     WHEN #COMP-AGE < 51   HIS350A1.SLTD-AGE-GROUP := '3' 
4329     WHEN #COMP-AGE < 61   HIS350A1.SLTD-AGE-GROUP := '4' 
4330     WHEN #COMP-AGE < 66   HIS350A1.SLTD-AGE-GROUP := '5' 
4331     WHEN #COMP-AGE > 65   HIS350A1.SLTD-AGE-GROUP := '6' 
4332     WHEN NONE 
4333       #DATE-WORK := HIS350A1.DATE-OF-BIRTH-N 
4334       MOVE EDITED #DATE-WORK TO #WORK-D(EM=YYYYMMDD) 
4335       MOVE EDITED #WORK-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
4336       COMPRESS 'Invalid Date of Birth (' HIS350A1.DATE-OF-BIRTH-N 
4337         ')' INTO #E-MSG 
4338       PERFORM ADD-ERROR 
4339   END-DECIDE /* (4321) 
4340 END-IF /* (4226) 
4341 END-SUBROUTINE /* (4187) sltd-validations 
4342 ************************************************************************ 
4343 *********************************************************************** 
4344 DEFINE SUBROUTINE CHECK-PLANS 
4345 *********************************************************************** 
4346 CALLNAT 'HTB808N1' 
4347   HTB808A1 
4348 END-SUBROUTINE /* (4344) check-plans 
4349 ************************************************************************ 
4350 DEFINE SUBROUTINE CHECK-FOR-TRANSFERS 
4351 ************************************************************************ 
4352 IF #TERMINATED 
4353     and not #no-transfer                        /* gsd20070910a 
4354     AND HIS350A1.TRXN-TYPE = 'EN' 
4355   MOVE EDITED #LAST-EFF-DATE(EM=YYYYMMDD) TO #LAST-EFF-DATE-A 
4356   IF #LAST-EFF-DATE-N = HIS350A1.EFFECTIVE-DATE-N 
4357     #DATES-MATCH := TRUE 
4358     PERFORM CHECK-FOR-ACADEMIC 
4359   ELSE 
4360     MOVE HIS350A1.EFFECTIVE-DATE-N TO #EFF-A 
4361     IF (#LAST-EFF-DATE-MMDD = '0601' OR = '0701' OR = '0801') 
4362         AND (#EFF-MMDD-A = '0701' OR = '0801' OR = '0901') 
4363       IF #LAST-EFF-DATE-YYYY-N = #EFF-YYYY-N 
4364         PERFORM CHECK-FOR-ACADEMIC 
4365       END-IF 
4366       IF NOT #ACADEMIC 
4367         PERFORM CHECK-FOR-BREAK 
4368       END-IF 
4369     ELSE 
4370       PERFORM CHECK-FOR-BREAK 
4371     END-IF 
4372   END-IF 
4373   PERFORM SET-PART-TIME-IND 
4374   DECIDE FOR FIRST CONDITION 
4375     WHEN #DATES-MATCH 
4376       If (subscr-mast.subscriber-type ne 'AR'  
4377            and his350a1.trxn-type = 'EN')  
4378        ignore  
4379       else  
4380       HIS350A1.SUBSCR-TRANSFER := 'T' /* prevent coverage changes 
4381       END-IF  
4382       IF #ACADEMIC 
4383           AND (HIS350A1.PART-TIME-SUBSCR NE SUBSCR-MAST.PART-TIME-SUBSCR 
4384           AND SUBSCR-MAST.PART-TIME-SUBSCR NE ' ') 
4385           AND NOT(HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
4386         HIS350A1.CRITICAL-ERROR := 'The subscriber is a Part-time ' 
4387           -'Teacher employee. This request reflects a change in the ' 
4388           -'part-time status. Please forward this enrollment to EIP ' 
4389           -'for processing.' 
4390       END-IF 
4391       /*MWS20080226 START 
4392       IF HIS350A1.PART-TIME-IND NE SUBSCR-MAST.PART-TIME-IND 
4393         RESET HIS350A1.SUBSCR-TRANSFER /* ALLOW COVERAGE CHANGES FOR 
4394           his350a1.hlth-status     /* PT TO FT AND VICE-VERSA. 
4395           his350a1.dntl-status 
4396           his350a1.dntp-status 
4397           his350a1.ol-status 
4398           his350a1.sltd-status 
4399       END-IF /*MWS20080226 END 
4400     WHEN #ACADEMIC 
4401         AND HIS350A1.MODULE(*) = 'DEMOGRAPHIC' 
4402       HIS350A1.SUBSCR-TRANSFER := 'A' /* 
4403       #W-MSG := 'This employee is an Academic Transfer.  This request ' 
4404         -'will result in a break in coverage.  A 12-month ' 
4405         -'pre-existing condition limitation may apply.  Payroll ' 
4406         -'deductions for LTC, if applicable, may be forfeited.' 
4407         -'Consult the employee before continuing.' 
4408       PERFORM ADD-WARNING 
4409     WHEN #BREAK-IN-COV /* 1 month break 
4410         AND HIS350A1.MODULE(*) = 'DEMOGRAPHIC' 
4411       HIS350A1.SUBSCR-TRANSFER := 'B' /* 
4412       #W-MSG := 'The effective date requested will cause a one-month''s' 
4413         -' break in coverage.  If your last day with the previous group' 
4414         -' is within 15 days of the date of hire with this group, ' 
4415         -'change the Date of Hire and effective date ' 
4416         -'to show no break in coverage.' 
4417       PERFORM ADD-WARNING 
4418     WHEN NONE 
4419       RESET HIS350A1.SUBSCR-TRANSFER HIS350A1.CRITICAL-ERROR 
4420   END-DECIDE /* (4374) 
4421 END-IF /* (4352) 
4422 IF HIS350A1.SUBSCR-TRANSFER = 'T' OR = 'A' 
4423   PERFORM PRE-LOAD-TRANSFER-COVERAGES 
4424 END-IF 
4425 END-SUBROUTINE /* (4350) check-for-transfers 
4426 ************************************************************************ 
4427 DEFINE SUBROUTINE CHECK-SUBSCR-MAST-STATUS 
4428 ************************************************************************ 
4429 IF (SUBSCR-MAST.HLTH-STATUS = MASK('T'.) OR = ' ') 
4430     AND (SUBSCR-MAST.DNTL-STATUS = MASK('T'.) OR = ' ') 
4431     AND (SUBSCR-MAST.DL-STATUS = MASK('T'.) OR = ' ') 
4432     AND (SUBSCR-MAST.OL-STATUS = MASK('T'.) OR = ' ') 
4433     AND (SUBSCR-MAST.OLS-STATUS = MASK('T'.) OR = ' ') 
4434     AND (SUBSCR-MAST.LTC-STATUS = MASK('T'.) OR = ' ') 
4435     AND (SUBSCR-MAST.LTC-SP-STATUS = MASK('T'.) OR = ' ') 
4436     AND (SUBSCR-MAST.SLTD-STATUS = MASK('T'.) OR = ' ') 
4437   #ALL-TERM := TRUE 
4438 ELSE 
4439   #ALL-TERM := FALSE 
4440 END-IF 
4441 if subscr-mast.subscriber-type ne 'AR'          /* gsd20070910a start 
4442     and subscr-mast.subscriber-type ne ' ' /*mws20080213 
4443   #no-transfer := TRUE 
4444 else 
4445   #no-transfer := FALSE 
4446 end-if                                          /* gsd20070910a end 
4447 END-SUBROUTINE /* (4427) check-subscr-mast-status 
4448 ************************************************************************ 
4449 DEFINE SUBROUTINE CHECK-TERMINATION-STATUS 
4450 ************************************************************************ 
4451 PERFORM CHECK-SUBSCR-MAST-STATUS /* determine if no coverage is active 
4452 IF #ALL-TERM 
4453   #TERMINATED := TRUE 
4454   PERFORM GET-LATEST-EFF-DATE 
4455 ELSE 
4456   #TERMINATED := FALSE 
4457 END-IF 
4458 * 
4459 IF HIS350A1.EFFECTIVE-DATE-N <> 0 
4460   #EFF-N := HIS350A1.EFFECTIVE-DATE-N 
4461   MOVE EDITED #EFF-A TO #EFF-D(EM=YYYYMMDD) 
4462   IF SUBSCR-MAST.LTC-STATUS = MASK('T'.) 
4463       AND SUBSCR-MAST.LTC-STATUS-EFF-DATE < #EFF-D 
4464     #BREAK-IN-LTC := TRUE 
4465   END-IF 
4466 END-IF /* (4465) 
4467 END-SUBROUTINE /* (4449) check-termination-status 
4468 ************************************************************************ 
4469 DEFINE SUBROUTINE GET-LATEST-EFF-DATE 
4470 ************************************************************************ 
4471 FSM3. FIND SUBSCR-MAST WITH SSN = HIS350A1.SSN 
4472   IF NO RECORDS FOUND 
4473     #NOT-ON-FILE := TRUE 
4474     ESCAPE BOTTOM (FSM3.) 
4475   END-NOREC 
4476 END-FIND /* (4471) FSM3. SUBSCR-MAST 
4477 * 
4478 RESET #LAST-EFF-DATE 
4479 DECIDE FOR EVERY CONDITION /* get latest effective date 
4480   WHEN SUBSCR-MAST.HLTH-EFF-DATE GT #LAST-EFF-DATE 
4481     #LAST-EFF-DATE := SUBSCR-MAST.HLTH-EFF-DATE 
4482   WHEN SUBSCR-MAST.DNTL-EFF-DATE GT #LAST-EFF-DATE 
4483     #LAST-EFF-DATE := SUBSCR-MAST.DNTL-EFF-DATE 
4484   WHEN SUBSCR-MAST.DL-EFF-DATE GT #LAST-EFF-DATE 
4485     #LAST-EFF-DATE := SUBSCR-MAST.DL-EFF-DATE 
4486   WHEN SUBSCR-MAST.OL-EFF-DATE GT #LAST-EFF-DATE 
4487     #LAST-EFF-DATE := SUBSCR-MAST.OL-EFF-DATE 
4488   WHEN SUBSCR-MAST.OLS-EFF-DATE GT #LAST-EFF-DATE 
4489     #LAST-EFF-DATE := SUBSCR-MAST.OLS-EFF-DATE 
4490   WHEN SUBSCR-MAST.LTC-STATUS-EFF-DATE GT #LAST-EFF-DATE 
4491     #LAST-EFF-DATE := SUBSCR-MAST.LTC-STATUS-EFF-DATE 
4492   WHEN SUBSCR-MAST.LTC-SP-STATUS-EFF-DATE GT #LAST-EFF-DATE 
4493     #LAST-EFF-DATE := SUBSCR-MAST.LTC-SP-STATUS-EFF-DATE 
4494   WHEN SUBSCR-MAST.SLTD-EFF-DATE GT #LAST-EFF-DATE 
4495     #LAST-EFF-DATE := SUBSCR-MAST.SLTD-EFF-DATE 
4496   WHEN NONE  IGNORE 
4497 END-DECIDE /* (4479) 
4498 END-SUBROUTINE /* (4469) get-latest-eff-date 
4499 ************************************************************************ 
4500 DEFINE SUBROUTINE GET-LATEST-DEP-EFF-DATE /* gsd20060224a 
4501 ************************************************************************ 
4502 #DATE-WORK := HIS350A1.EFFECTIVE-DATE-N 
4503 MOVE EDITED #DATE-WORK TO #EFF-D(EM=YYYYMMDD) 
4504 #MAX-SEQ-NUM1 := *MAXVAL(HIS350A1.DEP-SEQ-NUM(*)) 
4505 IF #MAX-SEQ-NUM1 GT 0 
4506   FOR #I 1 TO #MAX-SEQ-NUM1 
4507     IF HIS350A1.DEP-HLTH-STATUS(#I) = 'A1' 
4508         OR HIS350A1.DEP-DNTL-STATUS(#I) = 'A1' 
4509         OR HIS350A1.DEP-DL-STATUS(#I) = 'A1' 
4510         OR HIS350A1.DEP-OLS-STATUS(#I) = 'A1' 
4511       ESCAPE bottom 
4512     END-IF 
4513     RESET #LAST-DEP-EFF-DATE #LAST-DEP-EFF-DATE-D 
4514     IF HIS350A1.DEP-RELATION(#I) NE MASK(.'1'.) /* always show spouse 
4515       DECIDE FOR EVERY CONDITION /* get latest dependent effective date 
4516         WHEN HIS350A1.DEP-HLTH-STATUS(#I) NE 'A1' 
4517             and his350a1.dep-hlth-pending-st(#i) = 'A1' 
4518             and HIS350A1.DEP-HLTH-EFF-DATE-N(#I) > #LAST-DEP-EFF-DATE 
4519           #LAST-DEP-EFF-DATE := HIS350A1.DEP-HLTH-EFF-DATE-N(#I) 
4520         WHEN HIS350A1.DEP-DNTL-STATUS(#I) NE 'A1' 
4521             and his350a1.dep-dntl-pending-st(#i) = 'A1' 
4522             and HIS350A1.DEP-DNTL-EFF-DATE-N(#I) > #LAST-DEP-EFF-DATE 
4523           #LAST-DEP-EFF-DATE := HIS350A1.DEP-DNTL-EFF-DATE-N(#I) 
4524         WHEN HIS350A1.DEP-DL-STATUS(#I) NE 'A1' 
4525             and his350a1.dep-dl-pending-st(#i) = 'A1' 
4526             and HIS350A1.DEP-DL-EFF-DATE-N(#I) > #LAST-DEP-EFF-DATE 
4527           #LAST-DEP-EFF-DATE := HIS350A1.DEP-DL-EFF-DATE-N(#I) 
4528 **      WHEN HIS350A1.DEP-OLS-STATUS(#I) NE 'A1'  
4529 **          and his350a1.dep-ltc-pending-st(#i) = 'A1'  
4530 **          and HIS350A1.DEP-OLS-EFF-DATE-N(#I) > #LAST-DEP-EFF-DATE  
4531 **        #LAST-DEP-EFF-DATE := HIS350A1.DEP-OLS-EFF-DATE-N(#I)  
4532         WHEN ANY 
4533           IF #LAST-DEP-EFF-DATE GT 0 
4534             MOVE EDITED #LAST-DEP-EFF-DATE-A 
4535               TO #LAST-DEP-EFF-DATE-D(EM=YYYYMMDD) 
4536             ADD 180 TO #LAST-DEP-EFF-DATE-D 
4537           END-IF 
4538         WHEN NONE  IGNORE 
4539       END-DECIDE /* (4511) 
4540     END-IF /* (4511) 
4541   END-FOR /* (4506) 
4542 END-IF /* (4503) 
4543 END-SUBROUTINE /* (4500) get-latest-dep-eff-date 
4544 ************************************************************************ 
4545 DEFINE SUBROUTINE CHECK-FOR-ACADEMIC 
4546 ************************************************************************ 
4547 IF (SUBSCR-MAST.EMPLOYER-GROUP-ID = MASK('H'......) 
4548     OR SUBSCR-MAST.EMPLOYER-GROUP-ID = MASK('5'......)) 
4549     AND (HIS350A1.EMPLOYER-GROUP-ID = MASK('5'......) 
4550     OR HIS350A1.EMPLOYER-GROUP-ID = MASK('H'......)) 
4551   IF (HIS350A1.EMPLOYER-GROUP-ID = 'H030000' OR = 'H060000' 
4552       OR = 'H510000' OR = 'H590000' OR = 'H630000' OR = 'H670000' 
4553       OR = 'H730000' OR = 'H790000' OR = 'H870000' OR = 'H910000') 
4554       OR (SUBSCR-MAST.EMPLOYER-GROUP-ID = 'H030000' OR = 'H060000' 
4555       OR = 'H510000' OR = 'H590000' OR = 'H630000' OR = 'H670000' 
4556       OR = 'H730000' OR = 'H790000' OR = 'H870000' OR = 'H910000') 
4557     #ACADEMIC := FALSE 
4558   ELSE 
4559     #ACADEMIC := TRUE 
4560   END-IF 
4561 END-IF /* (4502) 
4562 END-SUBROUTINE /* (4500) check-for-academic 
4563 ************************************************************************ 
4564 DEFINE SUBROUTINE CHECK-FOR-BREAK /* 1 month break 
4565 ************************************************************************ 
4566 **#BREAK-IN-COV := TRUE 
4567 #BREAK-IN-COV := FALSE 
4568 IF #EFF-MM-N > 1 
4569   IF #EFF-YYYY-A = #LAST-EFF-DATE-YYYY 
4570       AND #EFF-MM-N = (#LAST-EFF-DATE-MM + 1) 
4571       AND #EFF-DD-A = #LAST-EFF-DATE-DD 
4572 * add 1 to #last-eff-date-mm 
4573 * if #eff-n gt #last-eff-date-n 
4574     #BREAK-IN-COV := TRUE 
4575   END-IF 
4576 ELSE 
4577   IF #EFF-YYYY-N = (#LAST-EFF-DATE-YYYY-N + 1) 
4578       AND #LAST-EFF-DATE-MM = 12 
4579       AND #EFF-DD-A = #LAST-EFF-DATE-DD 
4580 * add 1 to #last-eff-date-yyyy-n 
4581 * #last-eff-date-mm := 12 
4582 * if #eff-n gt #last-eff-date-n 
4583     #BREAK-IN-COV := TRUE 
4584   END-IF 
4585 END-IF 
4586 END-SUBROUTINE /* (4564) check-for-break 
4587 ************************************************************************ 
4588 DEFINE SUBROUTINE VALIDATE-MANUAL-EFF-DATE 
4589 ************************************************************************ 
4590 IF #COMP-D = #HIRE-D 
4591   ESCAPE ROUTINE 
4592 ELSE 
4593   IF (#COMP-D - 90) > #HIRE-D 
4594       OR (#COMP-D + 90) < #HIRE-D 
4595     #E-MSG := 'Hire Date and Coverage Effective Date conflict' 
4596     PERFORM ADD-ERROR 
4597   END-IF 
4598   /*mws20080226a start 
4599   move edited #HIRE-d (em=yyyymmdd) to #date-check-a 
4600   add 1 to #mm 
4601   if #mm = 13 
4602     add 1 to #yyyy 
4603     #mm := 1 
4604   end-if 
4605   #dd := 1 
4606   move edited #date-check-a to #date-check-d (em=yyyymmdd) 
4607   if #comp-d > #date-check-d 
4608     #e-msg := 'Invalid Coverage Effective date' 
4609     Perform add-error 
4610   end-if 
4611   /*mws20080226a end 
4612 END-IF 
4613 END-SUBROUTINE /* (*8118) validate-manual-eff-date 
4614 ************************************************************************ 
4615 DEFINE SUBROUTINE YYYYMMDD-TO-MMDDYYYY 
4616 ************************************************************************ 
4617 IF HIS808A1.DATE-HIRED = '0' 
4618   HIS808A1.DATE-HIRED := ' ' 
4619 END-IF 
4620 IF HIS808A1.DATE-HIRED = MASK(YYYYMMDD) 
4621     AND HIS808A1.DATE-HIRED = '15820000' THRU '26990000' 
4622   MOVE EDITED HIS808A1.DATE-HIRED TO #WORK-D(EM=YYYYMMDD) 
4623   MOVE EDITED #WORK-D(EM=MMDDYYYY) TO HIS808A1.DATE-HIRED 
4624 END-IF 
4625 IF HIS808A1.HLTH-EFF-DATE = '0' 
4626   HIS808A1.HLTH-EFF-DATE := ' ' 
4627 END-IF 
4628 IF HIS808A1.HLTH-EFF-DATE = MASK(YYYYMMDD) 
4629     AND HIS808A1.HLTH-EFF-DATE > '15820000' 
4630     AND HIS808A1.HLTH-EFF-DATE < '26990000' 
4631   MOVE EDITED HIS808A1.HLTH-EFF-DATE TO #WORK-D(EM=YYYYMMDD) 
4632   MOVE EDITED #WORK-D(EM=MMDDYYYY) TO HIS808A1.HLTH-EFF-DATE 
4633 END-IF 
4634 IF HIS808A1.PRIOR-SRVC-BEG-DATE = '0' 
4635   HIS808A1.PRIOR-SRVC-BEG-DATE := ' ' 
4636 END-IF 
4637 IF HIS808A1.PRIOR-SRVC-BEG-DATE = MASK(YYYYMMDD) 
4638     AND HIS808A1.PRIOR-SRVC-BEG-DATE > '15820000' 
4639     AND HIS808A1.PRIOR-SRVC-BEG-DATE < '26990000' 
4640   MOVE EDITED HIS808A1.PRIOR-SRVC-BEG-DATE TO #BEG-D(EM=YYYYMMDD) 
4641   MOVE EDITED #BEG-D(EM=MMDDYYYY) TO HIS808A1.PRIOR-SRVC-BEG-DATE 
4642 ELSE 
4643   IF NOT(HIS808A1.PRIOR-SRVC-BEG-DATE = '0' OR = ' ') 
4644     #E-MSG := 'Credible Coverage From Date is invalid' 
4645     #E-FLD := 'prior-srvc-beg-date' 
4646     PERFORM ADD-ERROR 
4647     #ESCAPE := TRUE 
4648   END-IF 
4649 END-IF 
4650 IF HIS350A1.HLTH-EFF-DATE-N > 0 
4651   #WORK-A := HIS350A1.HLTH-EFF-DATE-N 
4652   MOVE EDITED #WORK-A TO #WORK-D(EM=YYYYMMDD) 
4653   IF #BEG-D > #WORK-D 
4654     MOVE EDITED #WORK-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
4655     COMPRESS 'Credible Coverage From Date cannot be greater than ' 
4656       'Health Effective Date (' #DISPLAY-DATE1 ')' INTO #E-MSG 
4657     #E-FLD := 'prior-srvc-beg-date' 
4658     PERFORM ADD-ERROR 
4659     #ESCAPE := TRUE 
4660   END-IF 
4661 END-IF 
4662 IF HIS808A1.PRIOR-SRVC-END-DATE = '0' 
4663   HIS808A1.PRIOR-SRVC-END-DATE := ' ' 
4664 END-IF 
4665 IF HIS808A1.PRIOR-SRVC-END-DATE = MASK(YYYYMMDD) 
4666     AND HIS808A1.PRIOR-SRVC-END-DATE > '15820000' 
4667     AND HIS808A1.PRIOR-SRVC-END-DATE < '26990000' 
4668   MOVE EDITED HIS808A1.PRIOR-SRVC-END-DATE TO #END-D(EM=YYYYMMDD) 
4669   MOVE EDITED #END-D(EM=MMDDYYYY) TO HIS808A1.PRIOR-SRVC-END-DATE 
4670 ELSE 
4671   IF NOT(HIS808A1.PRIOR-SRVC-END-DATE = '0' OR = ' ') 
4672     #E-MSG := 'Credible Coverage To Date is invalid' 
4673     #E-FLD := 'prior-srvc-end-date' 
4674     PERFORM ADD-ERROR 
4675     #ESCAPE := TRUE 
4676   END-IF 
4677 END-IF 
4678 IF HIS350A1.HLTH-EFF-DATE-N > 0 
4679   #WORK-A := HIS350A1.HLTH-EFF-DATE-N 
4680   MOVE EDITED #WORK-A TO #WORK-D(EM=YYYYMMDD) 
4681   IF #END-D > #WORK-D 
4682     MOVE EDITED #WORK-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
4683     COMPRESS 'Credible Coverage To Date cannot be greater than ' 
4684       'Health Effective Date (' #DISPLAY-DATE1 ')' INTO #E-MSG 
4685     #E-FLD := 'prior-srvc-beg-date' 
4686     PERFORM ADD-ERROR 
4687     #ESCAPE := TRUE 
4688   END-IF 
4689 END-IF 
4690 IF #END-D NE 0 
4691     AND #BEG-D NE 0 
4692     AND #END-D < #BEG-D 
4693   #E-MSG := 'Credible Coverage To Date cannot be greater than ' 
4694     -'Credible Coverage From Date' 
4695   #E-FLD := 'prior-srvc-beg-date' 
4696   PERFORM ADD-ERROR 
4697   #ESCAPE := TRUE 
4698 END-IF 
4699 IF HIS808A1.PRE-EX-END-DATE = '0' 
4700   HIS808A1.PRE-EX-END-DATE := ' ' 
4701 END-IF 
4702 IF HIS808A1.PRE-EX-END-DATE = MASK(YYYYMMDD) 
4703     AND HIS808A1.PRE-EX-END-DATE > '15820000' 
4704     AND HIS808A1.PRE-EX-END-DATE < '26990000' 
4705   MOVE EDITED HIS808A1.PRE-EX-END-DATE TO #WORK-D(EM=YYYYMMDD) 
4706   MOVE EDITED #WORK-D(EM=MMDDYYYY) TO HIS808A1.PRE-EX-END-DATE 
4707 ELSE 
4708   IF NOT(HIS808A1.PRE-EX-END-DATE = '0' OR = ' ') 
4709     #E-MSG := 'Pre-existing Condition End Date is invalid' 
4710     #E-FLD := 'pre-ex-end-date' 
4711     PERFORM ADD-ERROR 
4712     #ESCAPE := TRUE 
4713   END-IF 
4714 END-IF 
4715 * 
4716 IF #I = 1 THRU 15 
4717   IF HIS350A1.DEP-OTHER-INS-IND(#I) = 'Y' 
4718       AND HIS350A1.DEP-INS-EFF-DATE-N(#I) = 0 
4719       AND HIS350A1.DEP-INS-POLICY-HOLDER-DOB-N(#I) = 0 
4720       AND HIS350A1.DEP-INS-COMPANY-NAME(#I) = ' ' 
4721     #E-MSG := 'All Other Coverage fields are required' 
4722     PERFORM ADD-ERROR 
4723   END-IF 
4724   IF HIS350A1.DEP-INS-EFF-DATE-N(#I) NE 0 
4725       AND (NOT(HIS350A1.DEP-INS-EFF-DATE-N(#I) = MASK(YYYYMMDD)) 
4726       OR HIS350A1.DEP-INS-EFF-DATE-N(#I) < 15820000 
4727       OR HIS350A1.DEP-INS-EFF-DATE-N(#I) > 26990000) 
4728     COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4729       '| Effective Date of Other Coverage is invalid' INTO #E-MSG 
4730     #E-FLD := 'dep-ins-eff-date-n' 
4731     PERFORM ADD-ERROR 
4732     #ESCAPE := TRUE 
4733   END-IF 
4734   IF HIS350A1.DEP-INS-POLICY-HOLDER-DOB-N(#I) NE 0 
4735       AND (NOT(HIS350A1.DEP-INS-POLICY-HOLDER-DOB-N(#I) = 
4736       MASK(YYYYMMDD)) 
4737       OR HIS350A1.DEP-INS-POLICY-HOLDER-DOB-N(#I) < 15820000 
4738       OR HIS350A1.DEP-INS-POLICY-HOLDER-DOB-N(#I) > 26990000) 
4739     COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4740       '| Policy Holder Date of Birth is invalid' INTO #E-MSG 
4741     #E-FLD := 'dep-ins-policy-holder-dob-n' 
4742     PERFORM ADD-ERROR 
4743     #ESCAPE := TRUE 
4744   END-IF 
4745   IF HIS350A1.DEP-INS-POLICY-HOLDER-DOB-N(#I) > 0 
4746     #WORK-A := HIS350A1.DEP-INS-POLICY-HOLDER-DOB-N(#I) 
4747     IF #WORK-A = MASK (YYYYMMDD) 
4748       MOVE EDITED #WORK-A TO #WORK-D(EM=YYYYMMDD) 
4749       IF #WORK-D > *DATX 
4750         COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4751           '| Policy Holder Date of Birth' 
4752           'cannot be later than today' INTO #E-MSG 
4753         #E-FLD := 'dep-ins-policy-holder-dob-n' 
4754         PERFORM ADD-ERROR 
4755         #ESCAPE := TRUE 
4756       END-IF 
4757     END-IF 
4758   END-IF 
4759   IF (HIS350A1.DEP-MEDICARE-NUMBER(#I) <> ' ' 
4760       OR HIS350A1.DEP-MEDICARE-EFF-DATE-A-N(#I) <> 0 
4761       OR HIS350A1.DEP-MEDICARE-REASON(#I) <> ' ') 
4762       AND HIS350A1.DEP-MEDICARE-REASON(#I) = ' ' 
4763     COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4764       '| Medicare Reason is required' INTO #E-MSG 
4765     PERFORM ADD-ERROR 
4766     #ESCAPE := TRUE 
4767   END-IF 
4768   IF HIS350A1.DEP-MEDICARE-NUMBER(#I) <> ' ' 
4769       OR HIS350A1.DEP-MEDICARE-EFF-DATE-A-N(#I) <> 0 
4770       OR HIS350A1.DEP-MEDICARE-REASON(#I) <> ' ' 
4771     IF HIS350A1.DEP-MEDICARE-NUMBER(#I) = ' ' 
4772       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4773         '| Medicare Number is required' INTO #E-MSG 
4774       PERFORM ADD-ERROR 
4775       #ESCAPE := TRUE 
4776     ELSE 
4777       EXAMINE HIS350A1.DEP-MEDICARE-NUMBER(#I) FOR ' ' GIVING LENGTH #LEN 
4778       IF #LEN < 4 
4779         COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4780           '| Medicare Number is invalid' INTO #E-MSG 
4781         PERFORM ADD-ERROR 
4782       END-IF 
4783     END-IF 
4784   END-IF 
4785   IF (HIS350A1.DEP-MEDICARE-NUMBER(#I) <> ' ' 
4786       OR HIS350A1.DEP-MEDICARE-EFF-DATE-A-N(#I) <> 0 
4787       OR HIS350A1.DEP-MEDICARE-REASON(#I) <> ' ') 
4788       AND HIS350A1.DEP-MEDICARE-EFF-DATE-A-N(#I) = 0 
4789     COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4790       '| Medicare Effective Date Part A is required' INTO #E-MSG 
4791     PERFORM ADD-ERROR 
4792     #ESCAPE := TRUE 
4793   END-IF 
4794   IF HIS350A1.DEP-MEDICARE-EFF-DATE-A-N(#I) NE 0 
4795       AND (NOT(HIS350A1.DEP-MEDICARE-EFF-DATE-A-N(#I) = MASK(YYYYMMDD)) 
4796       OR HIS350A1.DEP-MEDICARE-EFF-DATE-A-N(#I) < 15820000 
4797       OR HIS350A1.DEP-MEDICARE-EFF-DATE-A-N(#I) > 26990000) 
4798     COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4799       '| Medicare Effective Date Part A ' 
4800       'End Date is invalid' INTO #E-MSG 
4801     #E-FLD := 'dep-medicare-eff-date-a-n' 
4802     PERFORM ADD-ERROR 
4803     #ESCAPE := TRUE 
4804   END-IF 
4805   IF HIS350A1.DEP-MEDICARE-EFF-DATE-B-N(#I) NE 0 
4806       AND (NOT(HIS350A1.DEP-MEDICARE-EFF-DATE-B-N(#I) = MASK(YYYYMMDD)) 
4807       OR HIS350A1.DEP-MEDICARE-EFF-DATE-B-N(#I) < 15820000 
4808       OR HIS350A1.DEP-MEDICARE-EFF-DATE-B-N(#I) > 26990000) 
4809     COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4810       '| Medicare Effective Date Part B ' 
4811       'End Date is invalid' INTO #E-MSG 
4812     #E-FLD := 'dep-medicare-eff-date-b-n' 
4813     PERFORM ADD-ERROR 
4814     #ESCAPE := TRUE 
4815   END-IF 
4816   IF HIS808A1.DEP-HLTH-EFF-DATE(#I) = '0' 
4817     HIS808A1.DEP-HLTH-EFF-DATE(#I) := ' ' 
4818   END-IF 
4819   IF HIS808A1.DEP-HLTH-EFF-DATE(#I) = MASK(YYYYMMDD) 
4820       AND HIS808A1.DEP-HLTH-EFF-DATE(#I) > '15820000' 
4821       AND HIS808A1.DEP-HLTH-EFF-DATE(#I) < '26990000' 
4822     MOVE EDITED HIS808A1.DEP-HLTH-EFF-DATE(#I) TO #WORK-D(EM=YYYYMMDD) 
4823     MOVE EDITED #WORK-D(EM=MMDDYYYY) TO HIS808A1.DEP-HLTH-EFF-DATE(#I) 
4824   END-IF 
4825   IF HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) = '0' 
4826     HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) := ' ' 
4827   END-IF 
4828   IF HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) = MASK(YYYYMMDD) 
4829       AND HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) > '15820000' 
4830       AND HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) < '26990000' 
4831     MOVE EDITED HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) TO 
4832       #WORK-D(EM=YYYYMMDD) 
4833     MOVE EDITED #WORK-D(EM=MMDDYYYY) TO 
4834       HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) 
4835     IF #WORK-D > #EFF-D 
4836       #DATE-WORK := HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) 
4837       MOVE EDITED #DATE-WORK TO #WORK-D(EM=MMDDYYYY) 
4838       MOVE EDITED #WORK-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
4839       MOVE EDITED #EFF-D(EM=MM-DD-YYYY) TO #DISPLAY-DATE1 
4840       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4841         '| Creditable Coverage From Date' 
4842         'cannot be later than Coverage Effective Date (' 
4843         #DISPLAY-DATE1 ')' INTO #E-MSG 
4844       #E-FLD := 'dep-prior-srvc-end-date' 
4845       PERFORM ADD-ERROR 
4846       #ESCAPE := TRUE 
4847     END-IF 
4848   ELSE /* (4828) 
4849     IF NOT(HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) = '0' OR = ' ') 
4850       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4851         '| Credible Coverage To Date is invalid' INTO #E-MSG 
4852       #E-FLD := 'dep-prior-srvc-end-date' 
4853       PERFORM ADD-ERROR 
4854       #ESCAPE := TRUE 
4855     END-IF 
4856   END-IF /* (4828) 
4857   IF HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) = '0' 
4858     HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) := ' ' 
4859   END-IF 
4860   IF HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) = MASK(YYYYMMDD) 
4861       AND HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) > '15820000' 
4862       AND HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) < '26990000' 
4863     MOVE EDITED HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) TO 
4864       #WORK-D(EM=YYYYMMDD) 
4865     MOVE EDITED #WORK-D(EM=MMDDYYYY) TO 
4866       HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) 
4867     IF HIS350A1.DEP-PRIOR-SRVC-END-DATE-N(#I) < 
4868         HIS350A1.DEP-PRIOR-SRVC-BEG-DATE-N(#I) 
4869       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4870         '| Creditable Coverage To Date is' 
4871         'required and cannot be earlier than Creditable Coverage' 
4872         'From Date' INTO #E-MSG 
4873       #E-FLD := 'dep-prior-srvc-end-date' 
4874       PERFORM ADD-ERROR 
4875       #ESCAPE := TRUE 
4876     END-IF 
4877   ELSE /* (4860) 
4878     IF NOT(HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) = '0' OR = ' ') 
4879       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4880         '| Credible Coverage From Date is invalid' INTO #E-MSG 
4881       #E-FLD := 'dep-prior-srvc-beg-date' 
4882       PERFORM ADD-ERROR 
4883       #ESCAPE := TRUE 
4884     END-IF 
4885   END-IF /* (4860) 
4886   IF HIS808A1.DEP-PRE-EX-END-DATE(#I) = '0' 
4887     HIS808A1.DEP-PRE-EX-END-DATE(#I) := ' ' 
4888   END-IF 
4889   IF HIS808A1.DEP-PRE-EX-END-DATE(#I) = MASK(YYYYMMDD) 
4890       AND HIS808A1.DEP-PRE-EX-END-DATE(#I) > '15820000' 
4891       AND HIS808A1.DEP-PRE-EX-END-DATE(#I) < '26990000' 
4892     MOVE EDITED HIS808A1.DEP-PRE-EX-END-DATE(#I) TO #WORK-D(EM=YYYYMMDD) 
4893     MOVE EDITED #WORK-D(EM=MMDDYYYY) TO HIS808A1.DEP-PRE-EX-END-DATE(#I) 
4894   END-IF 
4895   IF HIS808A1.DEP-DOB(#I) = '0' 
4896     HIS808A1.DEP-DOB(#I) := ' ' 
4897   END-IF 
4898   IF HIS808A1.DEP-DOB(#I) = MASK(YYYYMMDD) 
4899       AND HIS808A1.DEP-DOB(#I) > '15820000' 
4900       AND HIS808A1.DEP-DOB(#I) < '26990000' 
4901     MOVE EDITED HIS808A1.DEP-DOB(#I) TO #WORK-D(EM=YYYYMMDD) 
4902     MOVE EDITED #WORK-D(EM=MMDDYYYY) TO HIS808A1.DEP-DOB(#I) 
4903   ELSE 
4904     IF NOT(HIS808A1.DEP-DOB(#I) = '0' OR = ' ') 
4905       COMPRESS 'Dependent |' his350a1.dep-seq-num(#I) 
4906         '| Date of Birth is invalid' INTO #E-MSG 
4907       #E-FLD := 'dep-dob' 
4908       PERFORM ADD-ERROR 
4909       #ESCAPE := TRUE 
4910     END-IF 
4911   END-IF 
4912 END-IF /* (4716) 
4913 END-SUBROUTINE /* (4596) yyyymmdd-to-mmddyyyy 
4914 ************************************************************************ 
4915 DEFINE SUBROUTINE MMDDYYYY-TO-YYYYMMDD 
4916 ************************************************************************ 
4917 IF HIS808A1.DATE-HIRED = MASK(MMDDYYYY) 
4918   MOVE EDITED HIS808A1.DATE-HIRED TO #WORK-D(EM=MMDDYYYY) 
4919   MOVE EDITED #WORK-D(EM=YYYYMMDD) TO HIS808A1.DATE-HIRED 
4920 END-IF 
4921 IF HIS808A1.HLTH-EFF-DATE = MASK(MMDDYYYY) 
4922   MOVE EDITED HIS808A1.HLTH-EFF-DATE TO #WORK-D(EM=MMDDYYYY) 
4923   MOVE EDITED #WORK-D(EM=YYYYMMDD) TO HIS808A1.HLTH-EFF-DATE 
4924 END-IF 
4925 IF HIS808A1.PRIOR-SRVC-BEG-DATE = MASK(MMDDYYYY) 
4926   MOVE EDITED HIS808A1.PRIOR-SRVC-BEG-DATE TO #WORK-D(EM=MMDDYYYY) 
4927   MOVE EDITED #WORK-D(EM=YYYYMMDD) TO HIS808A1.PRIOR-SRVC-BEG-DATE 
4928 END-IF 
4929 IF HIS808A1.PRIOR-SRVC-END-DATE = MASK(MMDDYYYY) 
4930   MOVE EDITED HIS808A1.PRIOR-SRVC-END-DATE TO #WORK-D(EM=MMDDYYYY) 
4931   MOVE EDITED #WORK-D(EM=YYYYMMDD) TO HIS808A1.PRIOR-SRVC-END-DATE 
4932 END-IF 
4933 IF HIS808A1.PRE-EX-END-DATE = MASK(MMDDYYYY) 
4934   MOVE EDITED HIS808A1.PRE-EX-END-DATE TO #WORK-D(EM=MMDDYYYY) 
4935   MOVE EDITED #WORK-D(EM=YYYYMMDD) TO HIS808A1.PRE-EX-END-DATE 
4936 END-IF 
4937 IF HIS808A1.DEP-HLTH-EFF-DATE(#I) = MASK(MMDDYYYY) 
4938   MOVE EDITED HIS808A1.DEP-HLTH-EFF-DATE(#I) TO #WORK-D(EM=MMDDYYYY) 
4939   MOVE EDITED #WORK-D(EM=YYYYMMDD) TO HIS808A1.DEP-HLTH-EFF-DATE(#I) 
4940 END-IF 
4941 IF HIS808A1.DEP-DOB(#I) = MASK(MMDDYYYY) 
4942   MOVE EDITED HIS808A1.DEP-DOB(#I) TO #WORK-D(EM=MMDDYYYY) 
4943   MOVE EDITED #WORK-D(EM=YYYYMMDD) TO HIS808A1.DEP-DOB(#I) 
4944 END-IF 
4945 IF HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) = MASK(MMDDYYYY) 
4946   MOVE EDITED HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) TO 
4947     #WORK-D(EM=MMDDYYYY) 
4948   MOVE EDITED #WORK-D(EM=YYYYMMDD) TO 
4949     HIS808A1.DEP-PRIOR-SRVC-BEG-DATE(#I) 
4950 END-IF 
4951 IF HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) = MASK(MMDDYYYY) 
4952   MOVE EDITED HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) TO 
4953     #WORK-D(EM=MMDDYYYY) 
4954   MOVE EDITED #WORK-D(EM=YYYYMMDD) TO 
4955     HIS808A1.DEP-PRIOR-SRVC-END-DATE(#I) 
4956 END-IF 
4957 IF HIS808A1.DEP-PRE-EX-END-DATE(#I) = MASK(MMDDYYYY) 
4958   MOVE EDITED HIS808A1.DEP-PRE-EX-END-DATE(#I) TO #WORK-D(EM=MMDDYYYY) 
4959   MOVE EDITED #WORK-D(EM=YYYYMMDD) TO HIS808A1.DEP-PRE-EX-END-DATE(#I) 
4960 END-IF 
4961 END-SUBROUTINE /* (4915) mmddyyyy-to-yyyymmdd 
4962 ************************************************************************ 
4963 DEFINE SUBROUTINE ADD-ERROR 
4964 ************************************************************************ 
4965 HIS350A1.HAS-ERROR := TRUE 
4966 ADD 1 TO HIS350A1.ERROR-COUNT 
4967 #J := HIS350A1.ERROR-COUNT 
4968 HIS350A1.ERROR-MESSAGE(#J) := #E-MSG 
4969 HIS350A1.ERROR-FIELDS(#J)  := #E-FLD 
4970 HIS350A1.ERROR-INDEX(#J) := #E-NDX 
4971 RESET ERROR-HANDLING-FIELDS 
4972 END-SUBROUTINE /* (4963) ADD-ERROR 
4973 ************************************************************************ 
4974 DEFINE SUBROUTINE ADD-WARNING 
4975 ************************************************************************ 
4976 HIS350A1.HAS-WARNING := TRUE 
4977 ADD 1 TO #W 
4978 HIS350A1.WARNING-MESSAGE(#W) := #W-MSG 
4979 RESET #W-MSG 
4980 END-SUBROUTINE /* (4974) ADD-warning 
4981 ************************************************************************ 
4982 DEFINE SUBROUTINE SET-EMPLOYMENT-STATUS 
4983 ************************************************************************ 
4984 IF HIS350A1.SSN-NOT-ON-FILE 
4985     AND NOT HIS350A1.DATA-FROM-SUSPENSE 
4986   ESCAPE ROUTINE 
4987 END-IF 
4988 IF #NOT-ON-FILE 
4989     or HIS350A1.DATA-FROM-SUSPENSE 
4990   DECIDE FOR FIRST CONDITION 
4991     WHEN HIS350A1.PART-TIME-SUBSCR = '1' 
4992       HIS350A1.EMPLOYMENT-STATUS := '15' 
4993     WHEN HIS350A1.PART-TIME-SUBSCR = '2' 
4994       HIS350A1.EMPLOYMENT-STATUS := '20' 
4995     WHEN HIS350A1.PART-TIME-SUBSCR = '3' 
4996       HIS350A1.EMPLOYMENT-STATUS := '25' 
4997     WHEN HIS350A1.PART-TIME-IND = 'Y' 
4998       HIS350A1.EMPLOYMENT-STATUS := 'P' 
4999     WHEN HIS350A1.PART-TIME-IND = ' ' 
5000         AND HIS350A1.PART-TIME-SUBSCR = ' ' 
5001       HIS350A1.EMPLOYMENT-STATUS := 'F' 
5002     WHEN NONE IGNORE 
5003   END-DECIDE /* (4989) 
5004 ELSE /* (4988) 
5005   DECIDE FOR FIRST CONDITION 
5006     WHEN SUBSCR-MAST.PART-TIME-IND = 'Y' 
5007       HIS350A1.EMPLOYMENT-STATUS := 'P' 
5008     WHEN SUBSCR-MAST.PART-TIME-SUBSCR = '1' 
5009       HIS350A1.EMPLOYMENT-STATUS := '15' 
5010     WHEN SUBSCR-MAST.PART-TIME-SUBSCR = '2' 
5011       HIS350A1.EMPLOYMENT-STATUS := '20' 
5012     WHEN SUBSCR-MAST.PART-TIME-SUBSCR = '3' 
5013       HIS350A1.EMPLOYMENT-STATUS := '25' 
5014     WHEN SUBSCR-MAST.PART-TIME-IND NE 'Y' 
5015       HIS350A1.EMPLOYMENT-STATUS := 'F' 
5016     WHEN NONE IGNORE 
5017   END-DECIDE /* (5005) 
5018 END-IF /* (4988) 
5019 END-SUBROUTINE /* (4982) SET-EMPLOYMENT-STATUS 
5020 ************************************************************************ 
5021 DEFINE SUBROUTINE SET-EMPLOYMENT-STATUS-OPTIONS 
5022 ************************************************************************ 
5023 IF HIS350A1.TRXN-TYPE = 'EN' 
5024   COMPRESS 'A1' HIS350A1.EMPLOYER-GROUP-ID INTO #TABLE-KEY LEAVING NO 
5025   FTM1. FIND TABLE-MAST WITH SP-TBL-GROUP-KEY = #TABLE-KEY 
5026     IF NO RECORD FOUND 
5027       COMPRESS 'Employer Group ID (' HIS350A1.EMPLOYER-GROUP-ID 
5028         ') is invalid' INTO #E-MSG 
5029       #E-FLD := 'EMPLOYER-GROUP-ID' 
5030       PERFORM ADD-ERROR 
5031       ESCAPE ROUTINE 
5032     END-NOREC 
5033     #GRP-FOUND := TRUE 
5034     #I := 1 
5035     HIS350A1.EMPLOYMENT-STATUS-OPTIONS(#I) := '1' 
5036     ADD 1 TO #I 
5037     IF TBL-PT-TEACHER = 'Y' 
5038       HIS350A1.EMPLOYMENT-STATUS-OPTIONS(#I) := '3' 
5039       ADD 1 TO #I 
5040       HIS350A1.EMPLOYMENT-STATUS-OPTIONS(#I) := '4' 
5041       ADD 1 TO #I 
5042       HIS350A1.EMPLOYMENT-STATUS-OPTIONS(#I) := '5' 
5043     END-IF 
5044     IF TBL-GROUP-COVERAGE-IND(*) = 'R' 
5045       HIS350A1.EMPLOYMENT-STATUS-OPTIONS(#I) := '2' 
5046       ADD 1 TO #I 
5047     END-IF 
5048     PERFORM CHECK-TABLE-FILE 
5049   END-FIND /* (5025) ftm1. TABLE-MAST 
5050 END-IF /* (5023) 
5051 END-SUBROUTINE /* (5021) SET-EMPLOYMENT-STATUS-OPTIONS 
5052 ************************************************************************ 
5053 DEFINE SUBROUTINE CHECK-TABLE-FILE 
5054 ************************************************************************ 
5055 IF NOT(HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P') 
5056     OR HIS350A1.FLEX-BENEFITS-IND = 'Y' 
5057   COMPRESS 'A1' HIS350A1.EMPLOYER-GROUP-ID INTO #TABLE-KEY LEAVING NO 
5058   FTM2. FIND TABLE-MAST WITH SP-TBL-GROUP-KEY = #TABLE-KEY 
5059     IF NO 
5060       ESCAPE BOTTOM(FTM2.) 
5061     END-NOREC 
5062     IF HIS350A1.EMPLOYMENT-STATUS = '15' OR = '20' OR = '25' 
5063         AND TABLE-MAST.TBL-PT-TEACHER NE 'Y' 
5064       COMPRESS 'Part-time teachers not allowed for group' 
5065         HIS350A1.EMPLOYER-GROUP-ID INTO #E-MSG 
5066       #E-FLD := 'EMPLOYMENT-STATUS' 
5067       PERFORM ADD-ERROR 
5068     END-IF 
5069     IF HIS350A1.EMPLOYMENT-STATUS = 'P' 
5070         AND TBL-GROUP-COVERAGE-IND(4) NE 'R' 
5071       COMPRESS '20 hour employee not allowed for group' 
5072         HIS350A1.EMPLOYER-GROUP-ID INTO #E-MSG 
5073       #E-FLD := 'EMPLOYMENT-STATUS' 
5074       PERFORM ADD-ERROR 
5075     END-IF 
5076     IF HIS350A1.FLEX-BENEFITS-IND = 'Y' 
5077         AND TABLE-MAST.TBL-GROUP-COVERAGE-IND (3) NE 'M' 
5078       COMPRESS 'Group ' HIS350A1.EMPLOYER-GROUP-ID 
5079         ' does not have Money Plus available' INTO #E-MSG 
5080       #E-FLD := 'FLEX-BENEFITS-IND' 
5081       PERFORM ADD-ERROR 
5082     END-IF 
5083   END-FIND /* (5058) ftm2. TABLE-MAST 
5084 END-IF /* (5055) 
5085 END-SUBROUTINE /* (5053) check-table-file 
5086 ************************************************************************ 
5087 DEFINE SUBROUTINE SET-PART-TIME-IND 
5088 ************************************************************************ 
5089 IF HIS350A1.EMPLOYMENT-STATUS NE ' ' 
5090     AND HIS350A1.TRXN-TYPE = 'EN' 
5091   DECIDE ON FIRST VALUE OF HIS350A1.EMPLOYMENT-STATUS 
5092     VALUE 'F' 
5093       HIS350A1.PART-TIME-IND := ' ' 
5094       HIS350A1.PART-TIME-SUBSCR := ' ' 
5095     VALUE 'P'   HIS350A1.PART-TIME-IND := 'Y' 
5096     VALUE '15'  HIS350A1.PART-TIME-SUBSCR := '1' 
5097     VALUE '20'  HIS350A1.PART-TIME-SUBSCR := '2' 
5098     VALUE '25'  HIS350A1.PART-TIME-SUBSCR := '3' 
5099     NONE VALUE  IGNORE 
5100   END-DECIDE 
5101 END-IF 
5102 END-SUBROUTINE /* (5087) SET-PART-TIME-IND 
5103 *********************************************************************** 
5104 DEFINE SUBROUTINE SUPPORTING-DOC 
5105 *********************************************************************** 
5106 DECIDE ON FIRST VALUE OF HIS350A1.CHANGE-REASON 
5107   VALUE 'CM' 
5108     #DOC-TYPE := 'CL' 
5109     PERFORM ADD-SUPPORTING-DOC 
5110   VALUE 'AD' 
5111     #DOC-TYPE := 'AD' 
5112     PERFORM ADD-SUPPORTING-DOC 
5113 * VALUE 'CU' /* gsd20070202b start 
5114 *   #DOC-TYPE := 'CU' 
5115 *   PERFORM ADD-SUPPORTING-DOC /* gsd20070202b end 
5116   VALUE 'DV' 
5117     #DOC-TYPE := 'DD' 
5118     PERFORM ADD-SUPPORTING-DOC 
5119   VALUE 'SE' 
5120     #DOC-TYPE := 'SS' 
5121     PERFORM ADD-SUPPORTING-DOC 
5122   VALUE 'GO' 
5123     #DOC-TYPE := 'GO' 
5124     PERFORM ADD-SUPPORTING-DOC 
5125   VALUE 'LO' 
5126     #DOC-TYPE := 'LO' 
5127     PERFORM ADD-SUPPORTING-DOC 
5128   VALUE 'CO', 'SO' 
5129     #DOC-TYPE := 'CO' 
5130     PERFORM ADD-SUPPORTING-DOC 
5131   VALUE 'CE' 
5132     IF HIS350A1.CHANGE-REASON-EXT = 'FT' 
5133       #DOC-TYPE := 'SC' 
5134       PERFORM ADD-SUPPORTING-DOC 
5135     ELSE 
5136       IF HIS350A1.CHANGE-REASON-EXT = 'AN' 
5137         #DOC-TYPE := 'CD' 
5138         PERFORM ADD-SUPPORTING-DOC 
5139       ELSE 
5140         IF HIS350A1.CHANGE-REASON-EXT = 'US' 
5141           #DOC-TYPE := 'VI' 
5142           PERFORM ADD-SUPPORTING-DOC 
5143         else /* gsd20070209a start 
5144           if his350a1.change-reason-ext = 'HH' or = 'US' 
5145 **  removed tricare dependent code issue 1062  mws20080526 
5146 **          IF HIS350A1.HLTH-PLAN-CATEGORY = MASK('HT'.) /* TriCare 
5147 **            #age1 := 21 
5148 **            #age2 := 23 
5149 **          else 
5150             #age1 := 19 
5151             #age2 := 24 
5152 **          end-if /* (5145) 
5153             for #i 1 15 
5154               if his350a1.dep-new-add-pending(#i) 
5155                 #DEP-AGE := (HIS350A1.EFFECTIVE-DATE-N - 
5156                   HIS350A1.DEP-DATE-OF-BIRTH-N(#I)) / 10000 
5157                 if #dep-age ge #age1 
5158                     and #dep-age le #age2 
5159                   #doc-type := 'SC' 
5160                   perform add-supporting-doc 
5161                   escape bottom 
5162                 end-if /* (5157) 
5163               end-if /* (5154) 
5164             end-for /* (5153) #i 
5165           end-if /* (5144) 
5166         END-IF 
5167       END-IF 
5168     END-IF 
5169   VALUE 'SL' 
5170     IF HIS350A1.CHANGE-REASON-EXT = 'AS' 
5171       #DOC-TYPE := 'TS' 
5172       PERFORM ADD-SUPPORTING-DOC 
5173     END-IF 
5174   VALUE 'OL' 
5175     IF HIS350A1.CHANGE-REASON-EXT = 'AM' 
5176       #DOC-TYPE := 'TH' 
5177       PERFORM ADD-SUPPORTING-DOC 
5178     END-IF 
5179   VALUE 'OP' 
5180     #DOC-TYPE := 'HM' 
5181     PERFORM ADD-SUPPORTING-DOC 
5182   VALUE 'DL' 
5183     IF HIS350A1.CHANGE-REASON-EXT = 'AM' 
5184       #DOC-TYPE := 'TH' 
5185       PERFORM ADD-SUPPORTING-DOC 
5186     END-IF 
5187   VALUE 'CC' 
5188     #DOC-TYPE := 'CC' 
5189     PERFORM ADD-SUPPORTING-DOC 
5190   value 'OE'                                    /* gsd20070925b start 
5191     for #i 1 15 
5192       if his350a1.dep-new-add-pending(#i) 
5193         #DEP-AGE := (HIS350A1.EFFECTIVE-DATE-N - 
5194           HIS350A1.DEP-DATE-OF-BIRTH-N(#I)) / 10000 
5195         if #dep-age ge 19 
5196             and #dep-age le 24 
5197           #doc-type := 'SC' 
5198           perform add-supporting-doc 
5199           escape bottom 
5200         end-if 
5201       end-if 
5202     end-for                                     /* gsd20070925b end 
5203   NONE IGNORE 
5204 END-DECIDE /* (5106) 
5205 END-SUBROUTINE /* (5104) supporting-doc 
5206 *********************************************************************** 
5207 DEFINE SUBROUTINE ADD-SUPPORTING-DOC 
5208 *********************************************************************** 
5209 F9. FOR #DOC 1 35 
5210   IF HIS350A1.SUPPORTING-DOC-TYPE(#DOC) = ' ' 
5211     ESCAPE BOTTOM(F9.) 
5212   ELSE 
5213     IF HIS350A1.SUPPORTING-DOC-TYPE(#DOC) = #DOC-TYPE 
5214         OR (#DOC-TYPE = 'AC' AND HIS350A1.SUPPORTING-DOC-TYPE(1) = 'AD') 
5215         OR (#DOC-TYPE = 'DS' AND HIS350A1.SUPPORTING-DOC-TYPE(1) = 'DD') 
5216 /* gsd20070202b start 
5217 *       OR (#DOC-TYPE = 'OC' AND HIS350A1.SUPPORTING-DOC-TYPE(1) = 'CU') 
5218 /* gsd20070202b end 
5219         OR (#DOC-TYPE = 'FT' OR = 'FN' 
5220         AND HIS350A1.SUPPORTING-DOC-TYPE(#doc) = 'SC' OR = 'CD') 
5221 /* MWS20080228 
5222         OR (#DOC-TYPE = 'SC' OR = 'CD' 
5223         AND HIS350A1.SUPPORTING-DOC-TYPE(#doc) = 'FN' OR = 'FT') 
5224       #SKIP := TRUE 
5225       ESCAPE BOTTOM(F9.) 
5226     END-IF 
5227   END-IF 
5228 END-FOR /* f9. (5209) 
5229 IF NOT #SKIP 
5230   HIS350A1.SUPPORTING-DOC-TYPE(#DOC) := #DOC-TYPE 
5231 END-IF 
5232 RESET #DOC-TYPE #SKIP 
5233 END-SUBROUTINE /* (5207) add-supporting-doc 
5234 *********************************************************************** 
5235 DEFINE SUBROUTINE CHECK-SUPP-DOC 
5236 *********************************************************************** 
5237 DECIDE FOR EVERY CONDITION /* supporting documentation 
5238   WHEN #DEP-RELATION = MASK(.'1B') /* Former Spouse 
5239 *     AND HIS350A1.ACTION = 'EN' 
5240 *   #DOC-TYPE := 'SO' 
5241 *   PERFORM ADD-SUPPORTING-DOC 
5242 /* gsd20070816a start 
5243     find (1) dep-supp-doc with dep-ssn = his350a1.dep-ssn(#i) 
5244         where dep-supp-doc.dep-subscriber-ssn = his350a1.ssn 
5245     end-find 
5246     if (dep-supp-doc.dep-relation ne mask(.'1B') /* gsd20080921 start 
5247         or HIS350A1.ACTION = 'EN') 
5248         and (his350a1.dep-hlth-pending-st(#i) = 'A1' 
5249         or (his350a1.dep-hlth-status(#i) = 'A1' 
5250         and his350a1.dep-hlth-pending-st(#i) = ' ')) 
5251         and (his350a1.dep-dntl-pending-st(#i) = 'A1' 
5252         or (his350a1.dep-dntl-status(#i) = 'A1' 
5253         and his350a1.dep-dntl-pending-st(#i) = ' ')) 
5254         and (his350a1.dep-ols-pending-st(#i) = 'A1' 
5255         or (his350a1.dep-ols-status(#i) = 'A1' 
5256         and his350a1.dep-ols-pending-st(#i) = ' ')) /* gsd20070921 end 
5257       #DOC-TYPE := 'SO' 
5258       PERFORM ADD-SUPPORTING-DOC 
5259     end-if 
5260 /* gsd20070816a end 
5261 * WHEN #DEP-RELATION = MASK(.'2C') /* Natural Child /* gsd20070202b start 
5262 *     AND HIS350A1.CHANGE-REASON NE 'CO' 
5263 *     AND HIS350A1.LAST-NAME <> HIS350A1.DEP-LAST-NAME(#I) 
5264 *     and HIS350A1.DEP-RELATION(#I) ne MASK(.'1'..) /* Not spouse 
5265 *   #DOC-TYPE := 'NC' 
5266 *   PERFORM ADD-SUPPORTING-DOC 
5267 * WHEN #DEP-RELATION = MASK(.'2F') /* Step Child 
5268 *   #DOC-TYPE := 'ST' 
5269 *   PERFORM ADD-SUPPORTING-DOC /* gsd20070202b end 
5270   WHEN #DEP-RELATION = MASK(.'2D') /* Adopted Child 
5271     if his350a1.change-reason = 'AR' or = 'BE' /*mws20080129 
5272       ignore 
5273     ELSE 
5274       #DOC-TYPE := 'AC' 
5275       PERFORM ADD-SUPPORTING-DOC 
5276     END-IF 
5277   WHEN #DEP-RELATION = MASK(.'2E') /* Temporary Custody 
5278     #DOC-TYPE := 'TC' 
5279     PERFORM ADD-SUPPORTING-DOC 
5280   WHEN #DEP-RELATION = MASK(.'2G') /* Foster Child 
5281     #DOC-TYPE := 'FC' 
5282     PERFORM ADD-SUPPORTING-DOC 
5283   WHEN #DEP-RELATION = MASK(.'2H') /* Other /* gsd20070202b start 
5284     #DOC-TYPE := 'OC' 
5285     PERFORM ADD-SUPPORTING-DOC/* gsd20070202b end 
5286   WHEN #DEP-ELIGIBILITY = MASK('4'.) /* Perminate Incapacitated Child 
5287     #DOC-TYPE := 'PI' 
5288     PERFORM ADD-SUPPORTING-DOC 
5289   WHEN #DEP-ELIGIBILITY = MASK('3'.) /* Tempory Incapacitated Child 
5290     #DOC-TYPE := 'TI' 
5291     PERFORM ADD-SUPPORTING-DOC 
5292   WHEN #DEP-ELIGIBILITY = MASK('2'.) /* Full time Studend under 25 
5293       and #student-cert-req = TRUE           /* gsd20070924a 
5294 **    and #no-student-cert-req = FALSE          /* gsd20070924a 
5295 **    and #orig-dep-eligibility = mask('2'.)  /* gsd20070913a 
5296     IF HIS350A1.HLTH-PLAN-CATEGORY = MASK('HT'.) /* TriCare 
5297       #DOC-TYPE := 'FT' 
5298       examine his350a1.supporting-doc-type(*) for 'FN' 
5299         giving index #doc 
5300       if #doc > 0 
5301         his350a1.supporting-doc-type(#doc) := 'FT' 
5302       else 
5303         PERFORM ADD-SUPPORTING-DOC 
5304       end-if 
5305     END-IF 
5306 /* gsd20070516a start 
5307     #DEP-AGE := (HIS350A1.EFFECTIVE-DATE-N - 
5308       HIS350A1.DEP-DATE-OF-BIRTH-N(#I)) / 10000 
5309     if (#dep-age > 18 and #dep-age < 22 
5310         and not(HIS350A1.HLTH-PLAN-CATEGORY = MASK('HT'.))) 
5311       IF NOT(HIS350A1.HLTH-PLAN-CATEGORY = MASK('HT'.)) /* Not TriCare 
5312         #DOC-TYPE := 'FN' 
5313         examine his350a1.supporting-doc-type(*) for 'FT' 
5314           giving index #doc 
5315         if #doc > 0 
5316           his350a1.supporting-doc-type(#doc) := 'FN' 
5317         else 
5318           PERFORM ADD-SUPPORTING-DOC 
5319         end-if 
5320       END-IF 
5321     end-if 
5322 /* gsd20050516a end 
5323   WHEN NONE  IGNORE 
5324 END-DECIDE /* (5274) 
5325 RESET #DOC-TYPE 
5326 END-SUBROUTINE /* (5235) check-supp-doc 
5327 *********************************************************************** 
5328 DEFINE SUBROUTINE CHECK-FOR-DECEASED 
5329 *********************************************************************** 
5330 DECIDE FOR FIRST CONDITION 
5331   WHEN SUBSCR-MAST.DL-STATUS = 'T1' 
5332       AND HIS350A1.DL-STATUS = 'A1' 
5333     #TYPE := 'Dependent Life (child)' 
5334     #E-FLD := 'DL-PLAN-CATEGORY' 
5335   WHEN SUBSCR-MAST.OLS-STATUS = 'T1' 
5336       AND HIS350A1.OLS-STATUS = 'A1' 
5337     #TYPE := 'Dependent Life (spouse)' 
5338     #E-FLD := 'OLS-PLAN-CATEGORY' 
5339   WHEN ANY 
5340     PERFORM CONFIRM-DECEASED 
5341     IF #DECEASED 
5342       IGNORE 
5343     ELSE 
5344       COMPRESS 'You are activating a' #TYPE 
5345         'terminated due to death.  Contact EIP if incorrect.' 
5346         INTO #E-MSG 
5347       PERFORM ADD-ERROR 
5348     END-IF 
5349   WHEN NONE IGNORE 
5350 END-DECIDE /* (5302) 
5351 END-SUBROUTINE /* (5301) check-for-deceased 
5352 *********************************************************************** 
5353 DEFINE SUBROUTINE CONFIRM-DECEASED 
5354 *********************************************************************** 
5355 FOR #I 1 15 
5356   IF HIS350A1.DEP-RELATION(#I) = MASK(.'2'..) 
5357       AND HIS350A1.DEP-DL-STATUS(#I) <> 'T1' 
5358     #DECEASED := FALSE 
5359     ESCAPE BOTTOM 
5360   ELSE 
5361     #DECEASED := TRUE 
5362   END-IF 
5363 END-FOR /* (5355) #i 
5364 IF #DECEASED 
5365   FD2. FIND DEPEND WITH DEP-SUBSCRIBER-SSN = HIS350A1.SSN 
5366     IF NO RECORD 
5367       ESCAPE BOTTOM(FD2.) 
5368     END-NOREC 
5369     IF DEPEND.DEP-RELATION = MASK(.'2'..) 
5370         AND DEPEND.DEP-DL-STATUS <> 'T1' 
5371       #DECEASED := FALSE 
5372     ELSE 
5373       #DECEASED := TRUE 
5374     END-IF 
5375   END-FIND /* (5365) fd2. depend 
5376 END-IF /* (5364) 
5377 END-SUBROUTINE /* (5353) confirm-deceased 
5378 *********************************************************************** 
5379 DEFINE SUBROUTINE PRE-LOAD-TRANSFER-COVERAGES 
5380 *********************************************************************** 
5381 #EFF-A := HIS350A1.EFFECTIVE-DATE-N 
5382 MOVE EDITED #EFF-A TO #EFF-D(EM=YYYYMMDD) 
5383 DECIDE FOR EVERY CONDITION 
5384   WHEN #EFF-D = SUBSCR-MAST.HLTH-EFF-DATE 
5385       AND HIS350A1.OTHER-HLTH-INS NE '+' /* Only run on first pass 
5386     HIS350A1.HLTH-STATUS := 'A1' 
5387     MOVE EDITED SUBSCR-MAST.HLTH-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5388     HIS350A1.HLTH-EFF-DATE-N := #WORK-N 
5389     IF HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
5390       HIS350A1.SL-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
5391       HIS350A1.LTD-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
5392     END-IF 
5393   WHEN #EFF-D = SUBSCR-MAST.HLTH-EFF-DATE 
5394       AND HIS350A1.HLTH-STATUS = 'A1' 
5395     #PLAN-CAT := SUBSCR-MAST.HLTH-PLAN-CATEGORY 
5396     #NEW-PLAN-CAT := HIS350A1.HLTH-PLAN-CATEGORY 
5397     IF #PLAN NE #NEW-PLAN 
5398       #W-MSG := 'Health Plan may change during a transfer ' 
5399         -'but Category must remain the same' 
5400       PERFORM ADD-WARNING 
5401     END-IF 
5402     IF #CAT NE #NEW-CAT 
5403       #E-MSG := 'Health Category cannot be changed during a transfer' 
5404       PERFORM ADD-ERROR 
5405     END-IF 
5406   when #EFF-D = SUBSCR-MAST.HLTH-EFF-DATE 
5407       and SUBSCR-MAST.HLTH-status = mask('T'.) 
5408       and his350a1.hlth-status ne 'A1' 
5409       and his350a1.subscr-transfer ne ' ' 
5410     #E-MSG := 'Health status cannot change to refused during a transfer' 
5411     PERFORM ADD-ERROR 
5412   WHEN HIS350A1.SUBSCR-TRANSFER NE 'A' 
5413       and HIS350A1.TRXN-TYPE = 'EN' 
5414       AND #EFF-D NE SUBSCR-MAST.HLTH-EFF-DATE 
5415     HIS350A1.HLTH-STATUS := SUBSCR-MAST.HLTH-STATUS 
5416     IF HIS350A1.HLTH-STATUS = ' ' 
5417       HIS350A1.HLTH-STATUS := 'T4' 
5418       HIS350A1.HLTH-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
5419       IF HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
5420         HIS350A1.SL-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
5421         HIS350A1.LTD-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
5422       END-IF 
5423     ELSE 
5424       MOVE EDITED SUBSCR-MAST.HLTH-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5425       HIS350A1.HLTH-EFF-DATE-N := #WORK-N 
5426       IF HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
5427         HIS350A1.SL-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
5428         HIS350A1.LTD-EFF-DATE-N := HIS350A1.HLTH-EFF-DATE-N 
5429       END-IF 
5430     END-IF 
5431   WHEN HIS350A1.SUBSCR-TRANSFER = 'A' 
5432     MOVE EDITED SUBSCR-MAST.HLTH-EFF-DATE(EM=MMDD) 
5433       TO #ORIG-MMDD 
5434     #NEW-DATE := HIS350A1.HLTH-EFF-DATE-N 
5435     IF #ORIG-MMDD = '0601' OR = '0701' OR = '0801' 
5436         AND #NEW-MMDD = '0701' OR = '0801' OR = '0901' 
5437       HIS350A1.HLTH-STATUS := 'A1' 
5438     ELSE 
5439       HIS350A1.HLTH-STATUS := SUBSCR-MAST.HLTH-STATUS 
5440     END-IF 
5441   WHEN #EFF-D = SUBSCR-MAST.DNTL-EFF-DATE 
5442       OR (#ORIG-MMDD = '0601' OR = '0701' OR = '0801' 
5443       AND #NEW-MMDD = '0701' OR = '0801' OR = '0901') 
5444     HIS350A1.DNTL-STATUS := 'A1' 
5445     MOVE EDITED SUBSCR-MAST.DNTL-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5446     HIS350A1.DNTL-EFF-DATE-N := #WORK-N 
5447   WHEN HIS350A1.SUBSCR-TRANSFER NE 'A' 
5448       AND #EFF-D NE SUBSCR-MAST.DNTL-EFF-DATE 
5449     HIS350A1.DNTL-STATUS := SUBSCR-MAST.DNTL-STATUS 
5450     IF HIS350A1.DNTL-STATUS = ' ' 
5451       HIS350A1.DNTL-STATUS := 'T4' 
5452       HIS350A1.DNTL-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
5453     ELSE 
5454       MOVE EDITED SUBSCR-MAST.DNTL-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5455       HIS350A1.DNTL-EFF-DATE-N := #WORK-N 
5456     END-IF 
5457   WHEN HIS350A1.SUBSCR-TRANSFER = 'A' 
5458     MOVE EDITED SUBSCR-MAST.DNTL-EFF-DATE(EM=MMDD) 
5459       TO #ORIG-MMDD 
5460     #NEW-DATE := HIS350A1.DNTL-EFF-DATE-N 
5461     IF #ORIG-MMDD = '0601' OR = '0701' OR = '0801' 
5462         AND #NEW-MMDD = '0701' OR = '0801' OR = '0901' 
5463       HIS350A1.DNTL-STATUS := 'A1' 
5464     ELSE 
5465       HIS350A1.DNTL-STATUS := 'T4' 
5466     END-IF 
5467   WHEN #EFF-D = SUBSCR-MAST.DNTP-EFF-DATE 
5468     HIS350A1.DNTP-STATUS := 'A1' 
5469     MOVE EDITED SUBSCR-MAST.DNTP-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5470     HIS350A1.DNTP-EFF-DATE-N := #WORK-N 
5471   WHEN #EFF-D NE SUBSCR-MAST.DNTP-EFF-DATE 
5472       AND HIS350A1.OTHER-HLTH-INS NE '+' /* Only run on first pass 
5473     HIS350A1.DNTP-STATUS := SUBSCR-MAST.DNTP-STATUS 
5474     MOVE EDITED SUBSCR-MAST.DNTP-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5475     HIS350A1.DNTP-EFF-DATE-N := #WORK-N 
5476   WHEN HIS350A1.SUBSCR-TRANSFER = 'A' 
5477     MOVE EDITED SUBSCR-MAST.DNTP-EFF-DATE(EM=MMDD) 
5478       TO #ORIG-MMDD 
5479     #NEW-DATE := HIS350A1.DNTP-EFF-DATE-N 
5480     IF #ORIG-MMDD = '0601' OR = '0701' OR = '0801' 
5481         AND #NEW-MMDD = '0701' OR = '0801' OR = '0901' 
5482       HIS350A1.DNTP-STATUS := 'A1' 
5483     ELSE 
5484       HIS350A1.DNTP-STATUS := 'T4' 
5485     END-IF 
5486   WHEN #EFF-D = SUBSCR-MAST.OL-EFF-DATE 
5487     HIS350A1.OL-STATUS := 'A1' 
5488     MOVE EDITED SUBSCR-MAST.OL-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5489     HIS350A1.OL-EFF-DATE-N := #WORK-N 
5490   WHEN HIS350A1.SUBSCR-TRANSFER NE 'A' 
5491       and HIS350A1.TRXN-TYPE = 'EN' 
5492       AND #EFF-D NE SUBSCR-MAST.OL-EFF-DATE 
5493     HIS350A1.OL-STATUS := SUBSCR-MAST.OL-STATUS 
5494     IF HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
5495       IF HIS350A1.OL-STATUS = ' ' 
5496         HIS350A1.OL-STATUS := 'T4' 
5497         HIS350A1.OL-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
5498       ELSE 
5499         MOVE EDITED SUBSCR-MAST.OL-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5500         HIS350A1.OL-EFF-DATE-N := #WORK-N 
5501       END-IF 
5502     END-IF 
5503   WHEN HIS350A1.SUBSCR-TRANSFER = 'A' 
5504     MOVE EDITED SUBSCR-MAST.OL-EFF-DATE(EM=MMDD) 
5505       TO #ORIG-MMDD 
5506     #NEW-DATE := HIS350A1.OL-EFF-DATE-N 
5507     IF #ORIG-MMDD = '0601' OR = '0701' OR = '0801' 
5508         AND #NEW-MMDD = '0701' OR = '0801' OR = '0901' 
5509       HIS350A1.OL-STATUS := 'A1' 
5510     ELSE 
5511       HIS350A1.OL-STATUS := 'T4' 
5512     END-IF 
5513   WHEN #EFF-D = SUBSCR-MAST.DL-EFF-DATE 
5514     HIS350A1.DL-STATUS := 'A1' 
5515     MOVE EDITED SUBSCR-MAST.DL-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5516     HIS350A1.DL-EFF-DATE-N := #WORK-N 
5517   WHEN HIS350A1.SUBSCR-TRANSFER NE 'A' 
5518       and HIS350A1.TRXN-TYPE = 'EN' 
5519       AND #EFF-D NE SUBSCR-MAST.DL-EFF-DATE 
5520     HIS350A1.DL-STATUS := SUBSCR-MAST.DL-STATUS 
5521     IF HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
5522       IF HIS350A1.DL-STATUS = ' ' 
5523         HIS350A1.DL-STATUS := 'T4' 
5524         HIS350A1.DL-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
5525       ELSE 
5526         MOVE EDITED SUBSCR-MAST.DL-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5527         HIS350A1.DL-EFF-DATE-N := #WORK-N 
5528       END-IF 
5529     END-IF 
5530   WHEN HIS350A1.SUBSCR-TRANSFER = 'A' 
5531     MOVE EDITED SUBSCR-MAST.DL-EFF-DATE(EM=MMDD) 
5532       TO #ORIG-MMDD 
5533     #NEW-DATE := HIS350A1.DL-EFF-DATE-N 
5534     IF #ORIG-MMDD = '0601' OR = '0701' OR = '0801' 
5535         AND #NEW-MMDD = '0701' OR = '0801' OR = '0901' 
5536       HIS350A1.DL-STATUS := 'A1' 
5537     ELSE 
5538       HIS350A1.DL-STATUS := 'T4' 
5539     END-IF 
5540   WHEN #EFF-D = SUBSCR-MAST.OLS-EFF-DATE 
5541     HIS350A1.OLS-STATUS := 'A1' 
5542     MOVE EDITED SUBSCR-MAST.OLS-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5543     HIS350A1.OLS-EFF-DATE-N := #WORK-N 
5544   WHEN HIS350A1.SUBSCR-TRANSFER NE 'A' 
5545       and HIS350A1.TRXN-TYPE = 'EN' 
5546       AND #EFF-D NE SUBSCR-MAST.OLS-EFF-DATE 
5547     HIS350A1.OLS-STATUS := SUBSCR-MAST.OLS-STATUS 
5548     IF HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
5549       IF HIS350A1.OLS-STATUS = ' ' OR = MASK('T'.) 
5550         HIS350A1.OLS-STATUS := 'T4' 
5551         HIS350A1.OLS-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
5552       ELSE 
5553         MOVE EDITED SUBSCR-MAST.OLS-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5554         HIS350A1.OLS-EFF-DATE-N := #WORK-N 
5555       END-IF 
5556     END-IF 
5557   WHEN HIS350A1.SUBSCR-TRANSFER = 'A' 
5558     MOVE EDITED SUBSCR-MAST.OLS-EFF-DATE(EM=MMDD) 
5559       TO #ORIG-MMDD 
5560     #NEW-DATE := HIS350A1.OLS-EFF-DATE-N 
5561     IF #ORIG-MMDD = '0601' OR = '0701' OR = '0801' 
5562         AND #NEW-MMDD = '0701' OR = '0801' OR = '0901' 
5563       HIS350A1.OLS-STATUS := 'A1' 
5564     ELSE 
5565       HIS350A1.OLS-STATUS := 'T4' 
5566     END-IF 
5567   WHEN #EFF-D = SUBSCR-MAST.SLTD-EFF-DATE 
5568     HIS350A1.SLTD-STATUS := 'A1' 
5569     MOVE EDITED SUBSCR-MAST.SLTD-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5570     HIS350A1.SLTD-EFF-DATE-N := #WORK-N 
5571   WHEN HIS350A1.SUBSCR-TRANSFER NE 'A' 
5572       and HIS350A1.TRXN-TYPE = 'EN' 
5573       AND #EFF-D NE SUBSCR-MAST.SLTD-EFF-DATE 
5574     HIS350A1.SLTD-STATUS := SUBSCR-MAST.SLTD-STATUS 
5575     IF HIS350A1.EMPLOYMENT-STATUS = 'F' OR = 'P' 
5576       IF HIS350A1.SLTD-STATUS = ' ' 
5577         HIS350A1.SLTD-STATUS := 'T4' 
5578         HIS350A1.SLTD-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
5579       ELSE 
5580         MOVE EDITED SUBSCR-MAST.SLTD-EFF-DATE(EM=YYYYMMDD) TO #WORK-A 
5581         HIS350A1.SLTD-EFF-DATE-N := #WORK-N 
5582       END-IF 
5583     END-IF 
5584   WHEN HIS350A1.SUBSCR-TRANSFER = 'A' 
5585     MOVE EDITED SUBSCR-MAST.SLTD-EFF-DATE(EM=MMDD) 
5586       TO #ORIG-MMDD 
5587     #NEW-DATE := HIS350A1.SLTD-EFF-DATE-N 
5588     IF #ORIG-MMDD = '0601' OR = '0701' OR = '0801' 
5589         AND #NEW-MMDD = '0701' OR = '0801' OR = '0901' 
5590       HIS350A1.SLTD-STATUS := 'A1' 
5591     ELSE 
5592       HIS350A1.SLTD-STATUS := 'T4' 
5593     END-IF 
5594   WHEN NONE  IGNORE 
5595 END-DECIDE /* (5383) 
5596 IF HIS350A1.DNTP-STATUS = ' ' 
5597   HIS350A1.DNTP-STATUS := 'T4' 
5598   HIS350A1.DNTP-EFF-DATE-N := HIS350A1.EFFECTIVE-DATE-N 
5599 END-IF 
5600 HIS350A1.OTHER-HLTH-INS := '+' /* No longer first pass 
5601 END-SUBROUTINE /* (5379) pre-load-transfer-coverages 
5602 *********************************************************************** 
5603 define subroutine get-ssn                       /* gsd20070731 
5604 *********************************************************************** 
5605 find subscr-bin with bin = his350a1.bin 
5606   his350a1.ssn := subscr-bin.ssn 
5607 end-find 
5608 end-subroutine /* (5603) get-ssn 
5609 END 
